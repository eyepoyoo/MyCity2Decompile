Shader "VacuumShaders/Curved World/Legacy Shader" {
Properties {
[CurvedWorldGearMenu]  V_CW_Label_Tag ("", Float) = 0
[CurvedWorldLabel]  V_CW_Label_UnityDefaults ("Default Visual Options", Float) = 0
[CurvedWorldLargeLabel]  V_CW_Label_Modes ("Modes", Float) = 0
[CurvedWorldRenderingMode]  V_CW_Rendering_Mode ("  Rendering", Float) = 0
[CurvedWorldTextureMixMode]  V_CW_Texture_Mix_Mode ("  Texture Mix", Float) = 0
[CurvedWorldLargeLabel]  V_CW_Label_Albedo ("Albedo", Float) = 0
 _Color ("  Color", Color) = (1,1,1,1)
 _MainTex ("  Map (RGB) RefStr & Gloss (A)", 2D) = "white" { }
[CurvedWorldUVScroll]  _V_CW_MainTex_Scroll ("    ", Vector) = (0,0,0,0)
[CurvedWorldLabel]  V_CW_Label_UnityDefaults ("Curved World Optionals", Float) = 0
[HideInInspector]  _V_CW_Rim_Color ("", Color) = (1,1,1,1)
[HideInInspector]  _V_CW_Rim_Bias ("", Range(-1,1)) = 0.2
[HideInInspector]  _V_CW_Rim_Power ("", Range(0.5,8)) = 3
[HideInInspector]  _EmissionMap ("", 2D) = "white" { }
[HideInInspector]  _EmissionColor ("", Color) = (1,1,1,1)
[HideInInspector]  _SpecColor ("", Color) = (0.5,0.5,0.5,1)
[HideInInspector]  _Shininess ("", Range(0.01,1)) = 0.078125
[HideInInspector]  _V_CW_ReflectColor ("", Color) = (1,1,1,1)
[HideInInspector]  _V_CW_ReflectStrengthAlphaOffset ("", Range(-1,1)) = 0
[HideInInspector]  _V_CW_Cube ("", CUBE) = "_Skybox" { }
[HideInInspector]  _V_CW_Fresnel_Power ("", Range(0.5,8)) = 1
[HideInInspector]  _V_CW_Fresnel_Bias ("", Range(-1,1)) = 0
[HideInInspector]  _V_CW_NormalMapStrength ("", Float) = 1
[HideInInspector]  _V_CW_NormalMap ("", 2D) = "bump" { }
[HideInInspector]  _V_CW_NormalMap_UV_Scale ("", Float) = 1
[HideInInspector]  _V_CW_SecondaryNormalMap ("", 2D) = "" { }
[HideInInspector]  _V_CW_SecondaryNormalMap_UV_Scale ("", Float) = 1
}
SubShader { 
 LOD 200
 Tags { "RenderType"="CurvedWorld_Opaque" "CurvedWorldTag"="Legacy Shader/Opaque/Diffuse" "CurvedWorldNoneRemoveableKeywords"="" "CurvedWorldAvailableOptions"="V_CW_REFLECTIVE;V_CW_VERTEX_COLOR;_EMISSION;V_CW_RIM;_NORMALMAP;V_CW_SPECULAR_HD;" }
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="CurvedWorld_Opaque" "CurvedWorldTag"="Legacy Shader/Opaque/Diffuse" "CurvedWorldNoneRemoveableKeywords"="" "CurvedWorldAvailableOptions"="V_CW_REFLECTIVE;V_CW_VERTEX_COLOR;_EMISSION;V_CW_RIM;_NORMALMAP;V_CW_SPECULAR_HD;" }
  GpuProgramID 7690
Program "vp" {
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  mediump vec3 normal_42;
					  normal_42 = worldNormal_1;
					  mediump vec3 x1_43;
					  mediump vec4 tmpvar_44;
					  tmpvar_44 = (normal_42.xyzz * normal_42.yzzx);
					  x1_43.x = dot (unity_SHBr, tmpvar_44);
					  x1_43.y = dot (unity_SHBg, tmpvar_44);
					  x1_43.z = dot (unity_SHBb, tmpvar_44);
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_TEXCOORD3 = (x1_43 + (unity_SHC.xyz * (
					    (normal_42.x * normal_42.x)
					   - 
					    (normal_42.y * normal_42.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  highp vec2 P_9;
					  P_9 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_8 = texture2D (_MainTex, P_9);
					  tmpvar_7 = (tmpvar_8.xyz * _Color.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_10;
					  normalWorld_10 = tmpvar_4;
					  mediump vec3 ambient_11;
					  mediump vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalWorld_10;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, tmpvar_12);
					  x_13.y = dot (unity_SHAg, tmpvar_12);
					  x_13.z = dot (unity_SHAb, tmpvar_12);
					  ambient_11 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_13)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_14;
					  lowp vec4 c_15;
					  lowp float diff_16;
					  mediump float tmpvar_17;
					  tmpvar_17 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_16 = tmpvar_17;
					  c_15.xyz = ((tmpvar_7 * tmpvar_1) * diff_16);
					  c_15.w = (tmpvar_8.w * _Color.w);
					  c_14.w = c_15.w;
					  c_14.xyz = (c_15.xyz + (tmpvar_7 * ambient_11));
					  c_3.xyz = c_14.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_44;
					  normal_44 = worldNormal_1;
					  mediump vec3 x1_45;
					  mediump vec4 tmpvar_46;
					  tmpvar_46 = (normal_44.xyzz * normal_44.yzzx);
					  x1_45.x = dot (unity_SHBr, tmpvar_46);
					  x1_45.y = dot (unity_SHBg, tmpvar_46);
					  x1_45.z = dot (unity_SHBb, tmpvar_46);
					  highp vec4 o_47;
					  highp vec4 tmpvar_48;
					  tmpvar_48 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_49;
					  tmpvar_49.x = tmpvar_48.x;
					  tmpvar_49.y = (tmpvar_48.y * _ProjectionParams.x);
					  o_47.xy = (tmpvar_49 + tmpvar_48.w);
					  o_47.zw = tmpvar_2.zw;
					  tmpvar_4 = o_47;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD3 = (x1_45 + (unity_SHC.xyz * (
					    (normal_44.x * normal_44.x)
					   - 
					    (normal_44.y * normal_44.y)
					  )));
					  xlv_TEXCOORD4 = tmpvar_4;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  lowp float tmpvar_11;
					  tmpvar_11 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 normalWorld_12;
					  normalWorld_12 = tmpvar_5;
					  mediump vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = normalWorld_12;
					  mediump vec3 x_16;
					  x_16.x = dot (unity_SHAr, tmpvar_15);
					  x_16.y = dot (unity_SHAg, tmpvar_15);
					  x_16.z = dot (unity_SHAb, tmpvar_15);
					  ambient_14 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_16)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_13;
					  lowp vec4 c_17;
					  lowp vec4 c_18;
					  lowp float diff_19;
					  mediump float tmpvar_20;
					  tmpvar_20 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_19 = tmpvar_20;
					  c_18.xyz = ((tmpvar_8 * tmpvar_13) * diff_19);
					  c_18.w = (tmpvar_9.w * _Color.w);
					  c_17.w = c_18.w;
					  c_17.xyz = (c_18.xyz + (tmpvar_8 * ambient_14));
					  c_4.xyz = c_17.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_2 = worldNormal_1;
					  highp vec3 lightColor0_44;
					  lightColor0_44 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_45;
					  lightColor1_45 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_46;
					  lightColor2_46 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_47;
					  lightColor3_47 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_48;
					  lightAttenSq_48 = unity_4LightAtten0;
					  highp vec3 normal_49;
					  normal_49 = worldNormal_1;
					  highp vec3 col_50;
					  highp vec4 ndotl_51;
					  highp vec4 lengthSq_52;
					  highp vec4 tmpvar_53;
					  tmpvar_53 = (unity_4LightPosX0 - tmpvar_39.x);
					  highp vec4 tmpvar_54;
					  tmpvar_54 = (unity_4LightPosY0 - tmpvar_39.y);
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosZ0 - tmpvar_39.z);
					  lengthSq_52 = (tmpvar_53 * tmpvar_53);
					  lengthSq_52 = (lengthSq_52 + (tmpvar_54 * tmpvar_54));
					  lengthSq_52 = (lengthSq_52 + (tmpvar_55 * tmpvar_55));
					  ndotl_51 = (tmpvar_53 * normal_49.x);
					  ndotl_51 = (ndotl_51 + (tmpvar_54 * normal_49.y));
					  ndotl_51 = (ndotl_51 + (tmpvar_55 * normal_49.z));
					  highp vec4 tmpvar_56;
					  tmpvar_56 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_51 * inversesqrt(lengthSq_52)));
					  ndotl_51 = tmpvar_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_56 * (1.0/((1.0 + 
					    (lengthSq_52 * lightAttenSq_48)
					  ))));
					  col_50 = (lightColor0_44 * tmpvar_57.x);
					  col_50 = (col_50 + (lightColor1_45 * tmpvar_57.y));
					  col_50 = (col_50 + (lightColor2_46 * tmpvar_57.z));
					  col_50 = (col_50 + (lightColor3_47 * tmpvar_57.w));
					  tmpvar_3 = col_50;
					  mediump vec3 normal_58;
					  normal_58 = worldNormal_1;
					  mediump vec3 ambient_59;
					  ambient_59 = (tmpvar_3 * ((tmpvar_3 * 
					    ((tmpvar_3 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_60;
					  mediump vec4 tmpvar_61;
					  tmpvar_61 = (normal_58.xyzz * normal_58.yzzx);
					  x1_60.x = dot (unity_SHBr, tmpvar_61);
					  x1_60.y = dot (unity_SHBg, tmpvar_61);
					  x1_60.z = dot (unity_SHBb, tmpvar_61);
					  ambient_59 = (ambient_59 + (x1_60 + (unity_SHC.xyz * 
					    ((normal_58.x * normal_58.x) - (normal_58.y * normal_58.y))
					  )));
					  tmpvar_3 = ambient_59;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = tmpvar_39;
					  xlv_TEXCOORD3 = ambient_59;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  highp vec2 P_9;
					  P_9 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_8 = texture2D (_MainTex, P_9);
					  tmpvar_7 = (tmpvar_8.xyz * _Color.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_10;
					  normalWorld_10 = tmpvar_4;
					  mediump vec3 ambient_11;
					  mediump vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalWorld_10;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, tmpvar_12);
					  x_13.y = dot (unity_SHAg, tmpvar_12);
					  x_13.z = dot (unity_SHAb, tmpvar_12);
					  ambient_11 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_13)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_14;
					  lowp vec4 c_15;
					  lowp float diff_16;
					  mediump float tmpvar_17;
					  tmpvar_17 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_16 = tmpvar_17;
					  c_15.xyz = ((tmpvar_7 * tmpvar_1) * diff_16);
					  c_15.w = (tmpvar_8.w * _Color.w);
					  c_14.w = c_15.w;
					  c_14.xyz = (c_15.xyz + (tmpvar_7 * ambient_11));
					  c_3.xyz = c_14.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_46;
					  lightColor0_46 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_47;
					  lightColor1_47 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_48;
					  lightColor2_48 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_49;
					  lightColor3_49 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_50;
					  lightAttenSq_50 = unity_4LightAtten0;
					  highp vec3 normal_51;
					  normal_51 = worldNormal_1;
					  highp vec3 col_52;
					  highp vec4 ndotl_53;
					  highp vec4 lengthSq_54;
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_54 = (tmpvar_55 * tmpvar_55);
					  lengthSq_54 = (lengthSq_54 + (tmpvar_56 * tmpvar_56));
					  lengthSq_54 = (lengthSq_54 + (tmpvar_57 * tmpvar_57));
					  ndotl_53 = (tmpvar_55 * normal_51.x);
					  ndotl_53 = (ndotl_53 + (tmpvar_56 * normal_51.y));
					  ndotl_53 = (ndotl_53 + (tmpvar_57 * normal_51.z));
					  highp vec4 tmpvar_58;
					  tmpvar_58 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_53 * inversesqrt(lengthSq_54)));
					  ndotl_53 = tmpvar_58;
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (tmpvar_58 * (1.0/((1.0 + 
					    (lengthSq_54 * lightAttenSq_50)
					  ))));
					  col_52 = (lightColor0_46 * tmpvar_59.x);
					  col_52 = (col_52 + (lightColor1_47 * tmpvar_59.y));
					  col_52 = (col_52 + (lightColor2_48 * tmpvar_59.z));
					  col_52 = (col_52 + (lightColor3_49 * tmpvar_59.w));
					  tmpvar_4 = col_52;
					  mediump vec3 normal_60;
					  normal_60 = worldNormal_1;
					  mediump vec3 ambient_61;
					  ambient_61 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_62;
					  mediump vec4 tmpvar_63;
					  tmpvar_63 = (normal_60.xyzz * normal_60.yzzx);
					  x1_62.x = dot (unity_SHBr, tmpvar_63);
					  x1_62.y = dot (unity_SHBg, tmpvar_63);
					  x1_62.z = dot (unity_SHBb, tmpvar_63);
					  ambient_61 = (ambient_61 + (x1_62 + (unity_SHC.xyz * 
					    ((normal_60.x * normal_60.x) - (normal_60.y * normal_60.y))
					  )));
					  tmpvar_4 = ambient_61;
					  highp vec4 o_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_66;
					  tmpvar_66.x = tmpvar_65.x;
					  tmpvar_66.y = (tmpvar_65.y * _ProjectionParams.x);
					  o_64.xy = (tmpvar_66 + tmpvar_65.w);
					  o_64.zw = tmpvar_2.zw;
					  tmpvar_5 = o_64;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_41;
					  xlv_TEXCOORD3 = ambient_61;
					  xlv_TEXCOORD4 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  lowp float tmpvar_11;
					  tmpvar_11 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 normalWorld_12;
					  normalWorld_12 = tmpvar_5;
					  mediump vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = normalWorld_12;
					  mediump vec3 x_16;
					  x_16.x = dot (unity_SHAr, tmpvar_15);
					  x_16.y = dot (unity_SHAg, tmpvar_15);
					  x_16.z = dot (unity_SHAb, tmpvar_15);
					  ambient_14 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_16)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_13;
					  lowp vec4 c_17;
					  lowp vec4 c_18;
					  lowp float diff_19;
					  mediump float tmpvar_20;
					  tmpvar_20 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_19 = tmpvar_20;
					  c_18.xyz = ((tmpvar_8 * tmpvar_13) * diff_19);
					  c_18.w = (tmpvar_9.w * _Color.w);
					  c_17.w = c_18.w;
					  c_17.xyz = (c_18.xyz + (tmpvar_8 * ambient_14));
					  c_4.xyz = c_17.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD3 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  highp vec2 P_9;
					  P_9 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_8 = texture2D (_MainTex, P_9);
					  tmpvar_7 = (tmpvar_8.xyz * _Color.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_10;
					  normalWorld_10 = tmpvar_4;
					  mediump vec3 ambient_11;
					  mediump vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalWorld_10;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, tmpvar_12);
					  x_13.y = dot (unity_SHAg, tmpvar_12);
					  x_13.z = dot (unity_SHAb, tmpvar_12);
					  ambient_11 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_13)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_14;
					  lowp vec4 c_15;
					  lowp float diff_16;
					  mediump float tmpvar_17;
					  tmpvar_17 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_16 = tmpvar_17;
					  c_15.xyz = ((tmpvar_7 * tmpvar_1) * diff_16);
					  c_15.w = (tmpvar_8.w * _Color.w);
					  c_14.w = c_15.w;
					  c_14.xyz = (c_15.xyz + (tmpvar_7 * ambient_11));
					  highp float tmpvar_18;
					  tmpvar_18 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_14.xyz, vec3(tmpvar_18));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_44;
					  normal_44 = worldNormal_1;
					  mediump vec3 x1_45;
					  mediump vec4 tmpvar_46;
					  tmpvar_46 = (normal_44.xyzz * normal_44.yzzx);
					  x1_45.x = dot (unity_SHBr, tmpvar_46);
					  x1_45.y = dot (unity_SHBg, tmpvar_46);
					  x1_45.z = dot (unity_SHBb, tmpvar_46);
					  highp vec4 o_47;
					  highp vec4 tmpvar_48;
					  tmpvar_48 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_49;
					  tmpvar_49.x = tmpvar_48.x;
					  tmpvar_49.y = (tmpvar_48.y * _ProjectionParams.x);
					  o_47.xy = (tmpvar_49 + tmpvar_48.w);
					  o_47.zw = tmpvar_2.zw;
					  tmpvar_4 = o_47;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD3 = (x1_45 + (unity_SHC.xyz * (
					    (normal_44.x * normal_44.x)
					   - 
					    (normal_44.y * normal_44.y)
					  )));
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  lowp float tmpvar_11;
					  tmpvar_11 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 normalWorld_12;
					  normalWorld_12 = tmpvar_5;
					  mediump vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = normalWorld_12;
					  mediump vec3 x_16;
					  x_16.x = dot (unity_SHAr, tmpvar_15);
					  x_16.y = dot (unity_SHAg, tmpvar_15);
					  x_16.z = dot (unity_SHAb, tmpvar_15);
					  ambient_14 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_16)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_13;
					  lowp vec4 c_17;
					  lowp vec4 c_18;
					  lowp float diff_19;
					  mediump float tmpvar_20;
					  tmpvar_20 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_19 = tmpvar_20;
					  c_18.xyz = ((tmpvar_8 * tmpvar_13) * diff_19);
					  c_18.w = (tmpvar_9.w * _Color.w);
					  c_17.w = c_18.w;
					  c_17.xyz = (c_18.xyz + (tmpvar_8 * ambient_14));
					  highp float tmpvar_21;
					  tmpvar_21 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_17.xyz, vec3(tmpvar_21));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_44;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_45;
					  lightColor0_45 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_46;
					  lightColor1_46 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_47;
					  lightColor2_47 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_48;
					  lightColor3_48 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_49;
					  lightAttenSq_49 = unity_4LightAtten0;
					  highp vec3 normal_50;
					  normal_50 = worldNormal_1;
					  highp vec3 col_51;
					  highp vec4 ndotl_52;
					  highp vec4 lengthSq_53;
					  highp vec4 tmpvar_54;
					  tmpvar_54 = (unity_4LightPosX0 - tmpvar_40.x);
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosY0 - tmpvar_40.y);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosZ0 - tmpvar_40.z);
					  lengthSq_53 = (tmpvar_54 * tmpvar_54);
					  lengthSq_53 = (lengthSq_53 + (tmpvar_55 * tmpvar_55));
					  lengthSq_53 = (lengthSq_53 + (tmpvar_56 * tmpvar_56));
					  ndotl_52 = (tmpvar_54 * normal_50.x);
					  ndotl_52 = (ndotl_52 + (tmpvar_55 * normal_50.y));
					  ndotl_52 = (ndotl_52 + (tmpvar_56 * normal_50.z));
					  highp vec4 tmpvar_57;
					  tmpvar_57 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_52 * inversesqrt(lengthSq_53)));
					  ndotl_52 = tmpvar_57;
					  highp vec4 tmpvar_58;
					  tmpvar_58 = (tmpvar_57 * (1.0/((1.0 + 
					    (lengthSq_53 * lightAttenSq_49)
					  ))));
					  col_51 = (lightColor0_45 * tmpvar_58.x);
					  col_51 = (col_51 + (lightColor1_46 * tmpvar_58.y));
					  col_51 = (col_51 + (lightColor2_47 * tmpvar_58.z));
					  col_51 = (col_51 + (lightColor3_48 * tmpvar_58.w));
					  tmpvar_4 = col_51;
					  mediump vec3 normal_59;
					  normal_59 = worldNormal_1;
					  mediump vec3 ambient_60;
					  ambient_60 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_61;
					  mediump vec4 tmpvar_62;
					  tmpvar_62 = (normal_59.xyzz * normal_59.yzzx);
					  x1_61.x = dot (unity_SHBr, tmpvar_62);
					  x1_61.y = dot (unity_SHBg, tmpvar_62);
					  x1_61.z = dot (unity_SHBb, tmpvar_62);
					  ambient_60 = (ambient_60 + (x1_61 + (unity_SHC.xyz * 
					    ((normal_59.x * normal_59.x) - (normal_59.y * normal_59.y))
					  )));
					  tmpvar_4 = ambient_60;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_40;
					  xlv_TEXCOORD3 = ambient_60;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  highp vec2 P_9;
					  P_9 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_8 = texture2D (_MainTex, P_9);
					  tmpvar_7 = (tmpvar_8.xyz * _Color.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_10;
					  normalWorld_10 = tmpvar_4;
					  mediump vec3 ambient_11;
					  mediump vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = normalWorld_10;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, tmpvar_12);
					  x_13.y = dot (unity_SHAg, tmpvar_12);
					  x_13.z = dot (unity_SHAb, tmpvar_12);
					  ambient_11 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_13)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_14;
					  lowp vec4 c_15;
					  lowp float diff_16;
					  mediump float tmpvar_17;
					  tmpvar_17 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_16 = tmpvar_17;
					  c_15.xyz = ((tmpvar_7 * tmpvar_1) * diff_16);
					  c_15.w = (tmpvar_8.w * _Color.w);
					  c_14.w = c_15.w;
					  c_14.xyz = (c_15.xyz + (tmpvar_7 * ambient_11));
					  highp float tmpvar_18;
					  tmpvar_18 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_14.xyz, vec3(tmpvar_18));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_46;
					  lightColor0_46 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_47;
					  lightColor1_47 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_48;
					  lightColor2_48 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_49;
					  lightColor3_49 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_50;
					  lightAttenSq_50 = unity_4LightAtten0;
					  highp vec3 normal_51;
					  normal_51 = worldNormal_1;
					  highp vec3 col_52;
					  highp vec4 ndotl_53;
					  highp vec4 lengthSq_54;
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_54 = (tmpvar_55 * tmpvar_55);
					  lengthSq_54 = (lengthSq_54 + (tmpvar_56 * tmpvar_56));
					  lengthSq_54 = (lengthSq_54 + (tmpvar_57 * tmpvar_57));
					  ndotl_53 = (tmpvar_55 * normal_51.x);
					  ndotl_53 = (ndotl_53 + (tmpvar_56 * normal_51.y));
					  ndotl_53 = (ndotl_53 + (tmpvar_57 * normal_51.z));
					  highp vec4 tmpvar_58;
					  tmpvar_58 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_53 * inversesqrt(lengthSq_54)));
					  ndotl_53 = tmpvar_58;
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (tmpvar_58 * (1.0/((1.0 + 
					    (lengthSq_54 * lightAttenSq_50)
					  ))));
					  col_52 = (lightColor0_46 * tmpvar_59.x);
					  col_52 = (col_52 + (lightColor1_47 * tmpvar_59.y));
					  col_52 = (col_52 + (lightColor2_48 * tmpvar_59.z));
					  col_52 = (col_52 + (lightColor3_49 * tmpvar_59.w));
					  tmpvar_4 = col_52;
					  mediump vec3 normal_60;
					  normal_60 = worldNormal_1;
					  mediump vec3 ambient_61;
					  ambient_61 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_62;
					  mediump vec4 tmpvar_63;
					  tmpvar_63 = (normal_60.xyzz * normal_60.yzzx);
					  x1_62.x = dot (unity_SHBr, tmpvar_63);
					  x1_62.y = dot (unity_SHBg, tmpvar_63);
					  x1_62.z = dot (unity_SHBb, tmpvar_63);
					  ambient_61 = (ambient_61 + (x1_62 + (unity_SHC.xyz * 
					    ((normal_60.x * normal_60.x) - (normal_60.y * normal_60.y))
					  )));
					  tmpvar_4 = ambient_61;
					  highp vec4 o_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_66;
					  tmpvar_66.x = tmpvar_65.x;
					  tmpvar_66.y = (tmpvar_65.y * _ProjectionParams.x);
					  o_64.xy = (tmpvar_66 + tmpvar_65.w);
					  o_64.zw = tmpvar_2.zw;
					  tmpvar_5 = o_64;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_41;
					  xlv_TEXCOORD3 = ambient_61;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  lowp float tmpvar_11;
					  tmpvar_11 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_11;
					  mediump vec3 normalWorld_12;
					  normalWorld_12 = tmpvar_5;
					  mediump vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = normalWorld_12;
					  mediump vec3 x_16;
					  x_16.x = dot (unity_SHAr, tmpvar_15);
					  x_16.y = dot (unity_SHAg, tmpvar_15);
					  x_16.z = dot (unity_SHAb, tmpvar_15);
					  ambient_14 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_16)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_13;
					  lowp vec4 c_17;
					  lowp vec4 c_18;
					  lowp float diff_19;
					  mediump float tmpvar_20;
					  tmpvar_20 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_19 = tmpvar_20;
					  c_18.xyz = ((tmpvar_8 * tmpvar_13) * diff_19);
					  c_18.w = (tmpvar_9.w * _Color.w);
					  c_17.w = c_18.w;
					  c_17.xyz = (c_18.xyz + (tmpvar_8 * ambient_14));
					  highp float tmpvar_21;
					  tmpvar_21 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_17.xyz, vec3(tmpvar_21));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  mediump vec3 normal_42;
					  normal_42 = worldNormal_1;
					  mediump vec3 x1_43;
					  mediump vec4 tmpvar_44;
					  tmpvar_44 = (normal_42.xyzz * normal_42.yzzx);
					  x1_43.x = dot (unity_SHBr, tmpvar_44);
					  x1_43.y = dot (unity_SHBg, tmpvar_44);
					  x1_43.z = dot (unity_SHBb, tmpvar_44);
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_TEXCOORD3 = (x1_43 + (unity_SHC.xyz * (
					    (normal_42.x * normal_42.x)
					   - 
					    (normal_42.y * normal_42.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_8;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  P_11 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_9 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_12;
					  normalWorld_12 = tmpvar_4;
					  mediump vec3 ambient_13;
					  mediump vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = normalWorld_12;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, tmpvar_14);
					  x_15.y = dot (unity_SHAg, tmpvar_14);
					  x_15.z = dot (unity_SHAb, tmpvar_14);
					  ambient_13 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_15)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_16;
					  viewDir_16 = worldViewDir_5;
					  lowp vec4 c_17;
					  lowp vec4 c_18;
					  highp float nh_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_20 = tmpvar_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_16)
					  )));
					  nh_19 = tmpvar_22;
					  mediump float y_23;
					  y_23 = (_Shininess * 128.0);
					  highp float tmpvar_24;
					  tmpvar_24 = (pow (nh_19, y_23) * tmpvar_10.w);
					  c_18.xyz = (((tmpvar_9 * tmpvar_1) * diff_20) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_24));
					  c_18.w = (tmpvar_10.w * _Color.w);
					  c_17.w = c_18.w;
					  c_17.xyz = (c_18.xyz + (tmpvar_9 * ambient_13));
					  c_3.xyz = c_17.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_44;
					  normal_44 = worldNormal_1;
					  mediump vec3 x1_45;
					  mediump vec4 tmpvar_46;
					  tmpvar_46 = (normal_44.xyzz * normal_44.yzzx);
					  x1_45.x = dot (unity_SHBr, tmpvar_46);
					  x1_45.y = dot (unity_SHBg, tmpvar_46);
					  x1_45.z = dot (unity_SHBb, tmpvar_46);
					  highp vec4 o_47;
					  highp vec4 tmpvar_48;
					  tmpvar_48 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_49;
					  tmpvar_49.x = tmpvar_48.x;
					  tmpvar_49.y = (tmpvar_48.y * _ProjectionParams.x);
					  o_47.xy = (tmpvar_49 + tmpvar_48.w);
					  o_47.zw = tmpvar_2.zw;
					  tmpvar_4 = o_47;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD3 = (x1_45 + (unity_SHC.xyz * (
					    (normal_44.x * normal_44.x)
					   - 
					    (normal_44.y * normal_44.y)
					  )));
					  xlv_TEXCOORD4 = tmpvar_4;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_6 = tmpvar_9;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_13;
					  mediump vec3 normalWorld_14;
					  normalWorld_14 = tmpvar_5;
					  mediump vec3 tmpvar_15;
					  tmpvar_15 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_14;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  ambient_16 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_18)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_15;
					  mediump vec3 viewDir_19;
					  viewDir_19 = worldViewDir_6;
					  lowp vec4 c_20;
					  lowp vec4 c_21;
					  highp float nh_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_23 = tmpvar_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (tmpvar_5, normalize(
					    (tmpvar_3 + viewDir_19)
					  )));
					  nh_22 = tmpvar_25;
					  mediump float y_26;
					  y_26 = (_Shininess * 128.0);
					  highp float tmpvar_27;
					  tmpvar_27 = (pow (nh_22, y_26) * tmpvar_11.w);
					  c_21.xyz = (((tmpvar_10 * tmpvar_15) * diff_23) + ((tmpvar_15 * _SpecColor.xyz) * tmpvar_27));
					  c_21.w = (tmpvar_11.w * _Color.w);
					  c_20.w = c_21.w;
					  c_20.xyz = (c_21.xyz + (tmpvar_10 * ambient_16));
					  c_4.xyz = c_20.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_2 = worldNormal_1;
					  highp vec3 lightColor0_44;
					  lightColor0_44 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_45;
					  lightColor1_45 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_46;
					  lightColor2_46 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_47;
					  lightColor3_47 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_48;
					  lightAttenSq_48 = unity_4LightAtten0;
					  highp vec3 normal_49;
					  normal_49 = worldNormal_1;
					  highp vec3 col_50;
					  highp vec4 ndotl_51;
					  highp vec4 lengthSq_52;
					  highp vec4 tmpvar_53;
					  tmpvar_53 = (unity_4LightPosX0 - tmpvar_39.x);
					  highp vec4 tmpvar_54;
					  tmpvar_54 = (unity_4LightPosY0 - tmpvar_39.y);
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosZ0 - tmpvar_39.z);
					  lengthSq_52 = (tmpvar_53 * tmpvar_53);
					  lengthSq_52 = (lengthSq_52 + (tmpvar_54 * tmpvar_54));
					  lengthSq_52 = (lengthSq_52 + (tmpvar_55 * tmpvar_55));
					  ndotl_51 = (tmpvar_53 * normal_49.x);
					  ndotl_51 = (ndotl_51 + (tmpvar_54 * normal_49.y));
					  ndotl_51 = (ndotl_51 + (tmpvar_55 * normal_49.z));
					  highp vec4 tmpvar_56;
					  tmpvar_56 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_51 * inversesqrt(lengthSq_52)));
					  ndotl_51 = tmpvar_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_56 * (1.0/((1.0 + 
					    (lengthSq_52 * lightAttenSq_48)
					  ))));
					  col_50 = (lightColor0_44 * tmpvar_57.x);
					  col_50 = (col_50 + (lightColor1_45 * tmpvar_57.y));
					  col_50 = (col_50 + (lightColor2_46 * tmpvar_57.z));
					  col_50 = (col_50 + (lightColor3_47 * tmpvar_57.w));
					  tmpvar_3 = col_50;
					  mediump vec3 normal_58;
					  normal_58 = worldNormal_1;
					  mediump vec3 ambient_59;
					  ambient_59 = (tmpvar_3 * ((tmpvar_3 * 
					    ((tmpvar_3 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_60;
					  mediump vec4 tmpvar_61;
					  tmpvar_61 = (normal_58.xyzz * normal_58.yzzx);
					  x1_60.x = dot (unity_SHBr, tmpvar_61);
					  x1_60.y = dot (unity_SHBg, tmpvar_61);
					  x1_60.z = dot (unity_SHBb, tmpvar_61);
					  ambient_59 = (ambient_59 + (x1_60 + (unity_SHC.xyz * 
					    ((normal_58.x * normal_58.x) - (normal_58.y * normal_58.y))
					  )));
					  tmpvar_3 = ambient_59;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = tmpvar_39;
					  xlv_TEXCOORD3 = ambient_59;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_8;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  P_11 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_9 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_12;
					  normalWorld_12 = tmpvar_4;
					  mediump vec3 ambient_13;
					  mediump vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = normalWorld_12;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, tmpvar_14);
					  x_15.y = dot (unity_SHAg, tmpvar_14);
					  x_15.z = dot (unity_SHAb, tmpvar_14);
					  ambient_13 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_15)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_16;
					  viewDir_16 = worldViewDir_5;
					  lowp vec4 c_17;
					  lowp vec4 c_18;
					  highp float nh_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_20 = tmpvar_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_16)
					  )));
					  nh_19 = tmpvar_22;
					  mediump float y_23;
					  y_23 = (_Shininess * 128.0);
					  highp float tmpvar_24;
					  tmpvar_24 = (pow (nh_19, y_23) * tmpvar_10.w);
					  c_18.xyz = (((tmpvar_9 * tmpvar_1) * diff_20) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_24));
					  c_18.w = (tmpvar_10.w * _Color.w);
					  c_17.w = c_18.w;
					  c_17.xyz = (c_18.xyz + (tmpvar_9 * ambient_13));
					  c_3.xyz = c_17.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_46;
					  lightColor0_46 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_47;
					  lightColor1_47 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_48;
					  lightColor2_48 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_49;
					  lightColor3_49 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_50;
					  lightAttenSq_50 = unity_4LightAtten0;
					  highp vec3 normal_51;
					  normal_51 = worldNormal_1;
					  highp vec3 col_52;
					  highp vec4 ndotl_53;
					  highp vec4 lengthSq_54;
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_54 = (tmpvar_55 * tmpvar_55);
					  lengthSq_54 = (lengthSq_54 + (tmpvar_56 * tmpvar_56));
					  lengthSq_54 = (lengthSq_54 + (tmpvar_57 * tmpvar_57));
					  ndotl_53 = (tmpvar_55 * normal_51.x);
					  ndotl_53 = (ndotl_53 + (tmpvar_56 * normal_51.y));
					  ndotl_53 = (ndotl_53 + (tmpvar_57 * normal_51.z));
					  highp vec4 tmpvar_58;
					  tmpvar_58 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_53 * inversesqrt(lengthSq_54)));
					  ndotl_53 = tmpvar_58;
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (tmpvar_58 * (1.0/((1.0 + 
					    (lengthSq_54 * lightAttenSq_50)
					  ))));
					  col_52 = (lightColor0_46 * tmpvar_59.x);
					  col_52 = (col_52 + (lightColor1_47 * tmpvar_59.y));
					  col_52 = (col_52 + (lightColor2_48 * tmpvar_59.z));
					  col_52 = (col_52 + (lightColor3_49 * tmpvar_59.w));
					  tmpvar_4 = col_52;
					  mediump vec3 normal_60;
					  normal_60 = worldNormal_1;
					  mediump vec3 ambient_61;
					  ambient_61 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_62;
					  mediump vec4 tmpvar_63;
					  tmpvar_63 = (normal_60.xyzz * normal_60.yzzx);
					  x1_62.x = dot (unity_SHBr, tmpvar_63);
					  x1_62.y = dot (unity_SHBg, tmpvar_63);
					  x1_62.z = dot (unity_SHBb, tmpvar_63);
					  ambient_61 = (ambient_61 + (x1_62 + (unity_SHC.xyz * 
					    ((normal_60.x * normal_60.x) - (normal_60.y * normal_60.y))
					  )));
					  tmpvar_4 = ambient_61;
					  highp vec4 o_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_66;
					  tmpvar_66.x = tmpvar_65.x;
					  tmpvar_66.y = (tmpvar_65.y * _ProjectionParams.x);
					  o_64.xy = (tmpvar_66 + tmpvar_65.w);
					  o_64.zw = tmpvar_2.zw;
					  tmpvar_5 = o_64;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_41;
					  xlv_TEXCOORD3 = ambient_61;
					  xlv_TEXCOORD4 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_6 = tmpvar_9;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_13;
					  mediump vec3 normalWorld_14;
					  normalWorld_14 = tmpvar_5;
					  mediump vec3 tmpvar_15;
					  tmpvar_15 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_14;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  ambient_16 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_18)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_15;
					  mediump vec3 viewDir_19;
					  viewDir_19 = worldViewDir_6;
					  lowp vec4 c_20;
					  lowp vec4 c_21;
					  highp float nh_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_23 = tmpvar_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (tmpvar_5, normalize(
					    (tmpvar_3 + viewDir_19)
					  )));
					  nh_22 = tmpvar_25;
					  mediump float y_26;
					  y_26 = (_Shininess * 128.0);
					  highp float tmpvar_27;
					  tmpvar_27 = (pow (nh_22, y_26) * tmpvar_11.w);
					  c_21.xyz = (((tmpvar_10 * tmpvar_15) * diff_23) + ((tmpvar_15 * _SpecColor.xyz) * tmpvar_27));
					  c_21.w = (tmpvar_11.w * _Color.w);
					  c_20.w = c_21.w;
					  c_20.xyz = (c_21.xyz + (tmpvar_10 * ambient_16));
					  c_4.xyz = c_20.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD3 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_8;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  P_11 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_9 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_12;
					  normalWorld_12 = tmpvar_4;
					  mediump vec3 ambient_13;
					  mediump vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = normalWorld_12;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, tmpvar_14);
					  x_15.y = dot (unity_SHAg, tmpvar_14);
					  x_15.z = dot (unity_SHAb, tmpvar_14);
					  ambient_13 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_15)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_16;
					  viewDir_16 = worldViewDir_5;
					  lowp vec4 c_17;
					  lowp vec4 c_18;
					  highp float nh_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_20 = tmpvar_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_16)
					  )));
					  nh_19 = tmpvar_22;
					  mediump float y_23;
					  y_23 = (_Shininess * 128.0);
					  highp float tmpvar_24;
					  tmpvar_24 = (pow (nh_19, y_23) * tmpvar_10.w);
					  c_18.xyz = (((tmpvar_9 * tmpvar_1) * diff_20) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_24));
					  c_18.w = (tmpvar_10.w * _Color.w);
					  c_17.w = c_18.w;
					  c_17.xyz = (c_18.xyz + (tmpvar_9 * ambient_13));
					  highp float tmpvar_25;
					  tmpvar_25 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_17.xyz, vec3(tmpvar_25));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_44;
					  normal_44 = worldNormal_1;
					  mediump vec3 x1_45;
					  mediump vec4 tmpvar_46;
					  tmpvar_46 = (normal_44.xyzz * normal_44.yzzx);
					  x1_45.x = dot (unity_SHBr, tmpvar_46);
					  x1_45.y = dot (unity_SHBg, tmpvar_46);
					  x1_45.z = dot (unity_SHBb, tmpvar_46);
					  highp vec4 o_47;
					  highp vec4 tmpvar_48;
					  tmpvar_48 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_49;
					  tmpvar_49.x = tmpvar_48.x;
					  tmpvar_49.y = (tmpvar_48.y * _ProjectionParams.x);
					  o_47.xy = (tmpvar_49 + tmpvar_48.w);
					  o_47.zw = tmpvar_2.zw;
					  tmpvar_4 = o_47;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD3 = (x1_45 + (unity_SHC.xyz * (
					    (normal_44.x * normal_44.x)
					   - 
					    (normal_44.y * normal_44.y)
					  )));
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_6 = tmpvar_9;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_13;
					  mediump vec3 normalWorld_14;
					  normalWorld_14 = tmpvar_5;
					  mediump vec3 tmpvar_15;
					  tmpvar_15 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_14;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  ambient_16 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_18)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_15;
					  mediump vec3 viewDir_19;
					  viewDir_19 = worldViewDir_6;
					  lowp vec4 c_20;
					  lowp vec4 c_21;
					  highp float nh_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_23 = tmpvar_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (tmpvar_5, normalize(
					    (tmpvar_3 + viewDir_19)
					  )));
					  nh_22 = tmpvar_25;
					  mediump float y_26;
					  y_26 = (_Shininess * 128.0);
					  highp float tmpvar_27;
					  tmpvar_27 = (pow (nh_22, y_26) * tmpvar_11.w);
					  c_21.xyz = (((tmpvar_10 * tmpvar_15) * diff_23) + ((tmpvar_15 * _SpecColor.xyz) * tmpvar_27));
					  c_21.w = (tmpvar_11.w * _Color.w);
					  c_20.w = c_21.w;
					  c_20.xyz = (c_21.xyz + (tmpvar_10 * ambient_16));
					  highp float tmpvar_28;
					  tmpvar_28 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_20.xyz, vec3(tmpvar_28));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_44;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_45;
					  lightColor0_45 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_46;
					  lightColor1_46 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_47;
					  lightColor2_47 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_48;
					  lightColor3_48 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_49;
					  lightAttenSq_49 = unity_4LightAtten0;
					  highp vec3 normal_50;
					  normal_50 = worldNormal_1;
					  highp vec3 col_51;
					  highp vec4 ndotl_52;
					  highp vec4 lengthSq_53;
					  highp vec4 tmpvar_54;
					  tmpvar_54 = (unity_4LightPosX0 - tmpvar_40.x);
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosY0 - tmpvar_40.y);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosZ0 - tmpvar_40.z);
					  lengthSq_53 = (tmpvar_54 * tmpvar_54);
					  lengthSq_53 = (lengthSq_53 + (tmpvar_55 * tmpvar_55));
					  lengthSq_53 = (lengthSq_53 + (tmpvar_56 * tmpvar_56));
					  ndotl_52 = (tmpvar_54 * normal_50.x);
					  ndotl_52 = (ndotl_52 + (tmpvar_55 * normal_50.y));
					  ndotl_52 = (ndotl_52 + (tmpvar_56 * normal_50.z));
					  highp vec4 tmpvar_57;
					  tmpvar_57 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_52 * inversesqrt(lengthSq_53)));
					  ndotl_52 = tmpvar_57;
					  highp vec4 tmpvar_58;
					  tmpvar_58 = (tmpvar_57 * (1.0/((1.0 + 
					    (lengthSq_53 * lightAttenSq_49)
					  ))));
					  col_51 = (lightColor0_45 * tmpvar_58.x);
					  col_51 = (col_51 + (lightColor1_46 * tmpvar_58.y));
					  col_51 = (col_51 + (lightColor2_47 * tmpvar_58.z));
					  col_51 = (col_51 + (lightColor3_48 * tmpvar_58.w));
					  tmpvar_4 = col_51;
					  mediump vec3 normal_59;
					  normal_59 = worldNormal_1;
					  mediump vec3 ambient_60;
					  ambient_60 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_61;
					  mediump vec4 tmpvar_62;
					  tmpvar_62 = (normal_59.xyzz * normal_59.yzzx);
					  x1_61.x = dot (unity_SHBr, tmpvar_62);
					  x1_61.y = dot (unity_SHBg, tmpvar_62);
					  x1_61.z = dot (unity_SHBb, tmpvar_62);
					  ambient_60 = (ambient_60 + (x1_61 + (unity_SHC.xyz * 
					    ((normal_59.x * normal_59.x) - (normal_59.y * normal_59.y))
					  )));
					  tmpvar_4 = ambient_60;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_40;
					  xlv_TEXCOORD3 = ambient_60;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_8;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  P_11 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_9 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_12;
					  normalWorld_12 = tmpvar_4;
					  mediump vec3 ambient_13;
					  mediump vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = normalWorld_12;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, tmpvar_14);
					  x_15.y = dot (unity_SHAg, tmpvar_14);
					  x_15.z = dot (unity_SHAb, tmpvar_14);
					  ambient_13 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_15)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_16;
					  viewDir_16 = worldViewDir_5;
					  lowp vec4 c_17;
					  lowp vec4 c_18;
					  highp float nh_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_20 = tmpvar_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_16)
					  )));
					  nh_19 = tmpvar_22;
					  mediump float y_23;
					  y_23 = (_Shininess * 128.0);
					  highp float tmpvar_24;
					  tmpvar_24 = (pow (nh_19, y_23) * tmpvar_10.w);
					  c_18.xyz = (((tmpvar_9 * tmpvar_1) * diff_20) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_24));
					  c_18.w = (tmpvar_10.w * _Color.w);
					  c_17.w = c_18.w;
					  c_17.xyz = (c_18.xyz + (tmpvar_9 * ambient_13));
					  highp float tmpvar_25;
					  tmpvar_25 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_17.xyz, vec3(tmpvar_25));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_46;
					  lightColor0_46 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_47;
					  lightColor1_47 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_48;
					  lightColor2_48 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_49;
					  lightColor3_49 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_50;
					  lightAttenSq_50 = unity_4LightAtten0;
					  highp vec3 normal_51;
					  normal_51 = worldNormal_1;
					  highp vec3 col_52;
					  highp vec4 ndotl_53;
					  highp vec4 lengthSq_54;
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_54 = (tmpvar_55 * tmpvar_55);
					  lengthSq_54 = (lengthSq_54 + (tmpvar_56 * tmpvar_56));
					  lengthSq_54 = (lengthSq_54 + (tmpvar_57 * tmpvar_57));
					  ndotl_53 = (tmpvar_55 * normal_51.x);
					  ndotl_53 = (ndotl_53 + (tmpvar_56 * normal_51.y));
					  ndotl_53 = (ndotl_53 + (tmpvar_57 * normal_51.z));
					  highp vec4 tmpvar_58;
					  tmpvar_58 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_53 * inversesqrt(lengthSq_54)));
					  ndotl_53 = tmpvar_58;
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (tmpvar_58 * (1.0/((1.0 + 
					    (lengthSq_54 * lightAttenSq_50)
					  ))));
					  col_52 = (lightColor0_46 * tmpvar_59.x);
					  col_52 = (col_52 + (lightColor1_47 * tmpvar_59.y));
					  col_52 = (col_52 + (lightColor2_48 * tmpvar_59.z));
					  col_52 = (col_52 + (lightColor3_49 * tmpvar_59.w));
					  tmpvar_4 = col_52;
					  mediump vec3 normal_60;
					  normal_60 = worldNormal_1;
					  mediump vec3 ambient_61;
					  ambient_61 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_62;
					  mediump vec4 tmpvar_63;
					  tmpvar_63 = (normal_60.xyzz * normal_60.yzzx);
					  x1_62.x = dot (unity_SHBr, tmpvar_63);
					  x1_62.y = dot (unity_SHBg, tmpvar_63);
					  x1_62.z = dot (unity_SHBb, tmpvar_63);
					  ambient_61 = (ambient_61 + (x1_62 + (unity_SHC.xyz * 
					    ((normal_60.x * normal_60.x) - (normal_60.y * normal_60.y))
					  )));
					  tmpvar_4 = ambient_61;
					  highp vec4 o_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_66;
					  tmpvar_66.x = tmpvar_65.x;
					  tmpvar_66.y = (tmpvar_65.y * _ProjectionParams.x);
					  o_64.xy = (tmpvar_66 + tmpvar_65.w);
					  o_64.zw = tmpvar_2.zw;
					  tmpvar_5 = o_64;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_41;
					  xlv_TEXCOORD3 = ambient_61;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_6 = tmpvar_9;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_13;
					  mediump vec3 normalWorld_14;
					  normalWorld_14 = tmpvar_5;
					  mediump vec3 tmpvar_15;
					  tmpvar_15 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_14;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  ambient_16 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_18)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_15;
					  mediump vec3 viewDir_19;
					  viewDir_19 = worldViewDir_6;
					  lowp vec4 c_20;
					  lowp vec4 c_21;
					  highp float nh_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_23 = tmpvar_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (tmpvar_5, normalize(
					    (tmpvar_3 + viewDir_19)
					  )));
					  nh_22 = tmpvar_25;
					  mediump float y_26;
					  y_26 = (_Shininess * 128.0);
					  highp float tmpvar_27;
					  tmpvar_27 = (pow (nh_22, y_26) * tmpvar_11.w);
					  c_21.xyz = (((tmpvar_10 * tmpvar_15) * diff_23) + ((tmpvar_15 * _SpecColor.xyz) * tmpvar_27));
					  c_21.w = (tmpvar_11.w * _Color.w);
					  c_20.w = c_21.w;
					  c_20.xyz = (c_21.xyz + (tmpvar_10 * ambient_16));
					  highp float tmpvar_28;
					  tmpvar_28 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_20.xyz, vec3(tmpvar_28));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  tmpvar_48.w = tmpvar_39.x;
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  tmpvar_49.w = tmpvar_39.y;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  tmpvar_50.w = tmpvar_39.z;
					  mediump vec3 normal_51;
					  normal_51 = worldNormal_3;
					  mediump vec3 x1_52;
					  mediump vec4 tmpvar_53;
					  tmpvar_53 = (normal_51.xyzz * normal_51.yzzx);
					  x1_52.x = dot (unity_SHBr, tmpvar_53);
					  x1_52.y = dot (unity_SHBg, tmpvar_53);
					  x1_52.z = dot (unity_SHBb, tmpvar_53);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (x1_52 + (unity_SHC.xyz * (
					    (normal_51.x * normal_51.x)
					   - 
					    (normal_51.y * normal_51.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7.x = xlv_TEXCOORD1.w;
					  tmpvar_7.y = xlv_TEXCOORD2.w;
					  tmpvar_7.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - tmpvar_7));
					  worldViewDir_5 = tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD1.xyz, tmpvar_11);
					  worldN_3.x = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD2.xyz, tmpvar_11);
					  worldN_3.y = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD3.xyz, tmpvar_11);
					  worldN_3.z = tmpvar_21;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_22;
					  normalWorld_22 = worldN_3;
					  mediump vec3 ambient_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = normalWorld_22;
					  mediump vec3 x_25;
					  x_25.x = dot (unity_SHAr, tmpvar_24);
					  x_25.y = dot (unity_SHAg, tmpvar_24);
					  x_25.z = dot (unity_SHAb, tmpvar_24);
					  ambient_23 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_25)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_26;
					  viewDir_26 = worldViewDir_5;
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  highp float nh_29;
					  lowp float diff_30;
					  mediump float tmpvar_31;
					  tmpvar_31 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_30 = tmpvar_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_26)
					  )));
					  nh_29 = tmpvar_32;
					  mediump float y_33;
					  y_33 = (_Shininess * 128.0);
					  highp float tmpvar_34;
					  tmpvar_34 = (pow (nh_29, y_33) * tmpvar_12.w);
					  c_28.xyz = (((tmpvar_10 * tmpvar_1) * diff_30) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_34));
					  c_28.w = (tmpvar_12.w * _Color.w);
					  c_27.w = c_28.w;
					  c_27.xyz = (c_28.xyz + (tmpvar_10 * ambient_23));
					  c_4.xyz = c_27.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  mediump vec3 normal_53;
					  normal_53 = worldNormal_3;
					  mediump vec3 x1_54;
					  mediump vec4 tmpvar_55;
					  tmpvar_55 = (normal_53.xyzz * normal_53.yzzx);
					  x1_54.x = dot (unity_SHBr, tmpvar_55);
					  x1_54.y = dot (unity_SHBg, tmpvar_55);
					  x1_54.z = dot (unity_SHBb, tmpvar_55);
					  highp vec4 o_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_58;
					  tmpvar_58.x = tmpvar_57.x;
					  tmpvar_58.y = (tmpvar_57.y * _ProjectionParams.x);
					  o_56.xy = (tmpvar_58 + tmpvar_57.w);
					  o_56.zw = tmpvar_4.zw;
					  tmpvar_5 = o_56;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_TEXCOORD4 = (x1_54 + (unity_SHC.xyz * (
					    (normal_53.x * normal_53.x)
					   - 
					    (normal_53.y * normal_53.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_6 = tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  highp vec2 tmpvar_15;
					  tmpvar_15 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_14 = (xlv_TEXCOORD0 + tmpvar_15);
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_11 = (tmpvar_13.xyz * _Color.xyz);
					  highp vec2 P_16;
					  P_16 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_15);
					  lowp vec3 normal_17;
					  normal_17.xy = ((texture2D (_V_CW_NormalMap, P_16).wy * 2.0) - 1.0);
					  normal_17.z = sqrt((1.0 - clamp (
					    dot (normal_17.xy, normal_17.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_18;
					  tmpvar_18.xy = (normal_17.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_18.z = normal_17.z;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = normalize(tmpvar_18);
					  tmpvar_12 = tmpvar_19;
					  lowp float tmpvar_20;
					  tmpvar_20 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_4.x = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_4.y = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_4.z = tmpvar_23;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_20;
					  mediump vec3 normalWorld_24;
					  normalWorld_24 = worldN_4;
					  mediump vec3 tmpvar_25;
					  tmpvar_25 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_26;
					  mediump vec4 tmpvar_27;
					  tmpvar_27.w = 1.0;
					  tmpvar_27.xyz = normalWorld_24;
					  mediump vec3 x_28;
					  x_28.x = dot (unity_SHAr, tmpvar_27);
					  x_28.y = dot (unity_SHAg, tmpvar_27);
					  x_28.z = dot (unity_SHAb, tmpvar_27);
					  ambient_26 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_25;
					  mediump vec3 viewDir_29;
					  viewDir_29 = worldViewDir_6;
					  lowp vec4 c_30;
					  lowp vec4 c_31;
					  highp float nh_32;
					  lowp float diff_33;
					  mediump float tmpvar_34;
					  tmpvar_34 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_33 = tmpvar_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_29)
					  )));
					  nh_32 = tmpvar_35;
					  mediump float y_36;
					  y_36 = (_Shininess * 128.0);
					  highp float tmpvar_37;
					  tmpvar_37 = (pow (nh_32, y_36) * tmpvar_13.w);
					  c_31.xyz = (((tmpvar_11 * tmpvar_25) * diff_33) + ((tmpvar_25 * _SpecColor.xyz) * tmpvar_37));
					  c_31.w = (tmpvar_13.w * _Color.w);
					  c_30.w = c_31.w;
					  c_30.xyz = (c_31.xyz + (tmpvar_11 * ambient_26));
					  c_5.xyz = c_30.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  highp vec3 lightColor0_52;
					  lightColor0_52 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_53;
					  lightColor1_53 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_54;
					  lightColor2_54 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_55;
					  lightColor3_55 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_56;
					  lightAttenSq_56 = unity_4LightAtten0;
					  highp vec3 normal_57;
					  normal_57 = worldNormal_3;
					  highp vec3 col_58;
					  highp vec4 ndotl_59;
					  highp vec4 lengthSq_60;
					  highp vec4 tmpvar_61;
					  tmpvar_61 = (unity_4LightPosX0 - tmpvar_40.x);
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (unity_4LightPosY0 - tmpvar_40.y);
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosZ0 - tmpvar_40.z);
					  lengthSq_60 = (tmpvar_61 * tmpvar_61);
					  lengthSq_60 = (lengthSq_60 + (tmpvar_62 * tmpvar_62));
					  lengthSq_60 = (lengthSq_60 + (tmpvar_63 * tmpvar_63));
					  ndotl_59 = (tmpvar_61 * normal_57.x);
					  ndotl_59 = (ndotl_59 + (tmpvar_62 * normal_57.y));
					  ndotl_59 = (ndotl_59 + (tmpvar_63 * normal_57.z));
					  highp vec4 tmpvar_64;
					  tmpvar_64 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_59 * inversesqrt(lengthSq_60)));
					  ndotl_59 = tmpvar_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_64 * (1.0/((1.0 + 
					    (lengthSq_60 * lightAttenSq_56)
					  ))));
					  col_58 = (lightColor0_52 * tmpvar_65.x);
					  col_58 = (col_58 + (lightColor1_53 * tmpvar_65.y));
					  col_58 = (col_58 + (lightColor2_54 * tmpvar_65.z));
					  col_58 = (col_58 + (lightColor3_55 * tmpvar_65.w));
					  tmpvar_4 = col_58;
					  mediump vec3 normal_66;
					  normal_66 = worldNormal_3;
					  mediump vec3 ambient_67;
					  ambient_67 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_68;
					  mediump vec4 tmpvar_69;
					  tmpvar_69 = (normal_66.xyzz * normal_66.yzzx);
					  x1_68.x = dot (unity_SHBr, tmpvar_69);
					  x1_68.y = dot (unity_SHBg, tmpvar_69);
					  x1_68.z = dot (unity_SHBb, tmpvar_69);
					  ambient_67 = (ambient_67 + (x1_68 + (unity_SHC.xyz * 
					    ((normal_66.x * normal_66.x) - (normal_66.y * normal_66.y))
					  )));
					  tmpvar_4 = ambient_67;
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_TEXCOORD4 = ambient_67;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7.x = xlv_TEXCOORD1.w;
					  tmpvar_7.y = xlv_TEXCOORD2.w;
					  tmpvar_7.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - tmpvar_7));
					  worldViewDir_5 = tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD1.xyz, tmpvar_11);
					  worldN_3.x = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD2.xyz, tmpvar_11);
					  worldN_3.y = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD3.xyz, tmpvar_11);
					  worldN_3.z = tmpvar_21;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_22;
					  normalWorld_22 = worldN_3;
					  mediump vec3 ambient_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = normalWorld_22;
					  mediump vec3 x_25;
					  x_25.x = dot (unity_SHAr, tmpvar_24);
					  x_25.y = dot (unity_SHAg, tmpvar_24);
					  x_25.z = dot (unity_SHAb, tmpvar_24);
					  ambient_23 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_25)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_26;
					  viewDir_26 = worldViewDir_5;
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  highp float nh_29;
					  lowp float diff_30;
					  mediump float tmpvar_31;
					  tmpvar_31 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_30 = tmpvar_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_26)
					  )));
					  nh_29 = tmpvar_32;
					  mediump float y_33;
					  y_33 = (_Shininess * 128.0);
					  highp float tmpvar_34;
					  tmpvar_34 = (pow (nh_29, y_33) * tmpvar_12.w);
					  c_28.xyz = (((tmpvar_10 * tmpvar_1) * diff_30) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_34));
					  c_28.w = (tmpvar_12.w * _Color.w);
					  c_27.w = c_28.w;
					  c_27.xyz = (c_28.xyz + (tmpvar_10 * ambient_23));
					  c_4.xyz = c_27.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_3 = tmpvar_46;
					  highp mat3 tmpvar_47;
					  tmpvar_47[0] = _Object2World[0].xyz;
					  tmpvar_47[1] = _Object2World[1].xyz;
					  tmpvar_47[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = normalize((tmpvar_47 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_48;
					  highp float tmpvar_49;
					  tmpvar_49 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_49;
					  lowp vec3 tmpvar_50;
					  tmpvar_50 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.x;
					  tmpvar_51.y = tmpvar_50.x;
					  tmpvar_51.z = worldNormal_3.x;
					  tmpvar_51.w = tmpvar_42.x;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.y;
					  tmpvar_52.y = tmpvar_50.y;
					  tmpvar_52.z = worldNormal_3.y;
					  tmpvar_52.w = tmpvar_42.y;
					  highp vec4 tmpvar_53;
					  tmpvar_53.x = worldTangent_2.z;
					  tmpvar_53.y = tmpvar_50.z;
					  tmpvar_53.z = worldNormal_3.z;
					  tmpvar_53.w = tmpvar_42.z;
					  highp vec3 lightColor0_54;
					  lightColor0_54 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_55;
					  lightColor1_55 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_56;
					  lightColor2_56 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_57;
					  lightColor3_57 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_58;
					  lightAttenSq_58 = unity_4LightAtten0;
					  highp vec3 normal_59;
					  normal_59 = worldNormal_3;
					  highp vec3 col_60;
					  highp vec4 ndotl_61;
					  highp vec4 lengthSq_62;
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_62 = (tmpvar_63 * tmpvar_63);
					  lengthSq_62 = (lengthSq_62 + (tmpvar_64 * tmpvar_64));
					  lengthSq_62 = (lengthSq_62 + (tmpvar_65 * tmpvar_65));
					  ndotl_61 = (tmpvar_63 * normal_59.x);
					  ndotl_61 = (ndotl_61 + (tmpvar_64 * normal_59.y));
					  ndotl_61 = (ndotl_61 + (tmpvar_65 * normal_59.z));
					  highp vec4 tmpvar_66;
					  tmpvar_66 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_61 * inversesqrt(lengthSq_62)));
					  ndotl_61 = tmpvar_66;
					  highp vec4 tmpvar_67;
					  tmpvar_67 = (tmpvar_66 * (1.0/((1.0 + 
					    (lengthSq_62 * lightAttenSq_58)
					  ))));
					  col_60 = (lightColor0_54 * tmpvar_67.x);
					  col_60 = (col_60 + (lightColor1_55 * tmpvar_67.y));
					  col_60 = (col_60 + (lightColor2_56 * tmpvar_67.z));
					  col_60 = (col_60 + (lightColor3_57 * tmpvar_67.w));
					  tmpvar_5 = col_60;
					  mediump vec3 normal_68;
					  normal_68 = worldNormal_3;
					  mediump vec3 ambient_69;
					  ambient_69 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_70;
					  mediump vec4 tmpvar_71;
					  tmpvar_71 = (normal_68.xyzz * normal_68.yzzx);
					  x1_70.x = dot (unity_SHBr, tmpvar_71);
					  x1_70.y = dot (unity_SHBg, tmpvar_71);
					  x1_70.z = dot (unity_SHBb, tmpvar_71);
					  ambient_69 = (ambient_69 + (x1_70 + (unity_SHC.xyz * 
					    ((normal_68.x * normal_68.x) - (normal_68.y * normal_68.y))
					  )));
					  tmpvar_5 = ambient_69;
					  highp vec4 o_72;
					  highp vec4 tmpvar_73;
					  tmpvar_73 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_74;
					  tmpvar_74.x = tmpvar_73.x;
					  tmpvar_74.y = (tmpvar_73.y * _ProjectionParams.x);
					  o_72.xy = (tmpvar_74 + tmpvar_73.w);
					  o_72.zw = tmpvar_4.zw;
					  tmpvar_6 = o_72;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_51;
					  xlv_TEXCOORD2 = tmpvar_52;
					  xlv_TEXCOORD3 = tmpvar_53;
					  xlv_TEXCOORD4 = ambient_69;
					  xlv_TEXCOORD5 = tmpvar_6;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_6 = tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  highp vec2 tmpvar_15;
					  tmpvar_15 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_14 = (xlv_TEXCOORD0 + tmpvar_15);
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_11 = (tmpvar_13.xyz * _Color.xyz);
					  highp vec2 P_16;
					  P_16 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_15);
					  lowp vec3 normal_17;
					  normal_17.xy = ((texture2D (_V_CW_NormalMap, P_16).wy * 2.0) - 1.0);
					  normal_17.z = sqrt((1.0 - clamp (
					    dot (normal_17.xy, normal_17.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_18;
					  tmpvar_18.xy = (normal_17.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_18.z = normal_17.z;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = normalize(tmpvar_18);
					  tmpvar_12 = tmpvar_19;
					  lowp float tmpvar_20;
					  tmpvar_20 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_4.x = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_4.y = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_4.z = tmpvar_23;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_20;
					  mediump vec3 normalWorld_24;
					  normalWorld_24 = worldN_4;
					  mediump vec3 tmpvar_25;
					  tmpvar_25 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_26;
					  mediump vec4 tmpvar_27;
					  tmpvar_27.w = 1.0;
					  tmpvar_27.xyz = normalWorld_24;
					  mediump vec3 x_28;
					  x_28.x = dot (unity_SHAr, tmpvar_27);
					  x_28.y = dot (unity_SHAg, tmpvar_27);
					  x_28.z = dot (unity_SHAb, tmpvar_27);
					  ambient_26 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_25;
					  mediump vec3 viewDir_29;
					  viewDir_29 = worldViewDir_6;
					  lowp vec4 c_30;
					  lowp vec4 c_31;
					  highp float nh_32;
					  lowp float diff_33;
					  mediump float tmpvar_34;
					  tmpvar_34 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_33 = tmpvar_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_29)
					  )));
					  nh_32 = tmpvar_35;
					  mediump float y_36;
					  y_36 = (_Shininess * 128.0);
					  highp float tmpvar_37;
					  tmpvar_37 = (pow (nh_32, y_36) * tmpvar_13.w);
					  c_31.xyz = (((tmpvar_11 * tmpvar_25) * diff_33) + ((tmpvar_25 * _SpecColor.xyz) * tmpvar_37));
					  c_31.w = (tmpvar_13.w * _Color.w);
					  c_30.w = c_31.w;
					  c_30.xyz = (c_31.xyz + (tmpvar_11 * ambient_26));
					  c_5.xyz = c_30.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_TEXCOORD4 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7.x = xlv_TEXCOORD1.w;
					  tmpvar_7.y = xlv_TEXCOORD2.w;
					  tmpvar_7.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - tmpvar_7));
					  worldViewDir_5 = tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD1.xyz, tmpvar_11);
					  worldN_3.x = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD2.xyz, tmpvar_11);
					  worldN_3.y = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD3.xyz, tmpvar_11);
					  worldN_3.z = tmpvar_21;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_22;
					  normalWorld_22 = worldN_3;
					  mediump vec3 ambient_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = normalWorld_22;
					  mediump vec3 x_25;
					  x_25.x = dot (unity_SHAr, tmpvar_24);
					  x_25.y = dot (unity_SHAg, tmpvar_24);
					  x_25.z = dot (unity_SHAb, tmpvar_24);
					  ambient_23 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_25)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_26;
					  viewDir_26 = worldViewDir_5;
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  highp float nh_29;
					  lowp float diff_30;
					  mediump float tmpvar_31;
					  tmpvar_31 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_30 = tmpvar_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_26)
					  )));
					  nh_29 = tmpvar_32;
					  mediump float y_33;
					  y_33 = (_Shininess * 128.0);
					  highp float tmpvar_34;
					  tmpvar_34 = (pow (nh_29, y_33) * tmpvar_12.w);
					  c_28.xyz = (((tmpvar_10 * tmpvar_1) * diff_30) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_34));
					  c_28.w = (tmpvar_12.w * _Color.w);
					  c_27.w = c_28.w;
					  c_27.xyz = (c_28.xyz + (tmpvar_10 * ambient_23));
					  highp float tmpvar_35;
					  tmpvar_35 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_27.xyz, vec3(tmpvar_35));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  mediump vec3 normal_53;
					  normal_53 = worldNormal_3;
					  mediump vec3 x1_54;
					  mediump vec4 tmpvar_55;
					  tmpvar_55 = (normal_53.xyzz * normal_53.yzzx);
					  x1_54.x = dot (unity_SHBr, tmpvar_55);
					  x1_54.y = dot (unity_SHBg, tmpvar_55);
					  x1_54.z = dot (unity_SHBb, tmpvar_55);
					  highp vec4 o_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_58;
					  tmpvar_58.x = tmpvar_57.x;
					  tmpvar_58.y = (tmpvar_57.y * _ProjectionParams.x);
					  o_56.xy = (tmpvar_58 + tmpvar_57.w);
					  o_56.zw = tmpvar_4.zw;
					  tmpvar_5 = o_56;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_TEXCOORD4 = (x1_54 + (unity_SHC.xyz * (
					    (normal_53.x * normal_53.x)
					   - 
					    (normal_53.y * normal_53.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_6 = tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  highp vec2 tmpvar_15;
					  tmpvar_15 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_14 = (xlv_TEXCOORD0 + tmpvar_15);
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_11 = (tmpvar_13.xyz * _Color.xyz);
					  highp vec2 P_16;
					  P_16 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_15);
					  lowp vec3 normal_17;
					  normal_17.xy = ((texture2D (_V_CW_NormalMap, P_16).wy * 2.0) - 1.0);
					  normal_17.z = sqrt((1.0 - clamp (
					    dot (normal_17.xy, normal_17.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_18;
					  tmpvar_18.xy = (normal_17.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_18.z = normal_17.z;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = normalize(tmpvar_18);
					  tmpvar_12 = tmpvar_19;
					  lowp float tmpvar_20;
					  tmpvar_20 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_4.x = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_4.y = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_4.z = tmpvar_23;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_20;
					  mediump vec3 normalWorld_24;
					  normalWorld_24 = worldN_4;
					  mediump vec3 tmpvar_25;
					  tmpvar_25 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_26;
					  mediump vec4 tmpvar_27;
					  tmpvar_27.w = 1.0;
					  tmpvar_27.xyz = normalWorld_24;
					  mediump vec3 x_28;
					  x_28.x = dot (unity_SHAr, tmpvar_27);
					  x_28.y = dot (unity_SHAg, tmpvar_27);
					  x_28.z = dot (unity_SHAb, tmpvar_27);
					  ambient_26 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_25;
					  mediump vec3 viewDir_29;
					  viewDir_29 = worldViewDir_6;
					  lowp vec4 c_30;
					  lowp vec4 c_31;
					  highp float nh_32;
					  lowp float diff_33;
					  mediump float tmpvar_34;
					  tmpvar_34 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_33 = tmpvar_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_29)
					  )));
					  nh_32 = tmpvar_35;
					  mediump float y_36;
					  y_36 = (_Shininess * 128.0);
					  highp float tmpvar_37;
					  tmpvar_37 = (pow (nh_32, y_36) * tmpvar_13.w);
					  c_31.xyz = (((tmpvar_11 * tmpvar_25) * diff_33) + ((tmpvar_25 * _SpecColor.xyz) * tmpvar_37));
					  c_31.w = (tmpvar_13.w * _Color.w);
					  c_30.w = c_31.w;
					  c_30.xyz = (c_31.xyz + (tmpvar_11 * ambient_26));
					  highp float tmpvar_38;
					  tmpvar_38 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_30.xyz, vec3(tmpvar_38));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  highp vec3 lightColor0_53;
					  lightColor0_53 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_54;
					  lightColor1_54 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_55;
					  lightColor2_55 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_56;
					  lightColor3_56 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_57;
					  lightAttenSq_57 = unity_4LightAtten0;
					  highp vec3 normal_58;
					  normal_58 = worldNormal_3;
					  highp vec3 col_59;
					  highp vec4 ndotl_60;
					  highp vec4 lengthSq_61;
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_61 = (tmpvar_62 * tmpvar_62);
					  lengthSq_61 = (lengthSq_61 + (tmpvar_63 * tmpvar_63));
					  lengthSq_61 = (lengthSq_61 + (tmpvar_64 * tmpvar_64));
					  ndotl_60 = (tmpvar_62 * normal_58.x);
					  ndotl_60 = (ndotl_60 + (tmpvar_63 * normal_58.y));
					  ndotl_60 = (ndotl_60 + (tmpvar_64 * normal_58.z));
					  highp vec4 tmpvar_65;
					  tmpvar_65 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_60 * inversesqrt(lengthSq_61)));
					  ndotl_60 = tmpvar_65;
					  highp vec4 tmpvar_66;
					  tmpvar_66 = (tmpvar_65 * (1.0/((1.0 + 
					    (lengthSq_61 * lightAttenSq_57)
					  ))));
					  col_59 = (lightColor0_53 * tmpvar_66.x);
					  col_59 = (col_59 + (lightColor1_54 * tmpvar_66.y));
					  col_59 = (col_59 + (lightColor2_55 * tmpvar_66.z));
					  col_59 = (col_59 + (lightColor3_56 * tmpvar_66.w));
					  tmpvar_5 = col_59;
					  mediump vec3 normal_67;
					  normal_67 = worldNormal_3;
					  mediump vec3 ambient_68;
					  ambient_68 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_69;
					  mediump vec4 tmpvar_70;
					  tmpvar_70 = (normal_67.xyzz * normal_67.yzzx);
					  x1_69.x = dot (unity_SHBr, tmpvar_70);
					  x1_69.y = dot (unity_SHBg, tmpvar_70);
					  x1_69.z = dot (unity_SHBb, tmpvar_70);
					  ambient_68 = (ambient_68 + (x1_69 + (unity_SHC.xyz * 
					    ((normal_67.x * normal_67.x) - (normal_67.y * normal_67.y))
					  )));
					  tmpvar_5 = ambient_68;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_TEXCOORD4 = ambient_68;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7.x = xlv_TEXCOORD1.w;
					  tmpvar_7.y = xlv_TEXCOORD2.w;
					  tmpvar_7.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - tmpvar_7));
					  worldViewDir_5 = tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD1.xyz, tmpvar_11);
					  worldN_3.x = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD2.xyz, tmpvar_11);
					  worldN_3.y = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD3.xyz, tmpvar_11);
					  worldN_3.z = tmpvar_21;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_22;
					  normalWorld_22 = worldN_3;
					  mediump vec3 ambient_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = normalWorld_22;
					  mediump vec3 x_25;
					  x_25.x = dot (unity_SHAr, tmpvar_24);
					  x_25.y = dot (unity_SHAg, tmpvar_24);
					  x_25.z = dot (unity_SHAb, tmpvar_24);
					  ambient_23 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_25)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_26;
					  viewDir_26 = worldViewDir_5;
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  highp float nh_29;
					  lowp float diff_30;
					  mediump float tmpvar_31;
					  tmpvar_31 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_30 = tmpvar_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_26)
					  )));
					  nh_29 = tmpvar_32;
					  mediump float y_33;
					  y_33 = (_Shininess * 128.0);
					  highp float tmpvar_34;
					  tmpvar_34 = (pow (nh_29, y_33) * tmpvar_12.w);
					  c_28.xyz = (((tmpvar_10 * tmpvar_1) * diff_30) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_34));
					  c_28.w = (tmpvar_12.w * _Color.w);
					  c_27.w = c_28.w;
					  c_27.xyz = (c_28.xyz + (tmpvar_10 * ambient_23));
					  highp float tmpvar_35;
					  tmpvar_35 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_27.xyz, vec3(tmpvar_35));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_3 = tmpvar_46;
					  highp mat3 tmpvar_47;
					  tmpvar_47[0] = _Object2World[0].xyz;
					  tmpvar_47[1] = _Object2World[1].xyz;
					  tmpvar_47[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = normalize((tmpvar_47 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_48;
					  highp float tmpvar_49;
					  tmpvar_49 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_49;
					  lowp vec3 tmpvar_50;
					  tmpvar_50 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.x;
					  tmpvar_51.y = tmpvar_50.x;
					  tmpvar_51.z = worldNormal_3.x;
					  tmpvar_51.w = tmpvar_42.x;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.y;
					  tmpvar_52.y = tmpvar_50.y;
					  tmpvar_52.z = worldNormal_3.y;
					  tmpvar_52.w = tmpvar_42.y;
					  highp vec4 tmpvar_53;
					  tmpvar_53.x = worldTangent_2.z;
					  tmpvar_53.y = tmpvar_50.z;
					  tmpvar_53.z = worldNormal_3.z;
					  tmpvar_53.w = tmpvar_42.z;
					  highp vec3 lightColor0_54;
					  lightColor0_54 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_55;
					  lightColor1_55 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_56;
					  lightColor2_56 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_57;
					  lightColor3_57 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_58;
					  lightAttenSq_58 = unity_4LightAtten0;
					  highp vec3 normal_59;
					  normal_59 = worldNormal_3;
					  highp vec3 col_60;
					  highp vec4 ndotl_61;
					  highp vec4 lengthSq_62;
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_62 = (tmpvar_63 * tmpvar_63);
					  lengthSq_62 = (lengthSq_62 + (tmpvar_64 * tmpvar_64));
					  lengthSq_62 = (lengthSq_62 + (tmpvar_65 * tmpvar_65));
					  ndotl_61 = (tmpvar_63 * normal_59.x);
					  ndotl_61 = (ndotl_61 + (tmpvar_64 * normal_59.y));
					  ndotl_61 = (ndotl_61 + (tmpvar_65 * normal_59.z));
					  highp vec4 tmpvar_66;
					  tmpvar_66 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_61 * inversesqrt(lengthSq_62)));
					  ndotl_61 = tmpvar_66;
					  highp vec4 tmpvar_67;
					  tmpvar_67 = (tmpvar_66 * (1.0/((1.0 + 
					    (lengthSq_62 * lightAttenSq_58)
					  ))));
					  col_60 = (lightColor0_54 * tmpvar_67.x);
					  col_60 = (col_60 + (lightColor1_55 * tmpvar_67.y));
					  col_60 = (col_60 + (lightColor2_56 * tmpvar_67.z));
					  col_60 = (col_60 + (lightColor3_57 * tmpvar_67.w));
					  tmpvar_5 = col_60;
					  mediump vec3 normal_68;
					  normal_68 = worldNormal_3;
					  mediump vec3 ambient_69;
					  ambient_69 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_70;
					  mediump vec4 tmpvar_71;
					  tmpvar_71 = (normal_68.xyzz * normal_68.yzzx);
					  x1_70.x = dot (unity_SHBr, tmpvar_71);
					  x1_70.y = dot (unity_SHBg, tmpvar_71);
					  x1_70.z = dot (unity_SHBb, tmpvar_71);
					  ambient_69 = (ambient_69 + (x1_70 + (unity_SHC.xyz * 
					    ((normal_68.x * normal_68.x) - (normal_68.y * normal_68.y))
					  )));
					  tmpvar_5 = ambient_69;
					  highp vec4 o_72;
					  highp vec4 tmpvar_73;
					  tmpvar_73 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_74;
					  tmpvar_74.x = tmpvar_73.x;
					  tmpvar_74.y = (tmpvar_73.y * _ProjectionParams.x);
					  o_72.xy = (tmpvar_74 + tmpvar_73.w);
					  o_72.zw = tmpvar_4.zw;
					  tmpvar_6 = o_72;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_51;
					  xlv_TEXCOORD2 = tmpvar_52;
					  xlv_TEXCOORD3 = tmpvar_53;
					  xlv_TEXCOORD4 = ambient_69;
					  xlv_TEXCOORD5 = tmpvar_6;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_6 = tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  highp vec2 tmpvar_15;
					  tmpvar_15 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_14 = (xlv_TEXCOORD0 + tmpvar_15);
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_11 = (tmpvar_13.xyz * _Color.xyz);
					  highp vec2 P_16;
					  P_16 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_15);
					  lowp vec3 normal_17;
					  normal_17.xy = ((texture2D (_V_CW_NormalMap, P_16).wy * 2.0) - 1.0);
					  normal_17.z = sqrt((1.0 - clamp (
					    dot (normal_17.xy, normal_17.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_18;
					  tmpvar_18.xy = (normal_17.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_18.z = normal_17.z;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = normalize(tmpvar_18);
					  tmpvar_12 = tmpvar_19;
					  lowp float tmpvar_20;
					  tmpvar_20 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_4.x = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_4.y = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_4.z = tmpvar_23;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_20;
					  mediump vec3 normalWorld_24;
					  normalWorld_24 = worldN_4;
					  mediump vec3 tmpvar_25;
					  tmpvar_25 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_26;
					  mediump vec4 tmpvar_27;
					  tmpvar_27.w = 1.0;
					  tmpvar_27.xyz = normalWorld_24;
					  mediump vec3 x_28;
					  x_28.x = dot (unity_SHAr, tmpvar_27);
					  x_28.y = dot (unity_SHAg, tmpvar_27);
					  x_28.z = dot (unity_SHAb, tmpvar_27);
					  ambient_26 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_28)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_25;
					  mediump vec3 viewDir_29;
					  viewDir_29 = worldViewDir_6;
					  lowp vec4 c_30;
					  lowp vec4 c_31;
					  highp float nh_32;
					  lowp float diff_33;
					  mediump float tmpvar_34;
					  tmpvar_34 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_33 = tmpvar_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_29)
					  )));
					  nh_32 = tmpvar_35;
					  mediump float y_36;
					  y_36 = (_Shininess * 128.0);
					  highp float tmpvar_37;
					  tmpvar_37 = (pow (nh_32, y_36) * tmpvar_13.w);
					  c_31.xyz = (((tmpvar_11 * tmpvar_25) * diff_33) + ((tmpvar_25 * _SpecColor.xyz) * tmpvar_37));
					  c_31.w = (tmpvar_13.w * _Color.w);
					  c_30.w = c_31.w;
					  c_30.xyz = (c_31.xyz + (tmpvar_11 * ambient_26));
					  highp float tmpvar_38;
					  tmpvar_38 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_30.xyz, vec3(tmpvar_38));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  tmpvar_48.w = tmpvar_39.x;
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  tmpvar_49.w = tmpvar_39.y;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  tmpvar_50.w = tmpvar_39.z;
					  mediump vec3 normal_51;
					  normal_51 = worldNormal_3;
					  mediump vec3 x1_52;
					  mediump vec4 tmpvar_53;
					  tmpvar_53 = (normal_51.xyzz * normal_51.yzzx);
					  x1_52.x = dot (unity_SHBr, tmpvar_53);
					  x1_52.y = dot (unity_SHBg, tmpvar_53);
					  x1_52.z = dot (unity_SHBb, tmpvar_53);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (x1_52 + (unity_SHC.xyz * (
					    (normal_51.x * normal_51.x)
					   - 
					    (normal_51.y * normal_51.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7.x = xlv_TEXCOORD1.w;
					  tmpvar_7.y = xlv_TEXCOORD2.w;
					  tmpvar_7.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - tmpvar_7));
					  worldViewDir_5 = tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  highp vec2 tmpvar_15;
					  tmpvar_15 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_14 = (xlv_TEXCOORD0 + tmpvar_15);
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_10 = (tmpvar_13.xyz * _Color.xyz);
					  highp vec2 P_16;
					  P_16 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_15);
					  lowp vec3 normal_17;
					  normal_17.xy = ((texture2D (_V_CW_NormalMap, P_16).wy * 2.0) - 1.0);
					  normal_17.z = sqrt((1.0 - clamp (
					    dot (normal_17.xy, normal_17.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_18;
					  tmpvar_18.xy = (normal_17.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_18.z = normal_17.z;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = normalize(tmpvar_18);
					  tmpvar_11 = tmpvar_19;
					  tmpvar_12 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD1.xyz, tmpvar_11);
					  worldN_3.x = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD2.xyz, tmpvar_11);
					  worldN_3.y = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD3.xyz, tmpvar_11);
					  worldN_3.z = tmpvar_22;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_23;
					  normalWorld_23 = worldN_3;
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_23;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_27;
					  viewDir_27 = worldViewDir_5;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  highp float nh_30;
					  lowp float diff_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_31 = tmpvar_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_27)
					  )));
					  nh_30 = tmpvar_33;
					  mediump float y_34;
					  y_34 = (_Shininess * 128.0);
					  highp float tmpvar_35;
					  tmpvar_35 = (pow (nh_30, y_34) * tmpvar_13.w);
					  c_29.xyz = (((tmpvar_10 * tmpvar_1) * diff_31) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_35));
					  c_29.w = (tmpvar_13.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = (c_29.xyz + (tmpvar_10 * ambient_24));
					  c_4.xyz = (c_28.xyz + tmpvar_12);
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  mediump vec3 normal_53;
					  normal_53 = worldNormal_3;
					  mediump vec3 x1_54;
					  mediump vec4 tmpvar_55;
					  tmpvar_55 = (normal_53.xyzz * normal_53.yzzx);
					  x1_54.x = dot (unity_SHBr, tmpvar_55);
					  x1_54.y = dot (unity_SHBg, tmpvar_55);
					  x1_54.z = dot (unity_SHBb, tmpvar_55);
					  highp vec4 o_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_58;
					  tmpvar_58.x = tmpvar_57.x;
					  tmpvar_58.y = (tmpvar_57.y * _ProjectionParams.x);
					  o_56.xy = (tmpvar_58 + tmpvar_57.w);
					  o_56.zw = tmpvar_4.zw;
					  tmpvar_5 = o_56;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_TEXCOORD4 = (x1_54 + (unity_SHC.xyz * (
					    (normal_53.x * normal_53.x)
					   - 
					    (normal_53.y * normal_53.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_6 = tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_12 = tmpvar_20;
					  tmpvar_13 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_4.x = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_4.y = tmpvar_23;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_4.z = tmpvar_24;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_21;
					  mediump vec3 normalWorld_25;
					  normalWorld_25 = worldN_4;
					  mediump vec3 tmpvar_26;
					  tmpvar_26 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_27;
					  mediump vec4 tmpvar_28;
					  tmpvar_28.w = 1.0;
					  tmpvar_28.xyz = normalWorld_25;
					  mediump vec3 x_29;
					  x_29.x = dot (unity_SHAr, tmpvar_28);
					  x_29.y = dot (unity_SHAg, tmpvar_28);
					  x_29.z = dot (unity_SHAb, tmpvar_28);
					  ambient_27 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_29)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_26;
					  mediump vec3 viewDir_30;
					  viewDir_30 = worldViewDir_6;
					  lowp vec4 c_31;
					  lowp vec4 c_32;
					  highp float nh_33;
					  lowp float diff_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_34 = tmpvar_35;
					  mediump float tmpvar_36;
					  tmpvar_36 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_30)
					  )));
					  nh_33 = tmpvar_36;
					  mediump float y_37;
					  y_37 = (_Shininess * 128.0);
					  highp float tmpvar_38;
					  tmpvar_38 = (pow (nh_33, y_37) * tmpvar_14.w);
					  c_32.xyz = (((tmpvar_11 * tmpvar_26) * diff_34) + ((tmpvar_26 * _SpecColor.xyz) * tmpvar_38));
					  c_32.w = (tmpvar_14.w * _Color.w);
					  c_31.w = c_32.w;
					  c_31.xyz = (c_32.xyz + (tmpvar_11 * ambient_27));
					  c_5.xyz = (c_31.xyz + tmpvar_13);
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  highp vec3 lightColor0_52;
					  lightColor0_52 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_53;
					  lightColor1_53 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_54;
					  lightColor2_54 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_55;
					  lightColor3_55 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_56;
					  lightAttenSq_56 = unity_4LightAtten0;
					  highp vec3 normal_57;
					  normal_57 = worldNormal_3;
					  highp vec3 col_58;
					  highp vec4 ndotl_59;
					  highp vec4 lengthSq_60;
					  highp vec4 tmpvar_61;
					  tmpvar_61 = (unity_4LightPosX0 - tmpvar_40.x);
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (unity_4LightPosY0 - tmpvar_40.y);
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosZ0 - tmpvar_40.z);
					  lengthSq_60 = (tmpvar_61 * tmpvar_61);
					  lengthSq_60 = (lengthSq_60 + (tmpvar_62 * tmpvar_62));
					  lengthSq_60 = (lengthSq_60 + (tmpvar_63 * tmpvar_63));
					  ndotl_59 = (tmpvar_61 * normal_57.x);
					  ndotl_59 = (ndotl_59 + (tmpvar_62 * normal_57.y));
					  ndotl_59 = (ndotl_59 + (tmpvar_63 * normal_57.z));
					  highp vec4 tmpvar_64;
					  tmpvar_64 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_59 * inversesqrt(lengthSq_60)));
					  ndotl_59 = tmpvar_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_64 * (1.0/((1.0 + 
					    (lengthSq_60 * lightAttenSq_56)
					  ))));
					  col_58 = (lightColor0_52 * tmpvar_65.x);
					  col_58 = (col_58 + (lightColor1_53 * tmpvar_65.y));
					  col_58 = (col_58 + (lightColor2_54 * tmpvar_65.z));
					  col_58 = (col_58 + (lightColor3_55 * tmpvar_65.w));
					  tmpvar_4 = col_58;
					  mediump vec3 normal_66;
					  normal_66 = worldNormal_3;
					  mediump vec3 ambient_67;
					  ambient_67 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_68;
					  mediump vec4 tmpvar_69;
					  tmpvar_69 = (normal_66.xyzz * normal_66.yzzx);
					  x1_68.x = dot (unity_SHBr, tmpvar_69);
					  x1_68.y = dot (unity_SHBg, tmpvar_69);
					  x1_68.z = dot (unity_SHBb, tmpvar_69);
					  ambient_67 = (ambient_67 + (x1_68 + (unity_SHC.xyz * 
					    ((normal_66.x * normal_66.x) - (normal_66.y * normal_66.y))
					  )));
					  tmpvar_4 = ambient_67;
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_TEXCOORD4 = ambient_67;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7.x = xlv_TEXCOORD1.w;
					  tmpvar_7.y = xlv_TEXCOORD2.w;
					  tmpvar_7.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - tmpvar_7));
					  worldViewDir_5 = tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  highp vec2 tmpvar_15;
					  tmpvar_15 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_14 = (xlv_TEXCOORD0 + tmpvar_15);
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_10 = (tmpvar_13.xyz * _Color.xyz);
					  highp vec2 P_16;
					  P_16 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_15);
					  lowp vec3 normal_17;
					  normal_17.xy = ((texture2D (_V_CW_NormalMap, P_16).wy * 2.0) - 1.0);
					  normal_17.z = sqrt((1.0 - clamp (
					    dot (normal_17.xy, normal_17.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_18;
					  tmpvar_18.xy = (normal_17.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_18.z = normal_17.z;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = normalize(tmpvar_18);
					  tmpvar_11 = tmpvar_19;
					  tmpvar_12 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD1.xyz, tmpvar_11);
					  worldN_3.x = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD2.xyz, tmpvar_11);
					  worldN_3.y = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD3.xyz, tmpvar_11);
					  worldN_3.z = tmpvar_22;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_23;
					  normalWorld_23 = worldN_3;
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_23;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_27;
					  viewDir_27 = worldViewDir_5;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  highp float nh_30;
					  lowp float diff_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_31 = tmpvar_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_27)
					  )));
					  nh_30 = tmpvar_33;
					  mediump float y_34;
					  y_34 = (_Shininess * 128.0);
					  highp float tmpvar_35;
					  tmpvar_35 = (pow (nh_30, y_34) * tmpvar_13.w);
					  c_29.xyz = (((tmpvar_10 * tmpvar_1) * diff_31) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_35));
					  c_29.w = (tmpvar_13.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = (c_29.xyz + (tmpvar_10 * ambient_24));
					  c_4.xyz = (c_28.xyz + tmpvar_12);
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_3 = tmpvar_46;
					  highp mat3 tmpvar_47;
					  tmpvar_47[0] = _Object2World[0].xyz;
					  tmpvar_47[1] = _Object2World[1].xyz;
					  tmpvar_47[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = normalize((tmpvar_47 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_48;
					  highp float tmpvar_49;
					  tmpvar_49 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_49;
					  lowp vec3 tmpvar_50;
					  tmpvar_50 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.x;
					  tmpvar_51.y = tmpvar_50.x;
					  tmpvar_51.z = worldNormal_3.x;
					  tmpvar_51.w = tmpvar_42.x;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.y;
					  tmpvar_52.y = tmpvar_50.y;
					  tmpvar_52.z = worldNormal_3.y;
					  tmpvar_52.w = tmpvar_42.y;
					  highp vec4 tmpvar_53;
					  tmpvar_53.x = worldTangent_2.z;
					  tmpvar_53.y = tmpvar_50.z;
					  tmpvar_53.z = worldNormal_3.z;
					  tmpvar_53.w = tmpvar_42.z;
					  highp vec3 lightColor0_54;
					  lightColor0_54 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_55;
					  lightColor1_55 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_56;
					  lightColor2_56 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_57;
					  lightColor3_57 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_58;
					  lightAttenSq_58 = unity_4LightAtten0;
					  highp vec3 normal_59;
					  normal_59 = worldNormal_3;
					  highp vec3 col_60;
					  highp vec4 ndotl_61;
					  highp vec4 lengthSq_62;
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_62 = (tmpvar_63 * tmpvar_63);
					  lengthSq_62 = (lengthSq_62 + (tmpvar_64 * tmpvar_64));
					  lengthSq_62 = (lengthSq_62 + (tmpvar_65 * tmpvar_65));
					  ndotl_61 = (tmpvar_63 * normal_59.x);
					  ndotl_61 = (ndotl_61 + (tmpvar_64 * normal_59.y));
					  ndotl_61 = (ndotl_61 + (tmpvar_65 * normal_59.z));
					  highp vec4 tmpvar_66;
					  tmpvar_66 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_61 * inversesqrt(lengthSq_62)));
					  ndotl_61 = tmpvar_66;
					  highp vec4 tmpvar_67;
					  tmpvar_67 = (tmpvar_66 * (1.0/((1.0 + 
					    (lengthSq_62 * lightAttenSq_58)
					  ))));
					  col_60 = (lightColor0_54 * tmpvar_67.x);
					  col_60 = (col_60 + (lightColor1_55 * tmpvar_67.y));
					  col_60 = (col_60 + (lightColor2_56 * tmpvar_67.z));
					  col_60 = (col_60 + (lightColor3_57 * tmpvar_67.w));
					  tmpvar_5 = col_60;
					  mediump vec3 normal_68;
					  normal_68 = worldNormal_3;
					  mediump vec3 ambient_69;
					  ambient_69 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_70;
					  mediump vec4 tmpvar_71;
					  tmpvar_71 = (normal_68.xyzz * normal_68.yzzx);
					  x1_70.x = dot (unity_SHBr, tmpvar_71);
					  x1_70.y = dot (unity_SHBg, tmpvar_71);
					  x1_70.z = dot (unity_SHBb, tmpvar_71);
					  ambient_69 = (ambient_69 + (x1_70 + (unity_SHC.xyz * 
					    ((normal_68.x * normal_68.x) - (normal_68.y * normal_68.y))
					  )));
					  tmpvar_5 = ambient_69;
					  highp vec4 o_72;
					  highp vec4 tmpvar_73;
					  tmpvar_73 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_74;
					  tmpvar_74.x = tmpvar_73.x;
					  tmpvar_74.y = (tmpvar_73.y * _ProjectionParams.x);
					  o_72.xy = (tmpvar_74 + tmpvar_73.w);
					  o_72.zw = tmpvar_4.zw;
					  tmpvar_6 = o_72;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_51;
					  xlv_TEXCOORD2 = tmpvar_52;
					  xlv_TEXCOORD3 = tmpvar_53;
					  xlv_TEXCOORD4 = ambient_69;
					  xlv_TEXCOORD5 = tmpvar_6;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_6 = tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_12 = tmpvar_20;
					  tmpvar_13 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_4.x = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_4.y = tmpvar_23;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_4.z = tmpvar_24;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_21;
					  mediump vec3 normalWorld_25;
					  normalWorld_25 = worldN_4;
					  mediump vec3 tmpvar_26;
					  tmpvar_26 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_27;
					  mediump vec4 tmpvar_28;
					  tmpvar_28.w = 1.0;
					  tmpvar_28.xyz = normalWorld_25;
					  mediump vec3 x_29;
					  x_29.x = dot (unity_SHAr, tmpvar_28);
					  x_29.y = dot (unity_SHAg, tmpvar_28);
					  x_29.z = dot (unity_SHAb, tmpvar_28);
					  ambient_27 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_29)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_26;
					  mediump vec3 viewDir_30;
					  viewDir_30 = worldViewDir_6;
					  lowp vec4 c_31;
					  lowp vec4 c_32;
					  highp float nh_33;
					  lowp float diff_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_34 = tmpvar_35;
					  mediump float tmpvar_36;
					  tmpvar_36 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_30)
					  )));
					  nh_33 = tmpvar_36;
					  mediump float y_37;
					  y_37 = (_Shininess * 128.0);
					  highp float tmpvar_38;
					  tmpvar_38 = (pow (nh_33, y_37) * tmpvar_14.w);
					  c_32.xyz = (((tmpvar_11 * tmpvar_26) * diff_34) + ((tmpvar_26 * _SpecColor.xyz) * tmpvar_38));
					  c_32.w = (tmpvar_14.w * _Color.w);
					  c_31.w = c_32.w;
					  c_31.xyz = (c_32.xyz + (tmpvar_11 * ambient_27));
					  c_5.xyz = (c_31.xyz + tmpvar_13);
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_TEXCOORD4 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7.x = xlv_TEXCOORD1.w;
					  tmpvar_7.y = xlv_TEXCOORD2.w;
					  tmpvar_7.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - tmpvar_7));
					  worldViewDir_5 = tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  highp vec2 tmpvar_15;
					  tmpvar_15 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_14 = (xlv_TEXCOORD0 + tmpvar_15);
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_10 = (tmpvar_13.xyz * _Color.xyz);
					  highp vec2 P_16;
					  P_16 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_15);
					  lowp vec3 normal_17;
					  normal_17.xy = ((texture2D (_V_CW_NormalMap, P_16).wy * 2.0) - 1.0);
					  normal_17.z = sqrt((1.0 - clamp (
					    dot (normal_17.xy, normal_17.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_18;
					  tmpvar_18.xy = (normal_17.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_18.z = normal_17.z;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = normalize(tmpvar_18);
					  tmpvar_11 = tmpvar_19;
					  tmpvar_12 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD1.xyz, tmpvar_11);
					  worldN_3.x = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD2.xyz, tmpvar_11);
					  worldN_3.y = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD3.xyz, tmpvar_11);
					  worldN_3.z = tmpvar_22;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_23;
					  normalWorld_23 = worldN_3;
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_23;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_27;
					  viewDir_27 = worldViewDir_5;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  highp float nh_30;
					  lowp float diff_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_31 = tmpvar_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_27)
					  )));
					  nh_30 = tmpvar_33;
					  mediump float y_34;
					  y_34 = (_Shininess * 128.0);
					  highp float tmpvar_35;
					  tmpvar_35 = (pow (nh_30, y_34) * tmpvar_13.w);
					  c_29.xyz = (((tmpvar_10 * tmpvar_1) * diff_31) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_35));
					  c_29.w = (tmpvar_13.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = (c_29.xyz + (tmpvar_10 * ambient_24));
					  c_4.w = c_28.w;
					  c_4.xyz = (c_28.xyz + tmpvar_12);
					  highp float tmpvar_36;
					  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  mediump vec3 normal_53;
					  normal_53 = worldNormal_3;
					  mediump vec3 x1_54;
					  mediump vec4 tmpvar_55;
					  tmpvar_55 = (normal_53.xyzz * normal_53.yzzx);
					  x1_54.x = dot (unity_SHBr, tmpvar_55);
					  x1_54.y = dot (unity_SHBg, tmpvar_55);
					  x1_54.z = dot (unity_SHBb, tmpvar_55);
					  highp vec4 o_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_58;
					  tmpvar_58.x = tmpvar_57.x;
					  tmpvar_58.y = (tmpvar_57.y * _ProjectionParams.x);
					  o_56.xy = (tmpvar_58 + tmpvar_57.w);
					  o_56.zw = tmpvar_4.zw;
					  tmpvar_5 = o_56;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_TEXCOORD4 = (x1_54 + (unity_SHC.xyz * (
					    (normal_53.x * normal_53.x)
					   - 
					    (normal_53.y * normal_53.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_6 = tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_12 = tmpvar_20;
					  tmpvar_13 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_4.x = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_4.y = tmpvar_23;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_4.z = tmpvar_24;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_21;
					  mediump vec3 normalWorld_25;
					  normalWorld_25 = worldN_4;
					  mediump vec3 tmpvar_26;
					  tmpvar_26 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_27;
					  mediump vec4 tmpvar_28;
					  tmpvar_28.w = 1.0;
					  tmpvar_28.xyz = normalWorld_25;
					  mediump vec3 x_29;
					  x_29.x = dot (unity_SHAr, tmpvar_28);
					  x_29.y = dot (unity_SHAg, tmpvar_28);
					  x_29.z = dot (unity_SHAb, tmpvar_28);
					  ambient_27 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_29)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_26;
					  mediump vec3 viewDir_30;
					  viewDir_30 = worldViewDir_6;
					  lowp vec4 c_31;
					  lowp vec4 c_32;
					  highp float nh_33;
					  lowp float diff_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_34 = tmpvar_35;
					  mediump float tmpvar_36;
					  tmpvar_36 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_30)
					  )));
					  nh_33 = tmpvar_36;
					  mediump float y_37;
					  y_37 = (_Shininess * 128.0);
					  highp float tmpvar_38;
					  tmpvar_38 = (pow (nh_33, y_37) * tmpvar_14.w);
					  c_32.xyz = (((tmpvar_11 * tmpvar_26) * diff_34) + ((tmpvar_26 * _SpecColor.xyz) * tmpvar_38));
					  c_32.w = (tmpvar_14.w * _Color.w);
					  c_31.w = c_32.w;
					  c_31.xyz = (c_32.xyz + (tmpvar_11 * ambient_27));
					  c_5.w = c_31.w;
					  c_5.xyz = (c_31.xyz + tmpvar_13);
					  highp float tmpvar_39;
					  tmpvar_39 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_5.xyz, vec3(tmpvar_39));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  highp vec3 lightColor0_53;
					  lightColor0_53 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_54;
					  lightColor1_54 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_55;
					  lightColor2_55 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_56;
					  lightColor3_56 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_57;
					  lightAttenSq_57 = unity_4LightAtten0;
					  highp vec3 normal_58;
					  normal_58 = worldNormal_3;
					  highp vec3 col_59;
					  highp vec4 ndotl_60;
					  highp vec4 lengthSq_61;
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_61 = (tmpvar_62 * tmpvar_62);
					  lengthSq_61 = (lengthSq_61 + (tmpvar_63 * tmpvar_63));
					  lengthSq_61 = (lengthSq_61 + (tmpvar_64 * tmpvar_64));
					  ndotl_60 = (tmpvar_62 * normal_58.x);
					  ndotl_60 = (ndotl_60 + (tmpvar_63 * normal_58.y));
					  ndotl_60 = (ndotl_60 + (tmpvar_64 * normal_58.z));
					  highp vec4 tmpvar_65;
					  tmpvar_65 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_60 * inversesqrt(lengthSq_61)));
					  ndotl_60 = tmpvar_65;
					  highp vec4 tmpvar_66;
					  tmpvar_66 = (tmpvar_65 * (1.0/((1.0 + 
					    (lengthSq_61 * lightAttenSq_57)
					  ))));
					  col_59 = (lightColor0_53 * tmpvar_66.x);
					  col_59 = (col_59 + (lightColor1_54 * tmpvar_66.y));
					  col_59 = (col_59 + (lightColor2_55 * tmpvar_66.z));
					  col_59 = (col_59 + (lightColor3_56 * tmpvar_66.w));
					  tmpvar_5 = col_59;
					  mediump vec3 normal_67;
					  normal_67 = worldNormal_3;
					  mediump vec3 ambient_68;
					  ambient_68 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_69;
					  mediump vec4 tmpvar_70;
					  tmpvar_70 = (normal_67.xyzz * normal_67.yzzx);
					  x1_69.x = dot (unity_SHBr, tmpvar_70);
					  x1_69.y = dot (unity_SHBg, tmpvar_70);
					  x1_69.z = dot (unity_SHBb, tmpvar_70);
					  ambient_68 = (ambient_68 + (x1_69 + (unity_SHC.xyz * 
					    ((normal_67.x * normal_67.x) - (normal_67.y * normal_67.y))
					  )));
					  tmpvar_5 = ambient_68;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_TEXCOORD4 = ambient_68;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7.x = xlv_TEXCOORD1.w;
					  tmpvar_7.y = xlv_TEXCOORD2.w;
					  tmpvar_7.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - tmpvar_7));
					  worldViewDir_5 = tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  highp vec2 tmpvar_15;
					  tmpvar_15 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_14 = (xlv_TEXCOORD0 + tmpvar_15);
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_10 = (tmpvar_13.xyz * _Color.xyz);
					  highp vec2 P_16;
					  P_16 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_15);
					  lowp vec3 normal_17;
					  normal_17.xy = ((texture2D (_V_CW_NormalMap, P_16).wy * 2.0) - 1.0);
					  normal_17.z = sqrt((1.0 - clamp (
					    dot (normal_17.xy, normal_17.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_18;
					  tmpvar_18.xy = (normal_17.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_18.z = normal_17.z;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = normalize(tmpvar_18);
					  tmpvar_11 = tmpvar_19;
					  tmpvar_12 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD1.xyz, tmpvar_11);
					  worldN_3.x = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD2.xyz, tmpvar_11);
					  worldN_3.y = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD3.xyz, tmpvar_11);
					  worldN_3.z = tmpvar_22;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_23;
					  normalWorld_23 = worldN_3;
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_23;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_27;
					  viewDir_27 = worldViewDir_5;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  highp float nh_30;
					  lowp float diff_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_31 = tmpvar_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_27)
					  )));
					  nh_30 = tmpvar_33;
					  mediump float y_34;
					  y_34 = (_Shininess * 128.0);
					  highp float tmpvar_35;
					  tmpvar_35 = (pow (nh_30, y_34) * tmpvar_13.w);
					  c_29.xyz = (((tmpvar_10 * tmpvar_1) * diff_31) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_35));
					  c_29.w = (tmpvar_13.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = (c_29.xyz + (tmpvar_10 * ambient_24));
					  c_4.w = c_28.w;
					  c_4.xyz = (c_28.xyz + tmpvar_12);
					  highp float tmpvar_36;
					  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_36));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_3 = tmpvar_46;
					  highp mat3 tmpvar_47;
					  tmpvar_47[0] = _Object2World[0].xyz;
					  tmpvar_47[1] = _Object2World[1].xyz;
					  tmpvar_47[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = normalize((tmpvar_47 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_48;
					  highp float tmpvar_49;
					  tmpvar_49 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_49;
					  lowp vec3 tmpvar_50;
					  tmpvar_50 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.x;
					  tmpvar_51.y = tmpvar_50.x;
					  tmpvar_51.z = worldNormal_3.x;
					  tmpvar_51.w = tmpvar_42.x;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.y;
					  tmpvar_52.y = tmpvar_50.y;
					  tmpvar_52.z = worldNormal_3.y;
					  tmpvar_52.w = tmpvar_42.y;
					  highp vec4 tmpvar_53;
					  tmpvar_53.x = worldTangent_2.z;
					  tmpvar_53.y = tmpvar_50.z;
					  tmpvar_53.z = worldNormal_3.z;
					  tmpvar_53.w = tmpvar_42.z;
					  highp vec3 lightColor0_54;
					  lightColor0_54 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_55;
					  lightColor1_55 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_56;
					  lightColor2_56 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_57;
					  lightColor3_57 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_58;
					  lightAttenSq_58 = unity_4LightAtten0;
					  highp vec3 normal_59;
					  normal_59 = worldNormal_3;
					  highp vec3 col_60;
					  highp vec4 ndotl_61;
					  highp vec4 lengthSq_62;
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_62 = (tmpvar_63 * tmpvar_63);
					  lengthSq_62 = (lengthSq_62 + (tmpvar_64 * tmpvar_64));
					  lengthSq_62 = (lengthSq_62 + (tmpvar_65 * tmpvar_65));
					  ndotl_61 = (tmpvar_63 * normal_59.x);
					  ndotl_61 = (ndotl_61 + (tmpvar_64 * normal_59.y));
					  ndotl_61 = (ndotl_61 + (tmpvar_65 * normal_59.z));
					  highp vec4 tmpvar_66;
					  tmpvar_66 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_61 * inversesqrt(lengthSq_62)));
					  ndotl_61 = tmpvar_66;
					  highp vec4 tmpvar_67;
					  tmpvar_67 = (tmpvar_66 * (1.0/((1.0 + 
					    (lengthSq_62 * lightAttenSq_58)
					  ))));
					  col_60 = (lightColor0_54 * tmpvar_67.x);
					  col_60 = (col_60 + (lightColor1_55 * tmpvar_67.y));
					  col_60 = (col_60 + (lightColor2_56 * tmpvar_67.z));
					  col_60 = (col_60 + (lightColor3_57 * tmpvar_67.w));
					  tmpvar_5 = col_60;
					  mediump vec3 normal_68;
					  normal_68 = worldNormal_3;
					  mediump vec3 ambient_69;
					  ambient_69 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_70;
					  mediump vec4 tmpvar_71;
					  tmpvar_71 = (normal_68.xyzz * normal_68.yzzx);
					  x1_70.x = dot (unity_SHBr, tmpvar_71);
					  x1_70.y = dot (unity_SHBg, tmpvar_71);
					  x1_70.z = dot (unity_SHBb, tmpvar_71);
					  ambient_69 = (ambient_69 + (x1_70 + (unity_SHC.xyz * 
					    ((normal_68.x * normal_68.x) - (normal_68.y * normal_68.y))
					  )));
					  tmpvar_5 = ambient_69;
					  highp vec4 o_72;
					  highp vec4 tmpvar_73;
					  tmpvar_73 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_74;
					  tmpvar_74.x = tmpvar_73.x;
					  tmpvar_74.y = (tmpvar_73.y * _ProjectionParams.x);
					  o_72.xy = (tmpvar_74 + tmpvar_73.w);
					  o_72.zw = tmpvar_4.zw;
					  tmpvar_6 = o_72;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_51;
					  xlv_TEXCOORD2 = tmpvar_52;
					  xlv_TEXCOORD3 = tmpvar_53;
					  xlv_TEXCOORD4 = ambient_69;
					  xlv_TEXCOORD5 = tmpvar_6;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_6 = tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_12 = tmpvar_20;
					  tmpvar_13 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_4.x = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_4.y = tmpvar_23;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_4.z = tmpvar_24;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_21;
					  mediump vec3 normalWorld_25;
					  normalWorld_25 = worldN_4;
					  mediump vec3 tmpvar_26;
					  tmpvar_26 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_27;
					  mediump vec4 tmpvar_28;
					  tmpvar_28.w = 1.0;
					  tmpvar_28.xyz = normalWorld_25;
					  mediump vec3 x_29;
					  x_29.x = dot (unity_SHAr, tmpvar_28);
					  x_29.y = dot (unity_SHAg, tmpvar_28);
					  x_29.z = dot (unity_SHAb, tmpvar_28);
					  ambient_27 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_29)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_26;
					  mediump vec3 viewDir_30;
					  viewDir_30 = worldViewDir_6;
					  lowp vec4 c_31;
					  lowp vec4 c_32;
					  highp float nh_33;
					  lowp float diff_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_34 = tmpvar_35;
					  mediump float tmpvar_36;
					  tmpvar_36 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_30)
					  )));
					  nh_33 = tmpvar_36;
					  mediump float y_37;
					  y_37 = (_Shininess * 128.0);
					  highp float tmpvar_38;
					  tmpvar_38 = (pow (nh_33, y_37) * tmpvar_14.w);
					  c_32.xyz = (((tmpvar_11 * tmpvar_26) * diff_34) + ((tmpvar_26 * _SpecColor.xyz) * tmpvar_38));
					  c_32.w = (tmpvar_14.w * _Color.w);
					  c_31.w = c_32.w;
					  c_31.xyz = (c_32.xyz + (tmpvar_11 * ambient_27));
					  c_5.w = c_31.w;
					  c_5.xyz = (c_31.xyz + tmpvar_13);
					  highp float tmpvar_39;
					  tmpvar_39 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_5.xyz, vec3(tmpvar_39));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  mediump vec3 normal_42;
					  normal_42 = worldNormal_1;
					  mediump vec3 x1_43;
					  mediump vec4 tmpvar_44;
					  tmpvar_44 = (normal_42.xyzz * normal_42.yzzx);
					  x1_43.x = dot (unity_SHBr, tmpvar_44);
					  x1_43.y = dot (unity_SHBg, tmpvar_44);
					  x1_43.z = dot (unity_SHBb, tmpvar_44);
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_43 + (unity_SHC.xyz * (
					    (normal_42.x * normal_42.x)
					   - 
					    (normal_42.y * normal_42.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_11;
					  normalWorld_11 = tmpvar_4;
					  mediump vec3 ambient_12;
					  mediump vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = normalWorld_11;
					  mediump vec3 x_14;
					  x_14.x = dot (unity_SHAr, tmpvar_13);
					  x_14.y = dot (unity_SHAg, tmpvar_13);
					  x_14.z = dot (unity_SHAb, tmpvar_13);
					  ambient_12 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_14)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_15;
					  lowp vec4 c_16;
					  lowp float diff_17;
					  mediump float tmpvar_18;
					  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_17 = tmpvar_18;
					  c_16.xyz = ((tmpvar_8 * tmpvar_1) * diff_17);
					  c_16.w = (tmpvar_9.w * _Color.w);
					  c_15.w = c_16.w;
					  c_15.xyz = (c_16.xyz + (tmpvar_8 * ambient_12));
					  c_3.xyz = c_15.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_44;
					  normal_44 = worldNormal_1;
					  mediump vec3 x1_45;
					  mediump vec4 tmpvar_46;
					  tmpvar_46 = (normal_44.xyzz * normal_44.yzzx);
					  x1_45.x = dot (unity_SHBr, tmpvar_46);
					  x1_45.y = dot (unity_SHBg, tmpvar_46);
					  x1_45.z = dot (unity_SHBb, tmpvar_46);
					  highp vec4 o_47;
					  highp vec4 tmpvar_48;
					  tmpvar_48 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_49;
					  tmpvar_49.x = tmpvar_48.x;
					  tmpvar_49.y = (tmpvar_48.y * _ProjectionParams.x);
					  o_47.xy = (tmpvar_49 + tmpvar_48.w);
					  o_47.zw = tmpvar_2.zw;
					  tmpvar_4 = o_47;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_45 + (unity_SHC.xyz * (
					    (normal_44.x * normal_44.x)
					   - 
					    (normal_44.y * normal_44.y)
					  )));
					  xlv_TEXCOORD4 = tmpvar_4;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  P_11 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_9 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  lowp float tmpvar_12;
					  tmpvar_12 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_12;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = tmpvar_5;
					  mediump vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_15;
					  mediump vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = normalWorld_13;
					  mediump vec3 x_17;
					  x_17.x = dot (unity_SHAr, tmpvar_16);
					  x_17.y = dot (unity_SHAg, tmpvar_16);
					  x_17.z = dot (unity_SHAb, tmpvar_16);
					  ambient_15 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_17)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_14;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_20 = tmpvar_21;
					  c_19.xyz = ((tmpvar_9 * tmpvar_14) * diff_20);
					  c_19.w = (tmpvar_10.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = (c_19.xyz + (tmpvar_9 * ambient_15));
					  c_4.xyz = c_18.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_2 = worldNormal_1;
					  highp vec3 lightColor0_44;
					  lightColor0_44 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_45;
					  lightColor1_45 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_46;
					  lightColor2_46 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_47;
					  lightColor3_47 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_48;
					  lightAttenSq_48 = unity_4LightAtten0;
					  highp vec3 normal_49;
					  normal_49 = worldNormal_1;
					  highp vec3 col_50;
					  highp vec4 ndotl_51;
					  highp vec4 lengthSq_52;
					  highp vec4 tmpvar_53;
					  tmpvar_53 = (unity_4LightPosX0 - tmpvar_39.x);
					  highp vec4 tmpvar_54;
					  tmpvar_54 = (unity_4LightPosY0 - tmpvar_39.y);
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosZ0 - tmpvar_39.z);
					  lengthSq_52 = (tmpvar_53 * tmpvar_53);
					  lengthSq_52 = (lengthSq_52 + (tmpvar_54 * tmpvar_54));
					  lengthSq_52 = (lengthSq_52 + (tmpvar_55 * tmpvar_55));
					  ndotl_51 = (tmpvar_53 * normal_49.x);
					  ndotl_51 = (ndotl_51 + (tmpvar_54 * normal_49.y));
					  ndotl_51 = (ndotl_51 + (tmpvar_55 * normal_49.z));
					  highp vec4 tmpvar_56;
					  tmpvar_56 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_51 * inversesqrt(lengthSq_52)));
					  ndotl_51 = tmpvar_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_56 * (1.0/((1.0 + 
					    (lengthSq_52 * lightAttenSq_48)
					  ))));
					  col_50 = (lightColor0_44 * tmpvar_57.x);
					  col_50 = (col_50 + (lightColor1_45 * tmpvar_57.y));
					  col_50 = (col_50 + (lightColor2_46 * tmpvar_57.z));
					  col_50 = (col_50 + (lightColor3_47 * tmpvar_57.w));
					  tmpvar_3 = col_50;
					  mediump vec3 normal_58;
					  normal_58 = worldNormal_1;
					  mediump vec3 ambient_59;
					  ambient_59 = (tmpvar_3 * ((tmpvar_3 * 
					    ((tmpvar_3 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_60;
					  mediump vec4 tmpvar_61;
					  tmpvar_61 = (normal_58.xyzz * normal_58.yzzx);
					  x1_60.x = dot (unity_SHBr, tmpvar_61);
					  x1_60.y = dot (unity_SHBg, tmpvar_61);
					  x1_60.z = dot (unity_SHBb, tmpvar_61);
					  ambient_59 = (ambient_59 + (x1_60 + (unity_SHC.xyz * 
					    ((normal_58.x * normal_58.x) - (normal_58.y * normal_58.y))
					  )));
					  tmpvar_3 = ambient_59;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = tmpvar_39;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_59;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_11;
					  normalWorld_11 = tmpvar_4;
					  mediump vec3 ambient_12;
					  mediump vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = normalWorld_11;
					  mediump vec3 x_14;
					  x_14.x = dot (unity_SHAr, tmpvar_13);
					  x_14.y = dot (unity_SHAg, tmpvar_13);
					  x_14.z = dot (unity_SHAb, tmpvar_13);
					  ambient_12 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_14)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_15;
					  lowp vec4 c_16;
					  lowp float diff_17;
					  mediump float tmpvar_18;
					  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_17 = tmpvar_18;
					  c_16.xyz = ((tmpvar_8 * tmpvar_1) * diff_17);
					  c_16.w = (tmpvar_9.w * _Color.w);
					  c_15.w = c_16.w;
					  c_15.xyz = (c_16.xyz + (tmpvar_8 * ambient_12));
					  c_3.xyz = c_15.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_46;
					  lightColor0_46 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_47;
					  lightColor1_47 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_48;
					  lightColor2_48 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_49;
					  lightColor3_49 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_50;
					  lightAttenSq_50 = unity_4LightAtten0;
					  highp vec3 normal_51;
					  normal_51 = worldNormal_1;
					  highp vec3 col_52;
					  highp vec4 ndotl_53;
					  highp vec4 lengthSq_54;
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_54 = (tmpvar_55 * tmpvar_55);
					  lengthSq_54 = (lengthSq_54 + (tmpvar_56 * tmpvar_56));
					  lengthSq_54 = (lengthSq_54 + (tmpvar_57 * tmpvar_57));
					  ndotl_53 = (tmpvar_55 * normal_51.x);
					  ndotl_53 = (ndotl_53 + (tmpvar_56 * normal_51.y));
					  ndotl_53 = (ndotl_53 + (tmpvar_57 * normal_51.z));
					  highp vec4 tmpvar_58;
					  tmpvar_58 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_53 * inversesqrt(lengthSq_54)));
					  ndotl_53 = tmpvar_58;
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (tmpvar_58 * (1.0/((1.0 + 
					    (lengthSq_54 * lightAttenSq_50)
					  ))));
					  col_52 = (lightColor0_46 * tmpvar_59.x);
					  col_52 = (col_52 + (lightColor1_47 * tmpvar_59.y));
					  col_52 = (col_52 + (lightColor2_48 * tmpvar_59.z));
					  col_52 = (col_52 + (lightColor3_49 * tmpvar_59.w));
					  tmpvar_4 = col_52;
					  mediump vec3 normal_60;
					  normal_60 = worldNormal_1;
					  mediump vec3 ambient_61;
					  ambient_61 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_62;
					  mediump vec4 tmpvar_63;
					  tmpvar_63 = (normal_60.xyzz * normal_60.yzzx);
					  x1_62.x = dot (unity_SHBr, tmpvar_63);
					  x1_62.y = dot (unity_SHBg, tmpvar_63);
					  x1_62.z = dot (unity_SHBb, tmpvar_63);
					  ambient_61 = (ambient_61 + (x1_62 + (unity_SHC.xyz * 
					    ((normal_60.x * normal_60.x) - (normal_60.y * normal_60.y))
					  )));
					  tmpvar_4 = ambient_61;
					  highp vec4 o_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_66;
					  tmpvar_66.x = tmpvar_65.x;
					  tmpvar_66.y = (tmpvar_65.y * _ProjectionParams.x);
					  o_64.xy = (tmpvar_66 + tmpvar_65.w);
					  o_64.zw = tmpvar_2.zw;
					  tmpvar_5 = o_64;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_41;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_61;
					  xlv_TEXCOORD4 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  P_11 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_9 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  lowp float tmpvar_12;
					  tmpvar_12 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_12;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = tmpvar_5;
					  mediump vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_15;
					  mediump vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = normalWorld_13;
					  mediump vec3 x_17;
					  x_17.x = dot (unity_SHAr, tmpvar_16);
					  x_17.y = dot (unity_SHAg, tmpvar_16);
					  x_17.z = dot (unity_SHAb, tmpvar_16);
					  ambient_15 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_17)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_14;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_20 = tmpvar_21;
					  c_19.xyz = ((tmpvar_9 * tmpvar_14) * diff_20);
					  c_19.w = (tmpvar_10.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = (c_19.xyz + (tmpvar_9 * ambient_15));
					  c_4.xyz = c_18.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_11;
					  normalWorld_11 = tmpvar_4;
					  mediump vec3 ambient_12;
					  mediump vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = normalWorld_11;
					  mediump vec3 x_14;
					  x_14.x = dot (unity_SHAr, tmpvar_13);
					  x_14.y = dot (unity_SHAg, tmpvar_13);
					  x_14.z = dot (unity_SHAb, tmpvar_13);
					  ambient_12 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_14)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_15;
					  lowp vec4 c_16;
					  lowp float diff_17;
					  mediump float tmpvar_18;
					  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_17 = tmpvar_18;
					  c_16.xyz = ((tmpvar_8 * tmpvar_1) * diff_17);
					  c_16.w = (tmpvar_9.w * _Color.w);
					  c_15.w = c_16.w;
					  c_15.xyz = (c_16.xyz + (tmpvar_8 * ambient_12));
					  highp float tmpvar_19;
					  tmpvar_19 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_15.xyz, vec3(tmpvar_19));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_44;
					  normal_44 = worldNormal_1;
					  mediump vec3 x1_45;
					  mediump vec4 tmpvar_46;
					  tmpvar_46 = (normal_44.xyzz * normal_44.yzzx);
					  x1_45.x = dot (unity_SHBr, tmpvar_46);
					  x1_45.y = dot (unity_SHBg, tmpvar_46);
					  x1_45.z = dot (unity_SHBb, tmpvar_46);
					  highp vec4 o_47;
					  highp vec4 tmpvar_48;
					  tmpvar_48 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_49;
					  tmpvar_49.x = tmpvar_48.x;
					  tmpvar_49.y = (tmpvar_48.y * _ProjectionParams.x);
					  o_47.xy = (tmpvar_49 + tmpvar_48.w);
					  o_47.zw = tmpvar_2.zw;
					  tmpvar_4 = o_47;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_45 + (unity_SHC.xyz * (
					    (normal_44.x * normal_44.x)
					   - 
					    (normal_44.y * normal_44.y)
					  )));
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  P_11 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_9 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  lowp float tmpvar_12;
					  tmpvar_12 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_12;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = tmpvar_5;
					  mediump vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_15;
					  mediump vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = normalWorld_13;
					  mediump vec3 x_17;
					  x_17.x = dot (unity_SHAr, tmpvar_16);
					  x_17.y = dot (unity_SHAg, tmpvar_16);
					  x_17.z = dot (unity_SHAb, tmpvar_16);
					  ambient_15 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_17)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_14;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_20 = tmpvar_21;
					  c_19.xyz = ((tmpvar_9 * tmpvar_14) * diff_20);
					  c_19.w = (tmpvar_10.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = (c_19.xyz + (tmpvar_9 * ambient_15));
					  highp float tmpvar_22;
					  tmpvar_22 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_18.xyz, vec3(tmpvar_22));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_44;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_45;
					  lightColor0_45 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_46;
					  lightColor1_46 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_47;
					  lightColor2_47 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_48;
					  lightColor3_48 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_49;
					  lightAttenSq_49 = unity_4LightAtten0;
					  highp vec3 normal_50;
					  normal_50 = worldNormal_1;
					  highp vec3 col_51;
					  highp vec4 ndotl_52;
					  highp vec4 lengthSq_53;
					  highp vec4 tmpvar_54;
					  tmpvar_54 = (unity_4LightPosX0 - tmpvar_40.x);
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosY0 - tmpvar_40.y);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosZ0 - tmpvar_40.z);
					  lengthSq_53 = (tmpvar_54 * tmpvar_54);
					  lengthSq_53 = (lengthSq_53 + (tmpvar_55 * tmpvar_55));
					  lengthSq_53 = (lengthSq_53 + (tmpvar_56 * tmpvar_56));
					  ndotl_52 = (tmpvar_54 * normal_50.x);
					  ndotl_52 = (ndotl_52 + (tmpvar_55 * normal_50.y));
					  ndotl_52 = (ndotl_52 + (tmpvar_56 * normal_50.z));
					  highp vec4 tmpvar_57;
					  tmpvar_57 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_52 * inversesqrt(lengthSq_53)));
					  ndotl_52 = tmpvar_57;
					  highp vec4 tmpvar_58;
					  tmpvar_58 = (tmpvar_57 * (1.0/((1.0 + 
					    (lengthSq_53 * lightAttenSq_49)
					  ))));
					  col_51 = (lightColor0_45 * tmpvar_58.x);
					  col_51 = (col_51 + (lightColor1_46 * tmpvar_58.y));
					  col_51 = (col_51 + (lightColor2_47 * tmpvar_58.z));
					  col_51 = (col_51 + (lightColor3_48 * tmpvar_58.w));
					  tmpvar_4 = col_51;
					  mediump vec3 normal_59;
					  normal_59 = worldNormal_1;
					  mediump vec3 ambient_60;
					  ambient_60 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_61;
					  mediump vec4 tmpvar_62;
					  tmpvar_62 = (normal_59.xyzz * normal_59.yzzx);
					  x1_61.x = dot (unity_SHBr, tmpvar_62);
					  x1_61.y = dot (unity_SHBg, tmpvar_62);
					  x1_61.z = dot (unity_SHBb, tmpvar_62);
					  ambient_60 = (ambient_60 + (x1_61 + (unity_SHC.xyz * 
					    ((normal_59.x * normal_59.x) - (normal_59.y * normal_59.y))
					  )));
					  tmpvar_4 = ambient_60;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_40;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_60;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_11;
					  normalWorld_11 = tmpvar_4;
					  mediump vec3 ambient_12;
					  mediump vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = normalWorld_11;
					  mediump vec3 x_14;
					  x_14.x = dot (unity_SHAr, tmpvar_13);
					  x_14.y = dot (unity_SHAg, tmpvar_13);
					  x_14.z = dot (unity_SHAb, tmpvar_13);
					  ambient_12 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_14)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_15;
					  lowp vec4 c_16;
					  lowp float diff_17;
					  mediump float tmpvar_18;
					  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_17 = tmpvar_18;
					  c_16.xyz = ((tmpvar_8 * tmpvar_1) * diff_17);
					  c_16.w = (tmpvar_9.w * _Color.w);
					  c_15.w = c_16.w;
					  c_15.xyz = (c_16.xyz + (tmpvar_8 * ambient_12));
					  highp float tmpvar_19;
					  tmpvar_19 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_15.xyz, vec3(tmpvar_19));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_46;
					  lightColor0_46 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_47;
					  lightColor1_47 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_48;
					  lightColor2_48 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_49;
					  lightColor3_49 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_50;
					  lightAttenSq_50 = unity_4LightAtten0;
					  highp vec3 normal_51;
					  normal_51 = worldNormal_1;
					  highp vec3 col_52;
					  highp vec4 ndotl_53;
					  highp vec4 lengthSq_54;
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_54 = (tmpvar_55 * tmpvar_55);
					  lengthSq_54 = (lengthSq_54 + (tmpvar_56 * tmpvar_56));
					  lengthSq_54 = (lengthSq_54 + (tmpvar_57 * tmpvar_57));
					  ndotl_53 = (tmpvar_55 * normal_51.x);
					  ndotl_53 = (ndotl_53 + (tmpvar_56 * normal_51.y));
					  ndotl_53 = (ndotl_53 + (tmpvar_57 * normal_51.z));
					  highp vec4 tmpvar_58;
					  tmpvar_58 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_53 * inversesqrt(lengthSq_54)));
					  ndotl_53 = tmpvar_58;
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (tmpvar_58 * (1.0/((1.0 + 
					    (lengthSq_54 * lightAttenSq_50)
					  ))));
					  col_52 = (lightColor0_46 * tmpvar_59.x);
					  col_52 = (col_52 + (lightColor1_47 * tmpvar_59.y));
					  col_52 = (col_52 + (lightColor2_48 * tmpvar_59.z));
					  col_52 = (col_52 + (lightColor3_49 * tmpvar_59.w));
					  tmpvar_4 = col_52;
					  mediump vec3 normal_60;
					  normal_60 = worldNormal_1;
					  mediump vec3 ambient_61;
					  ambient_61 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_62;
					  mediump vec4 tmpvar_63;
					  tmpvar_63 = (normal_60.xyzz * normal_60.yzzx);
					  x1_62.x = dot (unity_SHBr, tmpvar_63);
					  x1_62.y = dot (unity_SHBg, tmpvar_63);
					  x1_62.z = dot (unity_SHBb, tmpvar_63);
					  ambient_61 = (ambient_61 + (x1_62 + (unity_SHC.xyz * 
					    ((normal_60.x * normal_60.x) - (normal_60.y * normal_60.y))
					  )));
					  tmpvar_4 = ambient_61;
					  highp vec4 o_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_66;
					  tmpvar_66.x = tmpvar_65.x;
					  tmpvar_66.y = (tmpvar_65.y * _ProjectionParams.x);
					  o_64.xy = (tmpvar_66 + tmpvar_65.w);
					  o_64.zw = tmpvar_2.zw;
					  tmpvar_5 = o_64;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_41;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_61;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  P_11 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_9 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  lowp float tmpvar_12;
					  tmpvar_12 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_12;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = tmpvar_5;
					  mediump vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_15;
					  mediump vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = normalWorld_13;
					  mediump vec3 x_17;
					  x_17.x = dot (unity_SHAr, tmpvar_16);
					  x_17.y = dot (unity_SHAg, tmpvar_16);
					  x_17.z = dot (unity_SHAb, tmpvar_16);
					  ambient_15 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_17)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_14;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_20 = tmpvar_21;
					  c_19.xyz = ((tmpvar_9 * tmpvar_14) * diff_20);
					  c_19.w = (tmpvar_10.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = (c_19.xyz + (tmpvar_9 * ambient_15));
					  highp float tmpvar_22;
					  tmpvar_22 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_18.xyz, vec3(tmpvar_22));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  mediump vec3 normal_42;
					  normal_42 = worldNormal_1;
					  mediump vec3 x1_43;
					  mediump vec4 tmpvar_44;
					  tmpvar_44 = (normal_42.xyzz * normal_42.yzzx);
					  x1_43.x = dot (unity_SHBr, tmpvar_44);
					  x1_43.y = dot (unity_SHBg, tmpvar_44);
					  x1_43.z = dot (unity_SHBb, tmpvar_44);
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_43 + (unity_SHC.xyz * (
					    (normal_42.x * normal_42.x)
					   - 
					    (normal_42.y * normal_42.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = tmpvar_4;
					  mediump vec3 ambient_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = normalWorld_13;
					  mediump vec3 x_16;
					  x_16.x = dot (unity_SHAr, tmpvar_15);
					  x_16.y = dot (unity_SHAg, tmpvar_15);
					  x_16.z = dot (unity_SHAb, tmpvar_15);
					  ambient_14 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_16)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  highp float nh_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_21 = tmpvar_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_20 = tmpvar_23;
					  mediump float y_24;
					  y_24 = (_Shininess * 128.0);
					  highp float tmpvar_25;
					  tmpvar_25 = (pow (nh_20, y_24) * tmpvar_11.w);
					  c_19.xyz = (((tmpvar_10 * tmpvar_1) * diff_21) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_25));
					  c_19.w = (tmpvar_11.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = (c_19.xyz + (tmpvar_10 * ambient_14));
					  c_3.xyz = c_18.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_44;
					  normal_44 = worldNormal_1;
					  mediump vec3 x1_45;
					  mediump vec4 tmpvar_46;
					  tmpvar_46 = (normal_44.xyzz * normal_44.yzzx);
					  x1_45.x = dot (unity_SHBr, tmpvar_46);
					  x1_45.y = dot (unity_SHBg, tmpvar_46);
					  x1_45.z = dot (unity_SHBb, tmpvar_46);
					  highp vec4 o_47;
					  highp vec4 tmpvar_48;
					  tmpvar_48 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_49;
					  tmpvar_49.x = tmpvar_48.x;
					  tmpvar_49.y = (tmpvar_48.y * _ProjectionParams.x);
					  o_47.xy = (tmpvar_49 + tmpvar_48.w);
					  o_47.zw = tmpvar_2.zw;
					  tmpvar_4 = o_47;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_45 + (unity_SHC.xyz * (
					    (normal_44.x * normal_44.x)
					   - 
					    (normal_44.y * normal_44.y)
					  )));
					  xlv_TEXCOORD4 = tmpvar_4;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_6 = tmpvar_10;
					  tmpvar_8 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  P_13 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_11 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_8.xyz);
					  lowp float tmpvar_14;
					  tmpvar_14 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_14;
					  mediump vec3 normalWorld_15;
					  normalWorld_15 = tmpvar_5;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_17;
					  mediump vec4 tmpvar_18;
					  tmpvar_18.w = 1.0;
					  tmpvar_18.xyz = normalWorld_15;
					  mediump vec3 x_19;
					  x_19.x = dot (unity_SHAr, tmpvar_18);
					  x_19.y = dot (unity_SHAg, tmpvar_18);
					  x_19.z = dot (unity_SHAb, tmpvar_18);
					  ambient_17 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_19)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_16;
					  mediump vec3 viewDir_20;
					  viewDir_20 = worldViewDir_6;
					  lowp vec4 c_21;
					  lowp vec4 c_22;
					  highp float nh_23;
					  lowp float diff_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_24 = tmpvar_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (tmpvar_5, normalize(
					    (tmpvar_3 + viewDir_20)
					  )));
					  nh_23 = tmpvar_26;
					  mediump float y_27;
					  y_27 = (_Shininess * 128.0);
					  highp float tmpvar_28;
					  tmpvar_28 = (pow (nh_23, y_27) * tmpvar_12.w);
					  c_22.xyz = (((tmpvar_11 * tmpvar_16) * diff_24) + ((tmpvar_16 * _SpecColor.xyz) * tmpvar_28));
					  c_22.w = (tmpvar_12.w * _Color.w);
					  c_21.w = c_22.w;
					  c_21.xyz = (c_22.xyz + (tmpvar_11 * ambient_17));
					  c_4.xyz = c_21.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_2 = worldNormal_1;
					  highp vec3 lightColor0_44;
					  lightColor0_44 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_45;
					  lightColor1_45 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_46;
					  lightColor2_46 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_47;
					  lightColor3_47 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_48;
					  lightAttenSq_48 = unity_4LightAtten0;
					  highp vec3 normal_49;
					  normal_49 = worldNormal_1;
					  highp vec3 col_50;
					  highp vec4 ndotl_51;
					  highp vec4 lengthSq_52;
					  highp vec4 tmpvar_53;
					  tmpvar_53 = (unity_4LightPosX0 - tmpvar_39.x);
					  highp vec4 tmpvar_54;
					  tmpvar_54 = (unity_4LightPosY0 - tmpvar_39.y);
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosZ0 - tmpvar_39.z);
					  lengthSq_52 = (tmpvar_53 * tmpvar_53);
					  lengthSq_52 = (lengthSq_52 + (tmpvar_54 * tmpvar_54));
					  lengthSq_52 = (lengthSq_52 + (tmpvar_55 * tmpvar_55));
					  ndotl_51 = (tmpvar_53 * normal_49.x);
					  ndotl_51 = (ndotl_51 + (tmpvar_54 * normal_49.y));
					  ndotl_51 = (ndotl_51 + (tmpvar_55 * normal_49.z));
					  highp vec4 tmpvar_56;
					  tmpvar_56 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_51 * inversesqrt(lengthSq_52)));
					  ndotl_51 = tmpvar_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_56 * (1.0/((1.0 + 
					    (lengthSq_52 * lightAttenSq_48)
					  ))));
					  col_50 = (lightColor0_44 * tmpvar_57.x);
					  col_50 = (col_50 + (lightColor1_45 * tmpvar_57.y));
					  col_50 = (col_50 + (lightColor2_46 * tmpvar_57.z));
					  col_50 = (col_50 + (lightColor3_47 * tmpvar_57.w));
					  tmpvar_3 = col_50;
					  mediump vec3 normal_58;
					  normal_58 = worldNormal_1;
					  mediump vec3 ambient_59;
					  ambient_59 = (tmpvar_3 * ((tmpvar_3 * 
					    ((tmpvar_3 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_60;
					  mediump vec4 tmpvar_61;
					  tmpvar_61 = (normal_58.xyzz * normal_58.yzzx);
					  x1_60.x = dot (unity_SHBr, tmpvar_61);
					  x1_60.y = dot (unity_SHBg, tmpvar_61);
					  x1_60.z = dot (unity_SHBb, tmpvar_61);
					  ambient_59 = (ambient_59 + (x1_60 + (unity_SHC.xyz * 
					    ((normal_58.x * normal_58.x) - (normal_58.y * normal_58.y))
					  )));
					  tmpvar_3 = ambient_59;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = tmpvar_39;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_59;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = tmpvar_4;
					  mediump vec3 ambient_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = normalWorld_13;
					  mediump vec3 x_16;
					  x_16.x = dot (unity_SHAr, tmpvar_15);
					  x_16.y = dot (unity_SHAg, tmpvar_15);
					  x_16.z = dot (unity_SHAb, tmpvar_15);
					  ambient_14 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_16)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  highp float nh_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_21 = tmpvar_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_20 = tmpvar_23;
					  mediump float y_24;
					  y_24 = (_Shininess * 128.0);
					  highp float tmpvar_25;
					  tmpvar_25 = (pow (nh_20, y_24) * tmpvar_11.w);
					  c_19.xyz = (((tmpvar_10 * tmpvar_1) * diff_21) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_25));
					  c_19.w = (tmpvar_11.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = (c_19.xyz + (tmpvar_10 * ambient_14));
					  c_3.xyz = c_18.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_46;
					  lightColor0_46 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_47;
					  lightColor1_47 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_48;
					  lightColor2_48 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_49;
					  lightColor3_49 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_50;
					  lightAttenSq_50 = unity_4LightAtten0;
					  highp vec3 normal_51;
					  normal_51 = worldNormal_1;
					  highp vec3 col_52;
					  highp vec4 ndotl_53;
					  highp vec4 lengthSq_54;
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_54 = (tmpvar_55 * tmpvar_55);
					  lengthSq_54 = (lengthSq_54 + (tmpvar_56 * tmpvar_56));
					  lengthSq_54 = (lengthSq_54 + (tmpvar_57 * tmpvar_57));
					  ndotl_53 = (tmpvar_55 * normal_51.x);
					  ndotl_53 = (ndotl_53 + (tmpvar_56 * normal_51.y));
					  ndotl_53 = (ndotl_53 + (tmpvar_57 * normal_51.z));
					  highp vec4 tmpvar_58;
					  tmpvar_58 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_53 * inversesqrt(lengthSq_54)));
					  ndotl_53 = tmpvar_58;
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (tmpvar_58 * (1.0/((1.0 + 
					    (lengthSq_54 * lightAttenSq_50)
					  ))));
					  col_52 = (lightColor0_46 * tmpvar_59.x);
					  col_52 = (col_52 + (lightColor1_47 * tmpvar_59.y));
					  col_52 = (col_52 + (lightColor2_48 * tmpvar_59.z));
					  col_52 = (col_52 + (lightColor3_49 * tmpvar_59.w));
					  tmpvar_4 = col_52;
					  mediump vec3 normal_60;
					  normal_60 = worldNormal_1;
					  mediump vec3 ambient_61;
					  ambient_61 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_62;
					  mediump vec4 tmpvar_63;
					  tmpvar_63 = (normal_60.xyzz * normal_60.yzzx);
					  x1_62.x = dot (unity_SHBr, tmpvar_63);
					  x1_62.y = dot (unity_SHBg, tmpvar_63);
					  x1_62.z = dot (unity_SHBb, tmpvar_63);
					  ambient_61 = (ambient_61 + (x1_62 + (unity_SHC.xyz * 
					    ((normal_60.x * normal_60.x) - (normal_60.y * normal_60.y))
					  )));
					  tmpvar_4 = ambient_61;
					  highp vec4 o_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_66;
					  tmpvar_66.x = tmpvar_65.x;
					  tmpvar_66.y = (tmpvar_65.y * _ProjectionParams.x);
					  o_64.xy = (tmpvar_66 + tmpvar_65.w);
					  o_64.zw = tmpvar_2.zw;
					  tmpvar_5 = o_64;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_41;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_61;
					  xlv_TEXCOORD4 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_6 = tmpvar_10;
					  tmpvar_8 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  P_13 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_11 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_8.xyz);
					  lowp float tmpvar_14;
					  tmpvar_14 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_14;
					  mediump vec3 normalWorld_15;
					  normalWorld_15 = tmpvar_5;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_17;
					  mediump vec4 tmpvar_18;
					  tmpvar_18.w = 1.0;
					  tmpvar_18.xyz = normalWorld_15;
					  mediump vec3 x_19;
					  x_19.x = dot (unity_SHAr, tmpvar_18);
					  x_19.y = dot (unity_SHAg, tmpvar_18);
					  x_19.z = dot (unity_SHAb, tmpvar_18);
					  ambient_17 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_19)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_16;
					  mediump vec3 viewDir_20;
					  viewDir_20 = worldViewDir_6;
					  lowp vec4 c_21;
					  lowp vec4 c_22;
					  highp float nh_23;
					  lowp float diff_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_24 = tmpvar_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (tmpvar_5, normalize(
					    (tmpvar_3 + viewDir_20)
					  )));
					  nh_23 = tmpvar_26;
					  mediump float y_27;
					  y_27 = (_Shininess * 128.0);
					  highp float tmpvar_28;
					  tmpvar_28 = (pow (nh_23, y_27) * tmpvar_12.w);
					  c_22.xyz = (((tmpvar_11 * tmpvar_16) * diff_24) + ((tmpvar_16 * _SpecColor.xyz) * tmpvar_28));
					  c_22.w = (tmpvar_12.w * _Color.w);
					  c_21.w = c_22.w;
					  c_21.xyz = (c_22.xyz + (tmpvar_11 * ambient_17));
					  c_4.xyz = c_21.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = tmpvar_4;
					  mediump vec3 ambient_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = normalWorld_13;
					  mediump vec3 x_16;
					  x_16.x = dot (unity_SHAr, tmpvar_15);
					  x_16.y = dot (unity_SHAg, tmpvar_15);
					  x_16.z = dot (unity_SHAb, tmpvar_15);
					  ambient_14 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_16)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  highp float nh_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_21 = tmpvar_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_20 = tmpvar_23;
					  mediump float y_24;
					  y_24 = (_Shininess * 128.0);
					  highp float tmpvar_25;
					  tmpvar_25 = (pow (nh_20, y_24) * tmpvar_11.w);
					  c_19.xyz = (((tmpvar_10 * tmpvar_1) * diff_21) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_25));
					  c_19.w = (tmpvar_11.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = (c_19.xyz + (tmpvar_10 * ambient_14));
					  highp float tmpvar_26;
					  tmpvar_26 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_18.xyz, vec3(tmpvar_26));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_44;
					  normal_44 = worldNormal_1;
					  mediump vec3 x1_45;
					  mediump vec4 tmpvar_46;
					  tmpvar_46 = (normal_44.xyzz * normal_44.yzzx);
					  x1_45.x = dot (unity_SHBr, tmpvar_46);
					  x1_45.y = dot (unity_SHBg, tmpvar_46);
					  x1_45.z = dot (unity_SHBb, tmpvar_46);
					  highp vec4 o_47;
					  highp vec4 tmpvar_48;
					  tmpvar_48 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_49;
					  tmpvar_49.x = tmpvar_48.x;
					  tmpvar_49.y = (tmpvar_48.y * _ProjectionParams.x);
					  o_47.xy = (tmpvar_49 + tmpvar_48.w);
					  o_47.zw = tmpvar_2.zw;
					  tmpvar_4 = o_47;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_45 + (unity_SHC.xyz * (
					    (normal_44.x * normal_44.x)
					   - 
					    (normal_44.y * normal_44.y)
					  )));
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_6 = tmpvar_10;
					  tmpvar_8 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  P_13 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_11 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_8.xyz);
					  lowp float tmpvar_14;
					  tmpvar_14 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_14;
					  mediump vec3 normalWorld_15;
					  normalWorld_15 = tmpvar_5;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_17;
					  mediump vec4 tmpvar_18;
					  tmpvar_18.w = 1.0;
					  tmpvar_18.xyz = normalWorld_15;
					  mediump vec3 x_19;
					  x_19.x = dot (unity_SHAr, tmpvar_18);
					  x_19.y = dot (unity_SHAg, tmpvar_18);
					  x_19.z = dot (unity_SHAb, tmpvar_18);
					  ambient_17 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_19)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_16;
					  mediump vec3 viewDir_20;
					  viewDir_20 = worldViewDir_6;
					  lowp vec4 c_21;
					  lowp vec4 c_22;
					  highp float nh_23;
					  lowp float diff_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_24 = tmpvar_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (tmpvar_5, normalize(
					    (tmpvar_3 + viewDir_20)
					  )));
					  nh_23 = tmpvar_26;
					  mediump float y_27;
					  y_27 = (_Shininess * 128.0);
					  highp float tmpvar_28;
					  tmpvar_28 = (pow (nh_23, y_27) * tmpvar_12.w);
					  c_22.xyz = (((tmpvar_11 * tmpvar_16) * diff_24) + ((tmpvar_16 * _SpecColor.xyz) * tmpvar_28));
					  c_22.w = (tmpvar_12.w * _Color.w);
					  c_21.w = c_22.w;
					  c_21.xyz = (c_22.xyz + (tmpvar_11 * ambient_17));
					  highp float tmpvar_29;
					  tmpvar_29 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_21.xyz, vec3(tmpvar_29));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_44;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_45;
					  lightColor0_45 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_46;
					  lightColor1_46 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_47;
					  lightColor2_47 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_48;
					  lightColor3_48 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_49;
					  lightAttenSq_49 = unity_4LightAtten0;
					  highp vec3 normal_50;
					  normal_50 = worldNormal_1;
					  highp vec3 col_51;
					  highp vec4 ndotl_52;
					  highp vec4 lengthSq_53;
					  highp vec4 tmpvar_54;
					  tmpvar_54 = (unity_4LightPosX0 - tmpvar_40.x);
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosY0 - tmpvar_40.y);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosZ0 - tmpvar_40.z);
					  lengthSq_53 = (tmpvar_54 * tmpvar_54);
					  lengthSq_53 = (lengthSq_53 + (tmpvar_55 * tmpvar_55));
					  lengthSq_53 = (lengthSq_53 + (tmpvar_56 * tmpvar_56));
					  ndotl_52 = (tmpvar_54 * normal_50.x);
					  ndotl_52 = (ndotl_52 + (tmpvar_55 * normal_50.y));
					  ndotl_52 = (ndotl_52 + (tmpvar_56 * normal_50.z));
					  highp vec4 tmpvar_57;
					  tmpvar_57 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_52 * inversesqrt(lengthSq_53)));
					  ndotl_52 = tmpvar_57;
					  highp vec4 tmpvar_58;
					  tmpvar_58 = (tmpvar_57 * (1.0/((1.0 + 
					    (lengthSq_53 * lightAttenSq_49)
					  ))));
					  col_51 = (lightColor0_45 * tmpvar_58.x);
					  col_51 = (col_51 + (lightColor1_46 * tmpvar_58.y));
					  col_51 = (col_51 + (lightColor2_47 * tmpvar_58.z));
					  col_51 = (col_51 + (lightColor3_48 * tmpvar_58.w));
					  tmpvar_4 = col_51;
					  mediump vec3 normal_59;
					  normal_59 = worldNormal_1;
					  mediump vec3 ambient_60;
					  ambient_60 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_61;
					  mediump vec4 tmpvar_62;
					  tmpvar_62 = (normal_59.xyzz * normal_59.yzzx);
					  x1_61.x = dot (unity_SHBr, tmpvar_62);
					  x1_61.y = dot (unity_SHBg, tmpvar_62);
					  x1_61.z = dot (unity_SHBb, tmpvar_62);
					  ambient_60 = (ambient_60 + (x1_61 + (unity_SHC.xyz * 
					    ((normal_59.x * normal_59.x) - (normal_59.y * normal_59.y))
					  )));
					  tmpvar_4 = ambient_60;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_40;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_60;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_13;
					  normalWorld_13 = tmpvar_4;
					  mediump vec3 ambient_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = normalWorld_13;
					  mediump vec3 x_16;
					  x_16.x = dot (unity_SHAr, tmpvar_15);
					  x_16.y = dot (unity_SHAg, tmpvar_15);
					  x_16.z = dot (unity_SHAb, tmpvar_15);
					  ambient_14 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_16)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  highp float nh_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_21 = tmpvar_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_20 = tmpvar_23;
					  mediump float y_24;
					  y_24 = (_Shininess * 128.0);
					  highp float tmpvar_25;
					  tmpvar_25 = (pow (nh_20, y_24) * tmpvar_11.w);
					  c_19.xyz = (((tmpvar_10 * tmpvar_1) * diff_21) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_25));
					  c_19.w = (tmpvar_11.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = (c_19.xyz + (tmpvar_10 * ambient_14));
					  highp float tmpvar_26;
					  tmpvar_26 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_18.xyz, vec3(tmpvar_26));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_46;
					  lightColor0_46 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_47;
					  lightColor1_47 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_48;
					  lightColor2_48 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_49;
					  lightColor3_49 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_50;
					  lightAttenSq_50 = unity_4LightAtten0;
					  highp vec3 normal_51;
					  normal_51 = worldNormal_1;
					  highp vec3 col_52;
					  highp vec4 ndotl_53;
					  highp vec4 lengthSq_54;
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_54 = (tmpvar_55 * tmpvar_55);
					  lengthSq_54 = (lengthSq_54 + (tmpvar_56 * tmpvar_56));
					  lengthSq_54 = (lengthSq_54 + (tmpvar_57 * tmpvar_57));
					  ndotl_53 = (tmpvar_55 * normal_51.x);
					  ndotl_53 = (ndotl_53 + (tmpvar_56 * normal_51.y));
					  ndotl_53 = (ndotl_53 + (tmpvar_57 * normal_51.z));
					  highp vec4 tmpvar_58;
					  tmpvar_58 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_53 * inversesqrt(lengthSq_54)));
					  ndotl_53 = tmpvar_58;
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (tmpvar_58 * (1.0/((1.0 + 
					    (lengthSq_54 * lightAttenSq_50)
					  ))));
					  col_52 = (lightColor0_46 * tmpvar_59.x);
					  col_52 = (col_52 + (lightColor1_47 * tmpvar_59.y));
					  col_52 = (col_52 + (lightColor2_48 * tmpvar_59.z));
					  col_52 = (col_52 + (lightColor3_49 * tmpvar_59.w));
					  tmpvar_4 = col_52;
					  mediump vec3 normal_60;
					  normal_60 = worldNormal_1;
					  mediump vec3 ambient_61;
					  ambient_61 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_62;
					  mediump vec4 tmpvar_63;
					  tmpvar_63 = (normal_60.xyzz * normal_60.yzzx);
					  x1_62.x = dot (unity_SHBr, tmpvar_63);
					  x1_62.y = dot (unity_SHBg, tmpvar_63);
					  x1_62.z = dot (unity_SHBb, tmpvar_63);
					  ambient_61 = (ambient_61 + (x1_62 + (unity_SHC.xyz * 
					    ((normal_60.x * normal_60.x) - (normal_60.y * normal_60.y))
					  )));
					  tmpvar_4 = ambient_61;
					  highp vec4 o_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_66;
					  tmpvar_66.x = tmpvar_65.x;
					  tmpvar_66.y = (tmpvar_65.y * _ProjectionParams.x);
					  o_64.xy = (tmpvar_66 + tmpvar_65.w);
					  o_64.zw = tmpvar_2.zw;
					  tmpvar_5 = o_64;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_41;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_61;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_6 = tmpvar_10;
					  tmpvar_8 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  P_13 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_11 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_8.xyz);
					  lowp float tmpvar_14;
					  tmpvar_14 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_14;
					  mediump vec3 normalWorld_15;
					  normalWorld_15 = tmpvar_5;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_17;
					  mediump vec4 tmpvar_18;
					  tmpvar_18.w = 1.0;
					  tmpvar_18.xyz = normalWorld_15;
					  mediump vec3 x_19;
					  x_19.x = dot (unity_SHAr, tmpvar_18);
					  x_19.y = dot (unity_SHAg, tmpvar_18);
					  x_19.z = dot (unity_SHAb, tmpvar_18);
					  ambient_17 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_19)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_16;
					  mediump vec3 viewDir_20;
					  viewDir_20 = worldViewDir_6;
					  lowp vec4 c_21;
					  lowp vec4 c_22;
					  highp float nh_23;
					  lowp float diff_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_24 = tmpvar_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (tmpvar_5, normalize(
					    (tmpvar_3 + viewDir_20)
					  )));
					  nh_23 = tmpvar_26;
					  mediump float y_27;
					  y_27 = (_Shininess * 128.0);
					  highp float tmpvar_28;
					  tmpvar_28 = (pow (nh_23, y_27) * tmpvar_12.w);
					  c_22.xyz = (((tmpvar_11 * tmpvar_16) * diff_24) + ((tmpvar_16 * _SpecColor.xyz) * tmpvar_28));
					  c_22.w = (tmpvar_12.w * _Color.w);
					  c_21.w = c_22.w;
					  c_21.xyz = (c_22.xyz + (tmpvar_11 * ambient_17));
					  highp float tmpvar_29;
					  tmpvar_29 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_21.xyz, vec3(tmpvar_29));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  tmpvar_48.w = tmpvar_39.x;
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  tmpvar_49.w = tmpvar_39.y;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  tmpvar_50.w = tmpvar_39.z;
					  mediump vec3 normal_51;
					  normal_51 = worldNormal_3;
					  mediump vec3 x1_52;
					  mediump vec4 tmpvar_53;
					  tmpvar_53 = (normal_51.xyzz * normal_51.yzzx);
					  x1_52.x = dot (unity_SHBr, tmpvar_53);
					  x1_52.y = dot (unity_SHBg, tmpvar_53);
					  x1_52.z = dot (unity_SHBb, tmpvar_53);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_52 + (unity_SHC.xyz * (
					    (normal_51.x * normal_51.x)
					   - 
					    (normal_51.y * normal_51.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_19;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_20;
					  normalWorld_20 = worldN_3;
					  mediump vec3 ambient_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = normalWorld_20;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_22);
					  x_23.y = dot (unity_SHAg, tmpvar_22);
					  x_23.z = dot (unity_SHAb, tmpvar_22);
					  ambient_21 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_23)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_26 = tmpvar_27;
					  c_25.xyz = ((tmpvar_8 * tmpvar_1) * diff_26);
					  c_25.w = (tmpvar_10.w * _Color.w);
					  c_24.w = c_25.w;
					  c_24.xyz = (c_25.xyz + (tmpvar_8 * ambient_21));
					  c_4.xyz = c_24.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  mediump vec3 normal_53;
					  normal_53 = worldNormal_3;
					  mediump vec3 x1_54;
					  mediump vec4 tmpvar_55;
					  tmpvar_55 = (normal_53.xyzz * normal_53.yzzx);
					  x1_54.x = dot (unity_SHBr, tmpvar_55);
					  x1_54.y = dot (unity_SHBg, tmpvar_55);
					  x1_54.z = dot (unity_SHBb, tmpvar_55);
					  highp vec4 o_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_58;
					  tmpvar_58.x = tmpvar_57.x;
					  tmpvar_58.y = (tmpvar_57.y * _ProjectionParams.x);
					  o_56.xy = (tmpvar_58 + tmpvar_57.w);
					  o_56.zw = tmpvar_4.zw;
					  tmpvar_5 = o_56;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_54 + (unity_SHC.xyz * (
					    (normal_53.x * normal_53.x)
					   - 
					    (normal_53.y * normal_53.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  highp vec2 tmpvar_13;
					  tmpvar_13 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_12 = (xlv_TEXCOORD0 + tmpvar_13);
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_9 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  highp vec2 P_14;
					  P_14 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_13);
					  lowp vec3 normal_15;
					  normal_15.xy = ((texture2D (_V_CW_NormalMap, P_14).wy * 2.0) - 1.0);
					  normal_15.z = sqrt((1.0 - clamp (
					    dot (normal_15.xy, normal_15.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_16;
					  tmpvar_16.xy = (normal_15.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_16.z = normal_15.z;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = normalize(tmpvar_16);
					  tmpvar_10 = tmpvar_17;
					  lowp float tmpvar_18;
					  tmpvar_18 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_21;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_18;
					  mediump vec3 normalWorld_22;
					  normalWorld_22 = worldN_4;
					  mediump vec3 tmpvar_23;
					  tmpvar_23 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_22;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_23;
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  lowp float diff_29;
					  mediump float tmpvar_30;
					  tmpvar_30 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_29 = tmpvar_30;
					  c_28.xyz = ((tmpvar_9 * tmpvar_23) * diff_29);
					  c_28.w = (tmpvar_11.w * _Color.w);
					  c_27.w = c_28.w;
					  c_27.xyz = (c_28.xyz + (tmpvar_9 * ambient_24));
					  c_5.xyz = c_27.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  highp vec3 lightColor0_52;
					  lightColor0_52 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_53;
					  lightColor1_53 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_54;
					  lightColor2_54 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_55;
					  lightColor3_55 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_56;
					  lightAttenSq_56 = unity_4LightAtten0;
					  highp vec3 normal_57;
					  normal_57 = worldNormal_3;
					  highp vec3 col_58;
					  highp vec4 ndotl_59;
					  highp vec4 lengthSq_60;
					  highp vec4 tmpvar_61;
					  tmpvar_61 = (unity_4LightPosX0 - tmpvar_40.x);
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (unity_4LightPosY0 - tmpvar_40.y);
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosZ0 - tmpvar_40.z);
					  lengthSq_60 = (tmpvar_61 * tmpvar_61);
					  lengthSq_60 = (lengthSq_60 + (tmpvar_62 * tmpvar_62));
					  lengthSq_60 = (lengthSq_60 + (tmpvar_63 * tmpvar_63));
					  ndotl_59 = (tmpvar_61 * normal_57.x);
					  ndotl_59 = (ndotl_59 + (tmpvar_62 * normal_57.y));
					  ndotl_59 = (ndotl_59 + (tmpvar_63 * normal_57.z));
					  highp vec4 tmpvar_64;
					  tmpvar_64 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_59 * inversesqrt(lengthSq_60)));
					  ndotl_59 = tmpvar_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_64 * (1.0/((1.0 + 
					    (lengthSq_60 * lightAttenSq_56)
					  ))));
					  col_58 = (lightColor0_52 * tmpvar_65.x);
					  col_58 = (col_58 + (lightColor1_53 * tmpvar_65.y));
					  col_58 = (col_58 + (lightColor2_54 * tmpvar_65.z));
					  col_58 = (col_58 + (lightColor3_55 * tmpvar_65.w));
					  tmpvar_4 = col_58;
					  mediump vec3 normal_66;
					  normal_66 = worldNormal_3;
					  mediump vec3 ambient_67;
					  ambient_67 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_68;
					  mediump vec4 tmpvar_69;
					  tmpvar_69 = (normal_66.xyzz * normal_66.yzzx);
					  x1_68.x = dot (unity_SHBr, tmpvar_69);
					  x1_68.y = dot (unity_SHBg, tmpvar_69);
					  x1_68.z = dot (unity_SHBb, tmpvar_69);
					  ambient_67 = (ambient_67 + (x1_68 + (unity_SHC.xyz * 
					    ((normal_66.x * normal_66.x) - (normal_66.y * normal_66.y))
					  )));
					  tmpvar_4 = ambient_67;
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_67;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_19;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_20;
					  normalWorld_20 = worldN_3;
					  mediump vec3 ambient_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = normalWorld_20;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_22);
					  x_23.y = dot (unity_SHAg, tmpvar_22);
					  x_23.z = dot (unity_SHAb, tmpvar_22);
					  ambient_21 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_23)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_26 = tmpvar_27;
					  c_25.xyz = ((tmpvar_8 * tmpvar_1) * diff_26);
					  c_25.w = (tmpvar_10.w * _Color.w);
					  c_24.w = c_25.w;
					  c_24.xyz = (c_25.xyz + (tmpvar_8 * ambient_21));
					  c_4.xyz = c_24.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_3 = tmpvar_46;
					  highp mat3 tmpvar_47;
					  tmpvar_47[0] = _Object2World[0].xyz;
					  tmpvar_47[1] = _Object2World[1].xyz;
					  tmpvar_47[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = normalize((tmpvar_47 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_48;
					  highp float tmpvar_49;
					  tmpvar_49 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_49;
					  lowp vec3 tmpvar_50;
					  tmpvar_50 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.x;
					  tmpvar_51.y = tmpvar_50.x;
					  tmpvar_51.z = worldNormal_3.x;
					  tmpvar_51.w = tmpvar_42.x;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.y;
					  tmpvar_52.y = tmpvar_50.y;
					  tmpvar_52.z = worldNormal_3.y;
					  tmpvar_52.w = tmpvar_42.y;
					  highp vec4 tmpvar_53;
					  tmpvar_53.x = worldTangent_2.z;
					  tmpvar_53.y = tmpvar_50.z;
					  tmpvar_53.z = worldNormal_3.z;
					  tmpvar_53.w = tmpvar_42.z;
					  highp vec3 lightColor0_54;
					  lightColor0_54 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_55;
					  lightColor1_55 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_56;
					  lightColor2_56 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_57;
					  lightColor3_57 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_58;
					  lightAttenSq_58 = unity_4LightAtten0;
					  highp vec3 normal_59;
					  normal_59 = worldNormal_3;
					  highp vec3 col_60;
					  highp vec4 ndotl_61;
					  highp vec4 lengthSq_62;
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_62 = (tmpvar_63 * tmpvar_63);
					  lengthSq_62 = (lengthSq_62 + (tmpvar_64 * tmpvar_64));
					  lengthSq_62 = (lengthSq_62 + (tmpvar_65 * tmpvar_65));
					  ndotl_61 = (tmpvar_63 * normal_59.x);
					  ndotl_61 = (ndotl_61 + (tmpvar_64 * normal_59.y));
					  ndotl_61 = (ndotl_61 + (tmpvar_65 * normal_59.z));
					  highp vec4 tmpvar_66;
					  tmpvar_66 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_61 * inversesqrt(lengthSq_62)));
					  ndotl_61 = tmpvar_66;
					  highp vec4 tmpvar_67;
					  tmpvar_67 = (tmpvar_66 * (1.0/((1.0 + 
					    (lengthSq_62 * lightAttenSq_58)
					  ))));
					  col_60 = (lightColor0_54 * tmpvar_67.x);
					  col_60 = (col_60 + (lightColor1_55 * tmpvar_67.y));
					  col_60 = (col_60 + (lightColor2_56 * tmpvar_67.z));
					  col_60 = (col_60 + (lightColor3_57 * tmpvar_67.w));
					  tmpvar_5 = col_60;
					  mediump vec3 normal_68;
					  normal_68 = worldNormal_3;
					  mediump vec3 ambient_69;
					  ambient_69 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_70;
					  mediump vec4 tmpvar_71;
					  tmpvar_71 = (normal_68.xyzz * normal_68.yzzx);
					  x1_70.x = dot (unity_SHBr, tmpvar_71);
					  x1_70.y = dot (unity_SHBg, tmpvar_71);
					  x1_70.z = dot (unity_SHBb, tmpvar_71);
					  ambient_69 = (ambient_69 + (x1_70 + (unity_SHC.xyz * 
					    ((normal_68.x * normal_68.x) - (normal_68.y * normal_68.y))
					  )));
					  tmpvar_5 = ambient_69;
					  highp vec4 o_72;
					  highp vec4 tmpvar_73;
					  tmpvar_73 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_74;
					  tmpvar_74.x = tmpvar_73.x;
					  tmpvar_74.y = (tmpvar_73.y * _ProjectionParams.x);
					  o_72.xy = (tmpvar_74 + tmpvar_73.w);
					  o_72.zw = tmpvar_4.zw;
					  tmpvar_6 = o_72;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_51;
					  xlv_TEXCOORD2 = tmpvar_52;
					  xlv_TEXCOORD3 = tmpvar_53;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_69;
					  xlv_TEXCOORD5 = tmpvar_6;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  highp vec2 tmpvar_13;
					  tmpvar_13 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_12 = (xlv_TEXCOORD0 + tmpvar_13);
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_9 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  highp vec2 P_14;
					  P_14 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_13);
					  lowp vec3 normal_15;
					  normal_15.xy = ((texture2D (_V_CW_NormalMap, P_14).wy * 2.0) - 1.0);
					  normal_15.z = sqrt((1.0 - clamp (
					    dot (normal_15.xy, normal_15.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_16;
					  tmpvar_16.xy = (normal_15.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_16.z = normal_15.z;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = normalize(tmpvar_16);
					  tmpvar_10 = tmpvar_17;
					  lowp float tmpvar_18;
					  tmpvar_18 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_21;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_18;
					  mediump vec3 normalWorld_22;
					  normalWorld_22 = worldN_4;
					  mediump vec3 tmpvar_23;
					  tmpvar_23 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_22;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_23;
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  lowp float diff_29;
					  mediump float tmpvar_30;
					  tmpvar_30 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_29 = tmpvar_30;
					  c_28.xyz = ((tmpvar_9 * tmpvar_23) * diff_29);
					  c_28.w = (tmpvar_11.w * _Color.w);
					  c_27.w = c_28.w;
					  c_27.xyz = (c_28.xyz + (tmpvar_9 * ambient_24));
					  c_5.xyz = c_27.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_19;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_20;
					  normalWorld_20 = worldN_3;
					  mediump vec3 ambient_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = normalWorld_20;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_22);
					  x_23.y = dot (unity_SHAg, tmpvar_22);
					  x_23.z = dot (unity_SHAb, tmpvar_22);
					  ambient_21 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_23)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_26 = tmpvar_27;
					  c_25.xyz = ((tmpvar_8 * tmpvar_1) * diff_26);
					  c_25.w = (tmpvar_10.w * _Color.w);
					  c_24.w = c_25.w;
					  c_24.xyz = (c_25.xyz + (tmpvar_8 * ambient_21));
					  highp float tmpvar_28;
					  tmpvar_28 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_24.xyz, vec3(tmpvar_28));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  mediump vec3 normal_53;
					  normal_53 = worldNormal_3;
					  mediump vec3 x1_54;
					  mediump vec4 tmpvar_55;
					  tmpvar_55 = (normal_53.xyzz * normal_53.yzzx);
					  x1_54.x = dot (unity_SHBr, tmpvar_55);
					  x1_54.y = dot (unity_SHBg, tmpvar_55);
					  x1_54.z = dot (unity_SHBb, tmpvar_55);
					  highp vec4 o_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_58;
					  tmpvar_58.x = tmpvar_57.x;
					  tmpvar_58.y = (tmpvar_57.y * _ProjectionParams.x);
					  o_56.xy = (tmpvar_58 + tmpvar_57.w);
					  o_56.zw = tmpvar_4.zw;
					  tmpvar_5 = o_56;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_54 + (unity_SHC.xyz * (
					    (normal_53.x * normal_53.x)
					   - 
					    (normal_53.y * normal_53.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  highp vec2 tmpvar_13;
					  tmpvar_13 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_12 = (xlv_TEXCOORD0 + tmpvar_13);
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_9 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  highp vec2 P_14;
					  P_14 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_13);
					  lowp vec3 normal_15;
					  normal_15.xy = ((texture2D (_V_CW_NormalMap, P_14).wy * 2.0) - 1.0);
					  normal_15.z = sqrt((1.0 - clamp (
					    dot (normal_15.xy, normal_15.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_16;
					  tmpvar_16.xy = (normal_15.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_16.z = normal_15.z;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = normalize(tmpvar_16);
					  tmpvar_10 = tmpvar_17;
					  lowp float tmpvar_18;
					  tmpvar_18 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_21;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_18;
					  mediump vec3 normalWorld_22;
					  normalWorld_22 = worldN_4;
					  mediump vec3 tmpvar_23;
					  tmpvar_23 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_22;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_23;
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  lowp float diff_29;
					  mediump float tmpvar_30;
					  tmpvar_30 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_29 = tmpvar_30;
					  c_28.xyz = ((tmpvar_9 * tmpvar_23) * diff_29);
					  c_28.w = (tmpvar_11.w * _Color.w);
					  c_27.w = c_28.w;
					  c_27.xyz = (c_28.xyz + (tmpvar_9 * ambient_24));
					  highp float tmpvar_31;
					  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_27.xyz, vec3(tmpvar_31));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  highp vec3 lightColor0_53;
					  lightColor0_53 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_54;
					  lightColor1_54 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_55;
					  lightColor2_55 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_56;
					  lightColor3_56 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_57;
					  lightAttenSq_57 = unity_4LightAtten0;
					  highp vec3 normal_58;
					  normal_58 = worldNormal_3;
					  highp vec3 col_59;
					  highp vec4 ndotl_60;
					  highp vec4 lengthSq_61;
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_61 = (tmpvar_62 * tmpvar_62);
					  lengthSq_61 = (lengthSq_61 + (tmpvar_63 * tmpvar_63));
					  lengthSq_61 = (lengthSq_61 + (tmpvar_64 * tmpvar_64));
					  ndotl_60 = (tmpvar_62 * normal_58.x);
					  ndotl_60 = (ndotl_60 + (tmpvar_63 * normal_58.y));
					  ndotl_60 = (ndotl_60 + (tmpvar_64 * normal_58.z));
					  highp vec4 tmpvar_65;
					  tmpvar_65 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_60 * inversesqrt(lengthSq_61)));
					  ndotl_60 = tmpvar_65;
					  highp vec4 tmpvar_66;
					  tmpvar_66 = (tmpvar_65 * (1.0/((1.0 + 
					    (lengthSq_61 * lightAttenSq_57)
					  ))));
					  col_59 = (lightColor0_53 * tmpvar_66.x);
					  col_59 = (col_59 + (lightColor1_54 * tmpvar_66.y));
					  col_59 = (col_59 + (lightColor2_55 * tmpvar_66.z));
					  col_59 = (col_59 + (lightColor3_56 * tmpvar_66.w));
					  tmpvar_5 = col_59;
					  mediump vec3 normal_67;
					  normal_67 = worldNormal_3;
					  mediump vec3 ambient_68;
					  ambient_68 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_69;
					  mediump vec4 tmpvar_70;
					  tmpvar_70 = (normal_67.xyzz * normal_67.yzzx);
					  x1_69.x = dot (unity_SHBr, tmpvar_70);
					  x1_69.y = dot (unity_SHBg, tmpvar_70);
					  x1_69.z = dot (unity_SHBb, tmpvar_70);
					  ambient_68 = (ambient_68 + (x1_69 + (unity_SHC.xyz * 
					    ((normal_67.x * normal_67.x) - (normal_67.y * normal_67.y))
					  )));
					  tmpvar_5 = ambient_68;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_68;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_19;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_20;
					  normalWorld_20 = worldN_3;
					  mediump vec3 ambient_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = normalWorld_20;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_22);
					  x_23.y = dot (unity_SHAg, tmpvar_22);
					  x_23.z = dot (unity_SHAb, tmpvar_22);
					  ambient_21 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_23)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_26 = tmpvar_27;
					  c_25.xyz = ((tmpvar_8 * tmpvar_1) * diff_26);
					  c_25.w = (tmpvar_10.w * _Color.w);
					  c_24.w = c_25.w;
					  c_24.xyz = (c_25.xyz + (tmpvar_8 * ambient_21));
					  highp float tmpvar_28;
					  tmpvar_28 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_24.xyz, vec3(tmpvar_28));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_3 = tmpvar_46;
					  highp mat3 tmpvar_47;
					  tmpvar_47[0] = _Object2World[0].xyz;
					  tmpvar_47[1] = _Object2World[1].xyz;
					  tmpvar_47[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = normalize((tmpvar_47 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_48;
					  highp float tmpvar_49;
					  tmpvar_49 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_49;
					  lowp vec3 tmpvar_50;
					  tmpvar_50 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.x;
					  tmpvar_51.y = tmpvar_50.x;
					  tmpvar_51.z = worldNormal_3.x;
					  tmpvar_51.w = tmpvar_42.x;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.y;
					  tmpvar_52.y = tmpvar_50.y;
					  tmpvar_52.z = worldNormal_3.y;
					  tmpvar_52.w = tmpvar_42.y;
					  highp vec4 tmpvar_53;
					  tmpvar_53.x = worldTangent_2.z;
					  tmpvar_53.y = tmpvar_50.z;
					  tmpvar_53.z = worldNormal_3.z;
					  tmpvar_53.w = tmpvar_42.z;
					  highp vec3 lightColor0_54;
					  lightColor0_54 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_55;
					  lightColor1_55 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_56;
					  lightColor2_56 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_57;
					  lightColor3_57 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_58;
					  lightAttenSq_58 = unity_4LightAtten0;
					  highp vec3 normal_59;
					  normal_59 = worldNormal_3;
					  highp vec3 col_60;
					  highp vec4 ndotl_61;
					  highp vec4 lengthSq_62;
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_62 = (tmpvar_63 * tmpvar_63);
					  lengthSq_62 = (lengthSq_62 + (tmpvar_64 * tmpvar_64));
					  lengthSq_62 = (lengthSq_62 + (tmpvar_65 * tmpvar_65));
					  ndotl_61 = (tmpvar_63 * normal_59.x);
					  ndotl_61 = (ndotl_61 + (tmpvar_64 * normal_59.y));
					  ndotl_61 = (ndotl_61 + (tmpvar_65 * normal_59.z));
					  highp vec4 tmpvar_66;
					  tmpvar_66 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_61 * inversesqrt(lengthSq_62)));
					  ndotl_61 = tmpvar_66;
					  highp vec4 tmpvar_67;
					  tmpvar_67 = (tmpvar_66 * (1.0/((1.0 + 
					    (lengthSq_62 * lightAttenSq_58)
					  ))));
					  col_60 = (lightColor0_54 * tmpvar_67.x);
					  col_60 = (col_60 + (lightColor1_55 * tmpvar_67.y));
					  col_60 = (col_60 + (lightColor2_56 * tmpvar_67.z));
					  col_60 = (col_60 + (lightColor3_57 * tmpvar_67.w));
					  tmpvar_5 = col_60;
					  mediump vec3 normal_68;
					  normal_68 = worldNormal_3;
					  mediump vec3 ambient_69;
					  ambient_69 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_70;
					  mediump vec4 tmpvar_71;
					  tmpvar_71 = (normal_68.xyzz * normal_68.yzzx);
					  x1_70.x = dot (unity_SHBr, tmpvar_71);
					  x1_70.y = dot (unity_SHBg, tmpvar_71);
					  x1_70.z = dot (unity_SHBb, tmpvar_71);
					  ambient_69 = (ambient_69 + (x1_70 + (unity_SHC.xyz * 
					    ((normal_68.x * normal_68.x) - (normal_68.y * normal_68.y))
					  )));
					  tmpvar_5 = ambient_69;
					  highp vec4 o_72;
					  highp vec4 tmpvar_73;
					  tmpvar_73 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_74;
					  tmpvar_74.x = tmpvar_73.x;
					  tmpvar_74.y = (tmpvar_73.y * _ProjectionParams.x);
					  o_72.xy = (tmpvar_74 + tmpvar_73.w);
					  o_72.zw = tmpvar_4.zw;
					  tmpvar_6 = o_72;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_51;
					  xlv_TEXCOORD2 = tmpvar_52;
					  xlv_TEXCOORD3 = tmpvar_53;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_69;
					  xlv_TEXCOORD5 = tmpvar_6;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  highp vec2 tmpvar_13;
					  tmpvar_13 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_12 = (xlv_TEXCOORD0 + tmpvar_13);
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_9 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  highp vec2 P_14;
					  P_14 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_13);
					  lowp vec3 normal_15;
					  normal_15.xy = ((texture2D (_V_CW_NormalMap, P_14).wy * 2.0) - 1.0);
					  normal_15.z = sqrt((1.0 - clamp (
					    dot (normal_15.xy, normal_15.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_16;
					  tmpvar_16.xy = (normal_15.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_16.z = normal_15.z;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = normalize(tmpvar_16);
					  tmpvar_10 = tmpvar_17;
					  lowp float tmpvar_18;
					  tmpvar_18 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_21;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_18;
					  mediump vec3 normalWorld_22;
					  normalWorld_22 = worldN_4;
					  mediump vec3 tmpvar_23;
					  tmpvar_23 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_22;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_23;
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  lowp float diff_29;
					  mediump float tmpvar_30;
					  tmpvar_30 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_29 = tmpvar_30;
					  c_28.xyz = ((tmpvar_9 * tmpvar_23) * diff_29);
					  c_28.w = (tmpvar_11.w * _Color.w);
					  c_27.w = c_28.w;
					  c_27.xyz = (c_28.xyz + (tmpvar_9 * ambient_24));
					  highp float tmpvar_31;
					  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_27.xyz, vec3(tmpvar_31));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  tmpvar_48.w = tmpvar_39.x;
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  tmpvar_49.w = tmpvar_39.y;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  tmpvar_50.w = tmpvar_39.z;
					  mediump vec3 normal_51;
					  normal_51 = worldNormal_3;
					  mediump vec3 x1_52;
					  mediump vec4 tmpvar_53;
					  tmpvar_53 = (normal_51.xyzz * normal_51.yzzx);
					  x1_52.x = dot (unity_SHBr, tmpvar_53);
					  x1_52.y = dot (unity_SHBg, tmpvar_53);
					  x1_52.z = dot (unity_SHBb, tmpvar_53);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_52 + (unity_SHC.xyz * (
					    (normal_51.x * normal_51.x)
					   - 
					    (normal_51.y * normal_51.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  highp vec2 tmpvar_15;
					  tmpvar_15 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_14 = (xlv_TEXCOORD0 + tmpvar_15);
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_11 = (tmpvar_13.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_7.xyz);
					  highp vec2 P_16;
					  P_16 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_15);
					  lowp vec3 normal_17;
					  normal_17.xy = ((texture2D (_V_CW_NormalMap, P_16).wy * 2.0) - 1.0);
					  normal_17.z = sqrt((1.0 - clamp (
					    dot (normal_17.xy, normal_17.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_18;
					  tmpvar_18.xy = (normal_17.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_18.z = normal_17.z;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = normalize(tmpvar_18);
					  tmpvar_12 = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_3.x = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_3.y = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_3.z = tmpvar_22;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_23;
					  normalWorld_23 = worldN_3;
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_23;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_27;
					  viewDir_27 = worldViewDir_5;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  highp float nh_30;
					  lowp float diff_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_31 = tmpvar_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_27)
					  )));
					  nh_30 = tmpvar_33;
					  mediump float y_34;
					  y_34 = (_Shininess * 128.0);
					  highp float tmpvar_35;
					  tmpvar_35 = (pow (nh_30, y_34) * tmpvar_13.w);
					  c_29.xyz = (((tmpvar_11 * tmpvar_1) * diff_31) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_35));
					  c_29.w = (tmpvar_13.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = (c_29.xyz + (tmpvar_11 * ambient_24));
					  c_4.xyz = c_28.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  mediump vec3 normal_53;
					  normal_53 = worldNormal_3;
					  mediump vec3 x1_54;
					  mediump vec4 tmpvar_55;
					  tmpvar_55 = (normal_53.xyzz * normal_53.yzzx);
					  x1_54.x = dot (unity_SHBr, tmpvar_55);
					  x1_54.y = dot (unity_SHBg, tmpvar_55);
					  x1_54.z = dot (unity_SHBb, tmpvar_55);
					  highp vec4 o_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_58;
					  tmpvar_58.x = tmpvar_57.x;
					  tmpvar_58.y = (tmpvar_57.y * _ProjectionParams.x);
					  o_56.xy = (tmpvar_58 + tmpvar_57.w);
					  o_56.zw = tmpvar_4.zw;
					  tmpvar_5 = o_56;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_54 + (unity_SHC.xyz * (
					    (normal_53.x * normal_53.x)
					   - 
					    (normal_53.y * normal_53.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9.x = xlv_TEXCOORD1.w;
					  tmpvar_9.y = xlv_TEXCOORD2.w;
					  tmpvar_9.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - tmpvar_9));
					  worldViewDir_6 = tmpvar_11;
					  tmpvar_8 = xlv_COLOR0;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_12 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_8.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_13 = tmpvar_20;
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD1.xyz, tmpvar_13);
					  worldN_4.x = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD2.xyz, tmpvar_13);
					  worldN_4.y = tmpvar_23;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (xlv_TEXCOORD3.xyz, tmpvar_13);
					  worldN_4.z = tmpvar_24;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_21;
					  mediump vec3 normalWorld_25;
					  normalWorld_25 = worldN_4;
					  mediump vec3 tmpvar_26;
					  tmpvar_26 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_27;
					  mediump vec4 tmpvar_28;
					  tmpvar_28.w = 1.0;
					  tmpvar_28.xyz = normalWorld_25;
					  mediump vec3 x_29;
					  x_29.x = dot (unity_SHAr, tmpvar_28);
					  x_29.y = dot (unity_SHAg, tmpvar_28);
					  x_29.z = dot (unity_SHAb, tmpvar_28);
					  ambient_27 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_29)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_26;
					  mediump vec3 viewDir_30;
					  viewDir_30 = worldViewDir_6;
					  lowp vec4 c_31;
					  lowp vec4 c_32;
					  highp float nh_33;
					  lowp float diff_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_34 = tmpvar_35;
					  mediump float tmpvar_36;
					  tmpvar_36 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_30)
					  )));
					  nh_33 = tmpvar_36;
					  mediump float y_37;
					  y_37 = (_Shininess * 128.0);
					  highp float tmpvar_38;
					  tmpvar_38 = (pow (nh_33, y_37) * tmpvar_14.w);
					  c_32.xyz = (((tmpvar_12 * tmpvar_26) * diff_34) + ((tmpvar_26 * _SpecColor.xyz) * tmpvar_38));
					  c_32.w = (tmpvar_14.w * _Color.w);
					  c_31.w = c_32.w;
					  c_31.xyz = (c_32.xyz + (tmpvar_12 * ambient_27));
					  c_5.xyz = c_31.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  highp vec3 lightColor0_52;
					  lightColor0_52 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_53;
					  lightColor1_53 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_54;
					  lightColor2_54 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_55;
					  lightColor3_55 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_56;
					  lightAttenSq_56 = unity_4LightAtten0;
					  highp vec3 normal_57;
					  normal_57 = worldNormal_3;
					  highp vec3 col_58;
					  highp vec4 ndotl_59;
					  highp vec4 lengthSq_60;
					  highp vec4 tmpvar_61;
					  tmpvar_61 = (unity_4LightPosX0 - tmpvar_40.x);
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (unity_4LightPosY0 - tmpvar_40.y);
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosZ0 - tmpvar_40.z);
					  lengthSq_60 = (tmpvar_61 * tmpvar_61);
					  lengthSq_60 = (lengthSq_60 + (tmpvar_62 * tmpvar_62));
					  lengthSq_60 = (lengthSq_60 + (tmpvar_63 * tmpvar_63));
					  ndotl_59 = (tmpvar_61 * normal_57.x);
					  ndotl_59 = (ndotl_59 + (tmpvar_62 * normal_57.y));
					  ndotl_59 = (ndotl_59 + (tmpvar_63 * normal_57.z));
					  highp vec4 tmpvar_64;
					  tmpvar_64 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_59 * inversesqrt(lengthSq_60)));
					  ndotl_59 = tmpvar_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_64 * (1.0/((1.0 + 
					    (lengthSq_60 * lightAttenSq_56)
					  ))));
					  col_58 = (lightColor0_52 * tmpvar_65.x);
					  col_58 = (col_58 + (lightColor1_53 * tmpvar_65.y));
					  col_58 = (col_58 + (lightColor2_54 * tmpvar_65.z));
					  col_58 = (col_58 + (lightColor3_55 * tmpvar_65.w));
					  tmpvar_4 = col_58;
					  mediump vec3 normal_66;
					  normal_66 = worldNormal_3;
					  mediump vec3 ambient_67;
					  ambient_67 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_68;
					  mediump vec4 tmpvar_69;
					  tmpvar_69 = (normal_66.xyzz * normal_66.yzzx);
					  x1_68.x = dot (unity_SHBr, tmpvar_69);
					  x1_68.y = dot (unity_SHBg, tmpvar_69);
					  x1_68.z = dot (unity_SHBb, tmpvar_69);
					  ambient_67 = (ambient_67 + (x1_68 + (unity_SHC.xyz * 
					    ((normal_66.x * normal_66.x) - (normal_66.y * normal_66.y))
					  )));
					  tmpvar_4 = ambient_67;
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_67;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  highp vec2 tmpvar_15;
					  tmpvar_15 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_14 = (xlv_TEXCOORD0 + tmpvar_15);
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_11 = (tmpvar_13.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_7.xyz);
					  highp vec2 P_16;
					  P_16 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_15);
					  lowp vec3 normal_17;
					  normal_17.xy = ((texture2D (_V_CW_NormalMap, P_16).wy * 2.0) - 1.0);
					  normal_17.z = sqrt((1.0 - clamp (
					    dot (normal_17.xy, normal_17.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_18;
					  tmpvar_18.xy = (normal_17.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_18.z = normal_17.z;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = normalize(tmpvar_18);
					  tmpvar_12 = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_3.x = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_3.y = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_3.z = tmpvar_22;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_23;
					  normalWorld_23 = worldN_3;
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_23;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_27;
					  viewDir_27 = worldViewDir_5;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  highp float nh_30;
					  lowp float diff_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_31 = tmpvar_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_27)
					  )));
					  nh_30 = tmpvar_33;
					  mediump float y_34;
					  y_34 = (_Shininess * 128.0);
					  highp float tmpvar_35;
					  tmpvar_35 = (pow (nh_30, y_34) * tmpvar_13.w);
					  c_29.xyz = (((tmpvar_11 * tmpvar_1) * diff_31) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_35));
					  c_29.w = (tmpvar_13.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = (c_29.xyz + (tmpvar_11 * ambient_24));
					  c_4.xyz = c_28.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_3 = tmpvar_46;
					  highp mat3 tmpvar_47;
					  tmpvar_47[0] = _Object2World[0].xyz;
					  tmpvar_47[1] = _Object2World[1].xyz;
					  tmpvar_47[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = normalize((tmpvar_47 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_48;
					  highp float tmpvar_49;
					  tmpvar_49 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_49;
					  lowp vec3 tmpvar_50;
					  tmpvar_50 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.x;
					  tmpvar_51.y = tmpvar_50.x;
					  tmpvar_51.z = worldNormal_3.x;
					  tmpvar_51.w = tmpvar_42.x;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.y;
					  tmpvar_52.y = tmpvar_50.y;
					  tmpvar_52.z = worldNormal_3.y;
					  tmpvar_52.w = tmpvar_42.y;
					  highp vec4 tmpvar_53;
					  tmpvar_53.x = worldTangent_2.z;
					  tmpvar_53.y = tmpvar_50.z;
					  tmpvar_53.z = worldNormal_3.z;
					  tmpvar_53.w = tmpvar_42.z;
					  highp vec3 lightColor0_54;
					  lightColor0_54 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_55;
					  lightColor1_55 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_56;
					  lightColor2_56 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_57;
					  lightColor3_57 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_58;
					  lightAttenSq_58 = unity_4LightAtten0;
					  highp vec3 normal_59;
					  normal_59 = worldNormal_3;
					  highp vec3 col_60;
					  highp vec4 ndotl_61;
					  highp vec4 lengthSq_62;
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_62 = (tmpvar_63 * tmpvar_63);
					  lengthSq_62 = (lengthSq_62 + (tmpvar_64 * tmpvar_64));
					  lengthSq_62 = (lengthSq_62 + (tmpvar_65 * tmpvar_65));
					  ndotl_61 = (tmpvar_63 * normal_59.x);
					  ndotl_61 = (ndotl_61 + (tmpvar_64 * normal_59.y));
					  ndotl_61 = (ndotl_61 + (tmpvar_65 * normal_59.z));
					  highp vec4 tmpvar_66;
					  tmpvar_66 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_61 * inversesqrt(lengthSq_62)));
					  ndotl_61 = tmpvar_66;
					  highp vec4 tmpvar_67;
					  tmpvar_67 = (tmpvar_66 * (1.0/((1.0 + 
					    (lengthSq_62 * lightAttenSq_58)
					  ))));
					  col_60 = (lightColor0_54 * tmpvar_67.x);
					  col_60 = (col_60 + (lightColor1_55 * tmpvar_67.y));
					  col_60 = (col_60 + (lightColor2_56 * tmpvar_67.z));
					  col_60 = (col_60 + (lightColor3_57 * tmpvar_67.w));
					  tmpvar_5 = col_60;
					  mediump vec3 normal_68;
					  normal_68 = worldNormal_3;
					  mediump vec3 ambient_69;
					  ambient_69 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_70;
					  mediump vec4 tmpvar_71;
					  tmpvar_71 = (normal_68.xyzz * normal_68.yzzx);
					  x1_70.x = dot (unity_SHBr, tmpvar_71);
					  x1_70.y = dot (unity_SHBg, tmpvar_71);
					  x1_70.z = dot (unity_SHBb, tmpvar_71);
					  ambient_69 = (ambient_69 + (x1_70 + (unity_SHC.xyz * 
					    ((normal_68.x * normal_68.x) - (normal_68.y * normal_68.y))
					  )));
					  tmpvar_5 = ambient_69;
					  highp vec4 o_72;
					  highp vec4 tmpvar_73;
					  tmpvar_73 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_74;
					  tmpvar_74.x = tmpvar_73.x;
					  tmpvar_74.y = (tmpvar_73.y * _ProjectionParams.x);
					  o_72.xy = (tmpvar_74 + tmpvar_73.w);
					  o_72.zw = tmpvar_4.zw;
					  tmpvar_6 = o_72;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_51;
					  xlv_TEXCOORD2 = tmpvar_52;
					  xlv_TEXCOORD3 = tmpvar_53;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_69;
					  xlv_TEXCOORD5 = tmpvar_6;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9.x = xlv_TEXCOORD1.w;
					  tmpvar_9.y = xlv_TEXCOORD2.w;
					  tmpvar_9.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - tmpvar_9));
					  worldViewDir_6 = tmpvar_11;
					  tmpvar_8 = xlv_COLOR0;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_12 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_8.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_13 = tmpvar_20;
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD1.xyz, tmpvar_13);
					  worldN_4.x = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD2.xyz, tmpvar_13);
					  worldN_4.y = tmpvar_23;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (xlv_TEXCOORD3.xyz, tmpvar_13);
					  worldN_4.z = tmpvar_24;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_21;
					  mediump vec3 normalWorld_25;
					  normalWorld_25 = worldN_4;
					  mediump vec3 tmpvar_26;
					  tmpvar_26 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_27;
					  mediump vec4 tmpvar_28;
					  tmpvar_28.w = 1.0;
					  tmpvar_28.xyz = normalWorld_25;
					  mediump vec3 x_29;
					  x_29.x = dot (unity_SHAr, tmpvar_28);
					  x_29.y = dot (unity_SHAg, tmpvar_28);
					  x_29.z = dot (unity_SHAb, tmpvar_28);
					  ambient_27 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_29)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_26;
					  mediump vec3 viewDir_30;
					  viewDir_30 = worldViewDir_6;
					  lowp vec4 c_31;
					  lowp vec4 c_32;
					  highp float nh_33;
					  lowp float diff_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_34 = tmpvar_35;
					  mediump float tmpvar_36;
					  tmpvar_36 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_30)
					  )));
					  nh_33 = tmpvar_36;
					  mediump float y_37;
					  y_37 = (_Shininess * 128.0);
					  highp float tmpvar_38;
					  tmpvar_38 = (pow (nh_33, y_37) * tmpvar_14.w);
					  c_32.xyz = (((tmpvar_12 * tmpvar_26) * diff_34) + ((tmpvar_26 * _SpecColor.xyz) * tmpvar_38));
					  c_32.w = (tmpvar_14.w * _Color.w);
					  c_31.w = c_32.w;
					  c_31.xyz = (c_32.xyz + (tmpvar_12 * ambient_27));
					  c_5.xyz = c_31.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  highp vec2 tmpvar_15;
					  tmpvar_15 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_14 = (xlv_TEXCOORD0 + tmpvar_15);
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_11 = (tmpvar_13.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_7.xyz);
					  highp vec2 P_16;
					  P_16 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_15);
					  lowp vec3 normal_17;
					  normal_17.xy = ((texture2D (_V_CW_NormalMap, P_16).wy * 2.0) - 1.0);
					  normal_17.z = sqrt((1.0 - clamp (
					    dot (normal_17.xy, normal_17.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_18;
					  tmpvar_18.xy = (normal_17.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_18.z = normal_17.z;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = normalize(tmpvar_18);
					  tmpvar_12 = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_3.x = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_3.y = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_3.z = tmpvar_22;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_23;
					  normalWorld_23 = worldN_3;
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_23;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_27;
					  viewDir_27 = worldViewDir_5;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  highp float nh_30;
					  lowp float diff_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_31 = tmpvar_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_27)
					  )));
					  nh_30 = tmpvar_33;
					  mediump float y_34;
					  y_34 = (_Shininess * 128.0);
					  highp float tmpvar_35;
					  tmpvar_35 = (pow (nh_30, y_34) * tmpvar_13.w);
					  c_29.xyz = (((tmpvar_11 * tmpvar_1) * diff_31) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_35));
					  c_29.w = (tmpvar_13.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = (c_29.xyz + (tmpvar_11 * ambient_24));
					  highp float tmpvar_36;
					  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_28.xyz, vec3(tmpvar_36));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  mediump vec3 normal_53;
					  normal_53 = worldNormal_3;
					  mediump vec3 x1_54;
					  mediump vec4 tmpvar_55;
					  tmpvar_55 = (normal_53.xyzz * normal_53.yzzx);
					  x1_54.x = dot (unity_SHBr, tmpvar_55);
					  x1_54.y = dot (unity_SHBg, tmpvar_55);
					  x1_54.z = dot (unity_SHBb, tmpvar_55);
					  highp vec4 o_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_58;
					  tmpvar_58.x = tmpvar_57.x;
					  tmpvar_58.y = (tmpvar_57.y * _ProjectionParams.x);
					  o_56.xy = (tmpvar_58 + tmpvar_57.w);
					  o_56.zw = tmpvar_4.zw;
					  tmpvar_5 = o_56;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_54 + (unity_SHC.xyz * (
					    (normal_53.x * normal_53.x)
					   - 
					    (normal_53.y * normal_53.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9.x = xlv_TEXCOORD1.w;
					  tmpvar_9.y = xlv_TEXCOORD2.w;
					  tmpvar_9.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - tmpvar_9));
					  worldViewDir_6 = tmpvar_11;
					  tmpvar_8 = xlv_COLOR0;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_12 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_8.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_13 = tmpvar_20;
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD1.xyz, tmpvar_13);
					  worldN_4.x = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD2.xyz, tmpvar_13);
					  worldN_4.y = tmpvar_23;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (xlv_TEXCOORD3.xyz, tmpvar_13);
					  worldN_4.z = tmpvar_24;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_21;
					  mediump vec3 normalWorld_25;
					  normalWorld_25 = worldN_4;
					  mediump vec3 tmpvar_26;
					  tmpvar_26 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_27;
					  mediump vec4 tmpvar_28;
					  tmpvar_28.w = 1.0;
					  tmpvar_28.xyz = normalWorld_25;
					  mediump vec3 x_29;
					  x_29.x = dot (unity_SHAr, tmpvar_28);
					  x_29.y = dot (unity_SHAg, tmpvar_28);
					  x_29.z = dot (unity_SHAb, tmpvar_28);
					  ambient_27 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_29)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_26;
					  mediump vec3 viewDir_30;
					  viewDir_30 = worldViewDir_6;
					  lowp vec4 c_31;
					  lowp vec4 c_32;
					  highp float nh_33;
					  lowp float diff_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_34 = tmpvar_35;
					  mediump float tmpvar_36;
					  tmpvar_36 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_30)
					  )));
					  nh_33 = tmpvar_36;
					  mediump float y_37;
					  y_37 = (_Shininess * 128.0);
					  highp float tmpvar_38;
					  tmpvar_38 = (pow (nh_33, y_37) * tmpvar_14.w);
					  c_32.xyz = (((tmpvar_12 * tmpvar_26) * diff_34) + ((tmpvar_26 * _SpecColor.xyz) * tmpvar_38));
					  c_32.w = (tmpvar_14.w * _Color.w);
					  c_31.w = c_32.w;
					  c_31.xyz = (c_32.xyz + (tmpvar_12 * ambient_27));
					  highp float tmpvar_39;
					  tmpvar_39 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_31.xyz, vec3(tmpvar_39));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  highp vec3 lightColor0_53;
					  lightColor0_53 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_54;
					  lightColor1_54 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_55;
					  lightColor2_55 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_56;
					  lightColor3_56 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_57;
					  lightAttenSq_57 = unity_4LightAtten0;
					  highp vec3 normal_58;
					  normal_58 = worldNormal_3;
					  highp vec3 col_59;
					  highp vec4 ndotl_60;
					  highp vec4 lengthSq_61;
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_61 = (tmpvar_62 * tmpvar_62);
					  lengthSq_61 = (lengthSq_61 + (tmpvar_63 * tmpvar_63));
					  lengthSq_61 = (lengthSq_61 + (tmpvar_64 * tmpvar_64));
					  ndotl_60 = (tmpvar_62 * normal_58.x);
					  ndotl_60 = (ndotl_60 + (tmpvar_63 * normal_58.y));
					  ndotl_60 = (ndotl_60 + (tmpvar_64 * normal_58.z));
					  highp vec4 tmpvar_65;
					  tmpvar_65 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_60 * inversesqrt(lengthSq_61)));
					  ndotl_60 = tmpvar_65;
					  highp vec4 tmpvar_66;
					  tmpvar_66 = (tmpvar_65 * (1.0/((1.0 + 
					    (lengthSq_61 * lightAttenSq_57)
					  ))));
					  col_59 = (lightColor0_53 * tmpvar_66.x);
					  col_59 = (col_59 + (lightColor1_54 * tmpvar_66.y));
					  col_59 = (col_59 + (lightColor2_55 * tmpvar_66.z));
					  col_59 = (col_59 + (lightColor3_56 * tmpvar_66.w));
					  tmpvar_5 = col_59;
					  mediump vec3 normal_67;
					  normal_67 = worldNormal_3;
					  mediump vec3 ambient_68;
					  ambient_68 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_69;
					  mediump vec4 tmpvar_70;
					  tmpvar_70 = (normal_67.xyzz * normal_67.yzzx);
					  x1_69.x = dot (unity_SHBr, tmpvar_70);
					  x1_69.y = dot (unity_SHBg, tmpvar_70);
					  x1_69.z = dot (unity_SHBb, tmpvar_70);
					  ambient_68 = (ambient_68 + (x1_69 + (unity_SHC.xyz * 
					    ((normal_67.x * normal_67.x) - (normal_67.y * normal_67.y))
					  )));
					  tmpvar_5 = ambient_68;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_68;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  highp vec2 tmpvar_15;
					  tmpvar_15 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_14 = (xlv_TEXCOORD0 + tmpvar_15);
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_11 = (tmpvar_13.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_7.xyz);
					  highp vec2 P_16;
					  P_16 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_15);
					  lowp vec3 normal_17;
					  normal_17.xy = ((texture2D (_V_CW_NormalMap, P_16).wy * 2.0) - 1.0);
					  normal_17.z = sqrt((1.0 - clamp (
					    dot (normal_17.xy, normal_17.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_18;
					  tmpvar_18.xy = (normal_17.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_18.z = normal_17.z;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = normalize(tmpvar_18);
					  tmpvar_12 = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_3.x = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_3.y = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_3.z = tmpvar_22;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_23;
					  normalWorld_23 = worldN_3;
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_23;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_27;
					  viewDir_27 = worldViewDir_5;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  highp float nh_30;
					  lowp float diff_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_31 = tmpvar_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_27)
					  )));
					  nh_30 = tmpvar_33;
					  mediump float y_34;
					  y_34 = (_Shininess * 128.0);
					  highp float tmpvar_35;
					  tmpvar_35 = (pow (nh_30, y_34) * tmpvar_13.w);
					  c_29.xyz = (((tmpvar_11 * tmpvar_1) * diff_31) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_35));
					  c_29.w = (tmpvar_13.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = (c_29.xyz + (tmpvar_11 * ambient_24));
					  highp float tmpvar_36;
					  tmpvar_36 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_28.xyz, vec3(tmpvar_36));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_3 = tmpvar_46;
					  highp mat3 tmpvar_47;
					  tmpvar_47[0] = _Object2World[0].xyz;
					  tmpvar_47[1] = _Object2World[1].xyz;
					  tmpvar_47[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = normalize((tmpvar_47 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_48;
					  highp float tmpvar_49;
					  tmpvar_49 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_49;
					  lowp vec3 tmpvar_50;
					  tmpvar_50 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.x;
					  tmpvar_51.y = tmpvar_50.x;
					  tmpvar_51.z = worldNormal_3.x;
					  tmpvar_51.w = tmpvar_42.x;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.y;
					  tmpvar_52.y = tmpvar_50.y;
					  tmpvar_52.z = worldNormal_3.y;
					  tmpvar_52.w = tmpvar_42.y;
					  highp vec4 tmpvar_53;
					  tmpvar_53.x = worldTangent_2.z;
					  tmpvar_53.y = tmpvar_50.z;
					  tmpvar_53.z = worldNormal_3.z;
					  tmpvar_53.w = tmpvar_42.z;
					  highp vec3 lightColor0_54;
					  lightColor0_54 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_55;
					  lightColor1_55 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_56;
					  lightColor2_56 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_57;
					  lightColor3_57 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_58;
					  lightAttenSq_58 = unity_4LightAtten0;
					  highp vec3 normal_59;
					  normal_59 = worldNormal_3;
					  highp vec3 col_60;
					  highp vec4 ndotl_61;
					  highp vec4 lengthSq_62;
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_62 = (tmpvar_63 * tmpvar_63);
					  lengthSq_62 = (lengthSq_62 + (tmpvar_64 * tmpvar_64));
					  lengthSq_62 = (lengthSq_62 + (tmpvar_65 * tmpvar_65));
					  ndotl_61 = (tmpvar_63 * normal_59.x);
					  ndotl_61 = (ndotl_61 + (tmpvar_64 * normal_59.y));
					  ndotl_61 = (ndotl_61 + (tmpvar_65 * normal_59.z));
					  highp vec4 tmpvar_66;
					  tmpvar_66 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_61 * inversesqrt(lengthSq_62)));
					  ndotl_61 = tmpvar_66;
					  highp vec4 tmpvar_67;
					  tmpvar_67 = (tmpvar_66 * (1.0/((1.0 + 
					    (lengthSq_62 * lightAttenSq_58)
					  ))));
					  col_60 = (lightColor0_54 * tmpvar_67.x);
					  col_60 = (col_60 + (lightColor1_55 * tmpvar_67.y));
					  col_60 = (col_60 + (lightColor2_56 * tmpvar_67.z));
					  col_60 = (col_60 + (lightColor3_57 * tmpvar_67.w));
					  tmpvar_5 = col_60;
					  mediump vec3 normal_68;
					  normal_68 = worldNormal_3;
					  mediump vec3 ambient_69;
					  ambient_69 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_70;
					  mediump vec4 tmpvar_71;
					  tmpvar_71 = (normal_68.xyzz * normal_68.yzzx);
					  x1_70.x = dot (unity_SHBr, tmpvar_71);
					  x1_70.y = dot (unity_SHBg, tmpvar_71);
					  x1_70.z = dot (unity_SHBb, tmpvar_71);
					  ambient_69 = (ambient_69 + (x1_70 + (unity_SHC.xyz * 
					    ((normal_68.x * normal_68.x) - (normal_68.y * normal_68.y))
					  )));
					  tmpvar_5 = ambient_69;
					  highp vec4 o_72;
					  highp vec4 tmpvar_73;
					  tmpvar_73 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_74;
					  tmpvar_74.x = tmpvar_73.x;
					  tmpvar_74.y = (tmpvar_73.y * _ProjectionParams.x);
					  o_72.xy = (tmpvar_74 + tmpvar_73.w);
					  o_72.zw = tmpvar_4.zw;
					  tmpvar_6 = o_72;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_51;
					  xlv_TEXCOORD2 = tmpvar_52;
					  xlv_TEXCOORD3 = tmpvar_53;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_69;
					  xlv_TEXCOORD5 = tmpvar_6;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9.x = xlv_TEXCOORD1.w;
					  tmpvar_9.y = xlv_TEXCOORD2.w;
					  tmpvar_9.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - tmpvar_9));
					  worldViewDir_6 = tmpvar_11;
					  tmpvar_8 = xlv_COLOR0;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_12 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_8.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_13 = tmpvar_20;
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD1.xyz, tmpvar_13);
					  worldN_4.x = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD2.xyz, tmpvar_13);
					  worldN_4.y = tmpvar_23;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (xlv_TEXCOORD3.xyz, tmpvar_13);
					  worldN_4.z = tmpvar_24;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_21;
					  mediump vec3 normalWorld_25;
					  normalWorld_25 = worldN_4;
					  mediump vec3 tmpvar_26;
					  tmpvar_26 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_27;
					  mediump vec4 tmpvar_28;
					  tmpvar_28.w = 1.0;
					  tmpvar_28.xyz = normalWorld_25;
					  mediump vec3 x_29;
					  x_29.x = dot (unity_SHAr, tmpvar_28);
					  x_29.y = dot (unity_SHAg, tmpvar_28);
					  x_29.z = dot (unity_SHAb, tmpvar_28);
					  ambient_27 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_29)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_26;
					  mediump vec3 viewDir_30;
					  viewDir_30 = worldViewDir_6;
					  lowp vec4 c_31;
					  lowp vec4 c_32;
					  highp float nh_33;
					  lowp float diff_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_34 = tmpvar_35;
					  mediump float tmpvar_36;
					  tmpvar_36 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_30)
					  )));
					  nh_33 = tmpvar_36;
					  mediump float y_37;
					  y_37 = (_Shininess * 128.0);
					  highp float tmpvar_38;
					  tmpvar_38 = (pow (nh_33, y_37) * tmpvar_14.w);
					  c_32.xyz = (((tmpvar_12 * tmpvar_26) * diff_34) + ((tmpvar_26 * _SpecColor.xyz) * tmpvar_38));
					  c_32.w = (tmpvar_14.w * _Color.w);
					  c_31.w = c_32.w;
					  c_31.xyz = (c_32.xyz + (tmpvar_12 * ambient_27));
					  highp float tmpvar_39;
					  tmpvar_39 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_31.xyz, vec3(tmpvar_39));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  mediump vec3 normal_42;
					  normal_42 = worldNormal_1;
					  mediump vec3 x1_43;
					  mediump vec4 tmpvar_44;
					  tmpvar_44 = (normal_42.xyzz * normal_42.yzzx);
					  x1_43.x = dot (unity_SHBr, tmpvar_44);
					  x1_43.y = dot (unity_SHBg, tmpvar_44);
					  x1_43.z = dot (unity_SHBb, tmpvar_44);
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_43 + (unity_SHC.xyz * (
					    (normal_42.x * normal_42.x)
					   - 
					    (normal_42.y * normal_42.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  P_11 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  tmpvar_9 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_12;
					  normalWorld_12 = tmpvar_4;
					  mediump vec3 ambient_13;
					  mediump vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = normalWorld_12;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, tmpvar_14);
					  x_15.y = dot (unity_SHAg, tmpvar_14);
					  x_15.z = dot (unity_SHAb, tmpvar_14);
					  ambient_13 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_15)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_16;
					  lowp vec4 c_17;
					  lowp float diff_18;
					  mediump float tmpvar_19;
					  tmpvar_19 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_18 = tmpvar_19;
					  c_17.xyz = ((tmpvar_8 * tmpvar_1) * diff_18);
					  c_17.w = (tmpvar_10.w * _Color.w);
					  c_16.w = c_17.w;
					  c_16.xyz = (c_17.xyz + (tmpvar_8 * ambient_13));
					  c_3.xyz = (c_16.xyz + tmpvar_9);
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_44;
					  normal_44 = worldNormal_1;
					  mediump vec3 x1_45;
					  mediump vec4 tmpvar_46;
					  tmpvar_46 = (normal_44.xyzz * normal_44.yzzx);
					  x1_45.x = dot (unity_SHBr, tmpvar_46);
					  x1_45.y = dot (unity_SHBg, tmpvar_46);
					  x1_45.z = dot (unity_SHBb, tmpvar_46);
					  highp vec4 o_47;
					  highp vec4 tmpvar_48;
					  tmpvar_48 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_49;
					  tmpvar_49.x = tmpvar_48.x;
					  tmpvar_49.y = (tmpvar_48.y * _ProjectionParams.x);
					  o_47.xy = (tmpvar_49 + tmpvar_48.w);
					  o_47.zw = tmpvar_2.zw;
					  tmpvar_4 = o_47;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_45 + (unity_SHC.xyz * (
					    (normal_44.x * normal_44.x)
					   - 
					    (normal_44.y * normal_44.y)
					  )));
					  xlv_TEXCOORD4 = tmpvar_4;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_9 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  tmpvar_10 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_13;
					  mediump vec3 normalWorld_14;
					  normalWorld_14 = tmpvar_5;
					  mediump vec3 tmpvar_15;
					  tmpvar_15 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_14;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  ambient_16 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_18)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_15;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_9 * tmpvar_15) * diff_21);
					  c_20.w = (tmpvar_11.w * _Color.w);
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_9 * ambient_16));
					  c_4.xyz = (c_19.xyz + tmpvar_10);
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_2 = worldNormal_1;
					  highp vec3 lightColor0_44;
					  lightColor0_44 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_45;
					  lightColor1_45 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_46;
					  lightColor2_46 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_47;
					  lightColor3_47 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_48;
					  lightAttenSq_48 = unity_4LightAtten0;
					  highp vec3 normal_49;
					  normal_49 = worldNormal_1;
					  highp vec3 col_50;
					  highp vec4 ndotl_51;
					  highp vec4 lengthSq_52;
					  highp vec4 tmpvar_53;
					  tmpvar_53 = (unity_4LightPosX0 - tmpvar_39.x);
					  highp vec4 tmpvar_54;
					  tmpvar_54 = (unity_4LightPosY0 - tmpvar_39.y);
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosZ0 - tmpvar_39.z);
					  lengthSq_52 = (tmpvar_53 * tmpvar_53);
					  lengthSq_52 = (lengthSq_52 + (tmpvar_54 * tmpvar_54));
					  lengthSq_52 = (lengthSq_52 + (tmpvar_55 * tmpvar_55));
					  ndotl_51 = (tmpvar_53 * normal_49.x);
					  ndotl_51 = (ndotl_51 + (tmpvar_54 * normal_49.y));
					  ndotl_51 = (ndotl_51 + (tmpvar_55 * normal_49.z));
					  highp vec4 tmpvar_56;
					  tmpvar_56 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_51 * inversesqrt(lengthSq_52)));
					  ndotl_51 = tmpvar_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_56 * (1.0/((1.0 + 
					    (lengthSq_52 * lightAttenSq_48)
					  ))));
					  col_50 = (lightColor0_44 * tmpvar_57.x);
					  col_50 = (col_50 + (lightColor1_45 * tmpvar_57.y));
					  col_50 = (col_50 + (lightColor2_46 * tmpvar_57.z));
					  col_50 = (col_50 + (lightColor3_47 * tmpvar_57.w));
					  tmpvar_3 = col_50;
					  mediump vec3 normal_58;
					  normal_58 = worldNormal_1;
					  mediump vec3 ambient_59;
					  ambient_59 = (tmpvar_3 * ((tmpvar_3 * 
					    ((tmpvar_3 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_60;
					  mediump vec4 tmpvar_61;
					  tmpvar_61 = (normal_58.xyzz * normal_58.yzzx);
					  x1_60.x = dot (unity_SHBr, tmpvar_61);
					  x1_60.y = dot (unity_SHBg, tmpvar_61);
					  x1_60.z = dot (unity_SHBb, tmpvar_61);
					  ambient_59 = (ambient_59 + (x1_60 + (unity_SHC.xyz * 
					    ((normal_58.x * normal_58.x) - (normal_58.y * normal_58.y))
					  )));
					  tmpvar_3 = ambient_59;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = tmpvar_39;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_59;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  P_11 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  tmpvar_9 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_12;
					  normalWorld_12 = tmpvar_4;
					  mediump vec3 ambient_13;
					  mediump vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = normalWorld_12;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, tmpvar_14);
					  x_15.y = dot (unity_SHAg, tmpvar_14);
					  x_15.z = dot (unity_SHAb, tmpvar_14);
					  ambient_13 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_15)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_16;
					  lowp vec4 c_17;
					  lowp float diff_18;
					  mediump float tmpvar_19;
					  tmpvar_19 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_18 = tmpvar_19;
					  c_17.xyz = ((tmpvar_8 * tmpvar_1) * diff_18);
					  c_17.w = (tmpvar_10.w * _Color.w);
					  c_16.w = c_17.w;
					  c_16.xyz = (c_17.xyz + (tmpvar_8 * ambient_13));
					  c_3.xyz = (c_16.xyz + tmpvar_9);
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_46;
					  lightColor0_46 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_47;
					  lightColor1_47 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_48;
					  lightColor2_48 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_49;
					  lightColor3_49 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_50;
					  lightAttenSq_50 = unity_4LightAtten0;
					  highp vec3 normal_51;
					  normal_51 = worldNormal_1;
					  highp vec3 col_52;
					  highp vec4 ndotl_53;
					  highp vec4 lengthSq_54;
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_54 = (tmpvar_55 * tmpvar_55);
					  lengthSq_54 = (lengthSq_54 + (tmpvar_56 * tmpvar_56));
					  lengthSq_54 = (lengthSq_54 + (tmpvar_57 * tmpvar_57));
					  ndotl_53 = (tmpvar_55 * normal_51.x);
					  ndotl_53 = (ndotl_53 + (tmpvar_56 * normal_51.y));
					  ndotl_53 = (ndotl_53 + (tmpvar_57 * normal_51.z));
					  highp vec4 tmpvar_58;
					  tmpvar_58 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_53 * inversesqrt(lengthSq_54)));
					  ndotl_53 = tmpvar_58;
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (tmpvar_58 * (1.0/((1.0 + 
					    (lengthSq_54 * lightAttenSq_50)
					  ))));
					  col_52 = (lightColor0_46 * tmpvar_59.x);
					  col_52 = (col_52 + (lightColor1_47 * tmpvar_59.y));
					  col_52 = (col_52 + (lightColor2_48 * tmpvar_59.z));
					  col_52 = (col_52 + (lightColor3_49 * tmpvar_59.w));
					  tmpvar_4 = col_52;
					  mediump vec3 normal_60;
					  normal_60 = worldNormal_1;
					  mediump vec3 ambient_61;
					  ambient_61 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_62;
					  mediump vec4 tmpvar_63;
					  tmpvar_63 = (normal_60.xyzz * normal_60.yzzx);
					  x1_62.x = dot (unity_SHBr, tmpvar_63);
					  x1_62.y = dot (unity_SHBg, tmpvar_63);
					  x1_62.z = dot (unity_SHBb, tmpvar_63);
					  ambient_61 = (ambient_61 + (x1_62 + (unity_SHC.xyz * 
					    ((normal_60.x * normal_60.x) - (normal_60.y * normal_60.y))
					  )));
					  tmpvar_4 = ambient_61;
					  highp vec4 o_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_66;
					  tmpvar_66.x = tmpvar_65.x;
					  tmpvar_66.y = (tmpvar_65.y * _ProjectionParams.x);
					  o_64.xy = (tmpvar_66 + tmpvar_65.w);
					  o_64.zw = tmpvar_2.zw;
					  tmpvar_5 = o_64;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_41;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_61;
					  xlv_TEXCOORD4 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_9 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  tmpvar_10 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_13;
					  mediump vec3 normalWorld_14;
					  normalWorld_14 = tmpvar_5;
					  mediump vec3 tmpvar_15;
					  tmpvar_15 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_14;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  ambient_16 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_18)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_15;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_9 * tmpvar_15) * diff_21);
					  c_20.w = (tmpvar_11.w * _Color.w);
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_9 * ambient_16));
					  c_4.xyz = (c_19.xyz + tmpvar_10);
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  P_11 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  tmpvar_9 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_12;
					  normalWorld_12 = tmpvar_4;
					  mediump vec3 ambient_13;
					  mediump vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = normalWorld_12;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, tmpvar_14);
					  x_15.y = dot (unity_SHAg, tmpvar_14);
					  x_15.z = dot (unity_SHAb, tmpvar_14);
					  ambient_13 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_15)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_16;
					  lowp vec4 c_17;
					  lowp float diff_18;
					  mediump float tmpvar_19;
					  tmpvar_19 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_18 = tmpvar_19;
					  c_17.xyz = ((tmpvar_8 * tmpvar_1) * diff_18);
					  c_17.w = (tmpvar_10.w * _Color.w);
					  c_16.w = c_17.w;
					  c_16.xyz = (c_17.xyz + (tmpvar_8 * ambient_13));
					  c_3.w = c_16.w;
					  c_3.xyz = (c_16.xyz + tmpvar_9);
					  highp float tmpvar_20;
					  tmpvar_20 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_20));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_44;
					  normal_44 = worldNormal_1;
					  mediump vec3 x1_45;
					  mediump vec4 tmpvar_46;
					  tmpvar_46 = (normal_44.xyzz * normal_44.yzzx);
					  x1_45.x = dot (unity_SHBr, tmpvar_46);
					  x1_45.y = dot (unity_SHBg, tmpvar_46);
					  x1_45.z = dot (unity_SHBb, tmpvar_46);
					  highp vec4 o_47;
					  highp vec4 tmpvar_48;
					  tmpvar_48 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_49;
					  tmpvar_49.x = tmpvar_48.x;
					  tmpvar_49.y = (tmpvar_48.y * _ProjectionParams.x);
					  o_47.xy = (tmpvar_49 + tmpvar_48.w);
					  o_47.zw = tmpvar_2.zw;
					  tmpvar_4 = o_47;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_45 + (unity_SHC.xyz * (
					    (normal_44.x * normal_44.x)
					   - 
					    (normal_44.y * normal_44.y)
					  )));
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_9 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  tmpvar_10 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_13;
					  mediump vec3 normalWorld_14;
					  normalWorld_14 = tmpvar_5;
					  mediump vec3 tmpvar_15;
					  tmpvar_15 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_14;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  ambient_16 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_18)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_15;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_9 * tmpvar_15) * diff_21);
					  c_20.w = (tmpvar_11.w * _Color.w);
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_9 * ambient_16));
					  c_4.w = c_19.w;
					  c_4.xyz = (c_19.xyz + tmpvar_10);
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_23));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_44;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_45;
					  lightColor0_45 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_46;
					  lightColor1_46 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_47;
					  lightColor2_47 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_48;
					  lightColor3_48 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_49;
					  lightAttenSq_49 = unity_4LightAtten0;
					  highp vec3 normal_50;
					  normal_50 = worldNormal_1;
					  highp vec3 col_51;
					  highp vec4 ndotl_52;
					  highp vec4 lengthSq_53;
					  highp vec4 tmpvar_54;
					  tmpvar_54 = (unity_4LightPosX0 - tmpvar_40.x);
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosY0 - tmpvar_40.y);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosZ0 - tmpvar_40.z);
					  lengthSq_53 = (tmpvar_54 * tmpvar_54);
					  lengthSq_53 = (lengthSq_53 + (tmpvar_55 * tmpvar_55));
					  lengthSq_53 = (lengthSq_53 + (tmpvar_56 * tmpvar_56));
					  ndotl_52 = (tmpvar_54 * normal_50.x);
					  ndotl_52 = (ndotl_52 + (tmpvar_55 * normal_50.y));
					  ndotl_52 = (ndotl_52 + (tmpvar_56 * normal_50.z));
					  highp vec4 tmpvar_57;
					  tmpvar_57 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_52 * inversesqrt(lengthSq_53)));
					  ndotl_52 = tmpvar_57;
					  highp vec4 tmpvar_58;
					  tmpvar_58 = (tmpvar_57 * (1.0/((1.0 + 
					    (lengthSq_53 * lightAttenSq_49)
					  ))));
					  col_51 = (lightColor0_45 * tmpvar_58.x);
					  col_51 = (col_51 + (lightColor1_46 * tmpvar_58.y));
					  col_51 = (col_51 + (lightColor2_47 * tmpvar_58.z));
					  col_51 = (col_51 + (lightColor3_48 * tmpvar_58.w));
					  tmpvar_4 = col_51;
					  mediump vec3 normal_59;
					  normal_59 = worldNormal_1;
					  mediump vec3 ambient_60;
					  ambient_60 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_61;
					  mediump vec4 tmpvar_62;
					  tmpvar_62 = (normal_59.xyzz * normal_59.yzzx);
					  x1_61.x = dot (unity_SHBr, tmpvar_62);
					  x1_61.y = dot (unity_SHBg, tmpvar_62);
					  x1_61.z = dot (unity_SHBb, tmpvar_62);
					  ambient_60 = (ambient_60 + (x1_61 + (unity_SHC.xyz * 
					    ((normal_59.x * normal_59.x) - (normal_59.y * normal_59.y))
					  )));
					  tmpvar_4 = ambient_60;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_40;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_60;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  P_11 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  tmpvar_9 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_12;
					  normalWorld_12 = tmpvar_4;
					  mediump vec3 ambient_13;
					  mediump vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = normalWorld_12;
					  mediump vec3 x_15;
					  x_15.x = dot (unity_SHAr, tmpvar_14);
					  x_15.y = dot (unity_SHAg, tmpvar_14);
					  x_15.z = dot (unity_SHAb, tmpvar_14);
					  ambient_13 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_15)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_16;
					  lowp vec4 c_17;
					  lowp float diff_18;
					  mediump float tmpvar_19;
					  tmpvar_19 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_18 = tmpvar_19;
					  c_17.xyz = ((tmpvar_8 * tmpvar_1) * diff_18);
					  c_17.w = (tmpvar_10.w * _Color.w);
					  c_16.w = c_17.w;
					  c_16.xyz = (c_17.xyz + (tmpvar_8 * ambient_13));
					  c_3.w = c_16.w;
					  c_3.xyz = (c_16.xyz + tmpvar_9);
					  highp float tmpvar_20;
					  tmpvar_20 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_20));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_46;
					  lightColor0_46 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_47;
					  lightColor1_47 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_48;
					  lightColor2_48 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_49;
					  lightColor3_49 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_50;
					  lightAttenSq_50 = unity_4LightAtten0;
					  highp vec3 normal_51;
					  normal_51 = worldNormal_1;
					  highp vec3 col_52;
					  highp vec4 ndotl_53;
					  highp vec4 lengthSq_54;
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_54 = (tmpvar_55 * tmpvar_55);
					  lengthSq_54 = (lengthSq_54 + (tmpvar_56 * tmpvar_56));
					  lengthSq_54 = (lengthSq_54 + (tmpvar_57 * tmpvar_57));
					  ndotl_53 = (tmpvar_55 * normal_51.x);
					  ndotl_53 = (ndotl_53 + (tmpvar_56 * normal_51.y));
					  ndotl_53 = (ndotl_53 + (tmpvar_57 * normal_51.z));
					  highp vec4 tmpvar_58;
					  tmpvar_58 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_53 * inversesqrt(lengthSq_54)));
					  ndotl_53 = tmpvar_58;
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (tmpvar_58 * (1.0/((1.0 + 
					    (lengthSq_54 * lightAttenSq_50)
					  ))));
					  col_52 = (lightColor0_46 * tmpvar_59.x);
					  col_52 = (col_52 + (lightColor1_47 * tmpvar_59.y));
					  col_52 = (col_52 + (lightColor2_48 * tmpvar_59.z));
					  col_52 = (col_52 + (lightColor3_49 * tmpvar_59.w));
					  tmpvar_4 = col_52;
					  mediump vec3 normal_60;
					  normal_60 = worldNormal_1;
					  mediump vec3 ambient_61;
					  ambient_61 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_62;
					  mediump vec4 tmpvar_63;
					  tmpvar_63 = (normal_60.xyzz * normal_60.yzzx);
					  x1_62.x = dot (unity_SHBr, tmpvar_63);
					  x1_62.y = dot (unity_SHBg, tmpvar_63);
					  x1_62.z = dot (unity_SHBb, tmpvar_63);
					  ambient_61 = (ambient_61 + (x1_62 + (unity_SHC.xyz * 
					    ((normal_60.x * normal_60.x) - (normal_60.y * normal_60.y))
					  )));
					  tmpvar_4 = ambient_61;
					  highp vec4 o_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_66;
					  tmpvar_66.x = tmpvar_65.x;
					  tmpvar_66.y = (tmpvar_65.y * _ProjectionParams.x);
					  o_64.xy = (tmpvar_66 + tmpvar_65.w);
					  o_64.zw = tmpvar_2.zw;
					  tmpvar_5 = o_64;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_41;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_61;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_9 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  tmpvar_10 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_13;
					  mediump vec3 normalWorld_14;
					  normalWorld_14 = tmpvar_5;
					  mediump vec3 tmpvar_15;
					  tmpvar_15 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_16;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_14;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  ambient_16 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_18)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_15;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_9 * tmpvar_15) * diff_21);
					  c_20.w = (tmpvar_11.w * _Color.w);
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_9 * ambient_16));
					  c_4.w = c_19.w;
					  c_4.xyz = (c_19.xyz + tmpvar_10);
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_23));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  mediump vec3 normal_42;
					  normal_42 = worldNormal_1;
					  mediump vec3 x1_43;
					  mediump vec4 tmpvar_44;
					  tmpvar_44 = (normal_42.xyzz * normal_42.yzzx);
					  x1_43.x = dot (unity_SHBr, tmpvar_44);
					  x1_43.y = dot (unity_SHBg, tmpvar_44);
					  x1_43.z = dot (unity_SHBb, tmpvar_44);
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_43 + (unity_SHC.xyz * (
					    (normal_42.x * normal_42.x)
					   - 
					    (normal_42.y * normal_42.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  P_13 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  tmpvar_11 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_14;
					  normalWorld_14 = tmpvar_4;
					  mediump vec3 ambient_15;
					  mediump vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = normalWorld_14;
					  mediump vec3 x_17;
					  x_17.x = dot (unity_SHAr, tmpvar_16);
					  x_17.y = dot (unity_SHAg, tmpvar_16);
					  x_17.z = dot (unity_SHAb, tmpvar_16);
					  ambient_15 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_17)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_18;
					  viewDir_18 = worldViewDir_5;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  highp float nh_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_22 = tmpvar_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_18)
					  )));
					  nh_21 = tmpvar_24;
					  mediump float y_25;
					  y_25 = (_Shininess * 128.0);
					  highp float tmpvar_26;
					  tmpvar_26 = (pow (nh_21, y_25) * tmpvar_12.w);
					  c_20.xyz = (((tmpvar_10 * tmpvar_1) * diff_22) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_26));
					  c_20.w = (tmpvar_12.w * _Color.w);
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_10 * ambient_15));
					  c_3.xyz = (c_19.xyz + tmpvar_11);
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_44;
					  normal_44 = worldNormal_1;
					  mediump vec3 x1_45;
					  mediump vec4 tmpvar_46;
					  tmpvar_46 = (normal_44.xyzz * normal_44.yzzx);
					  x1_45.x = dot (unity_SHBr, tmpvar_46);
					  x1_45.y = dot (unity_SHBg, tmpvar_46);
					  x1_45.z = dot (unity_SHBb, tmpvar_46);
					  highp vec4 o_47;
					  highp vec4 tmpvar_48;
					  tmpvar_48 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_49;
					  tmpvar_49.x = tmpvar_48.x;
					  tmpvar_49.y = (tmpvar_48.y * _ProjectionParams.x);
					  o_47.xy = (tmpvar_49 + tmpvar_48.w);
					  o_47.zw = tmpvar_2.zw;
					  tmpvar_4 = o_47;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_45 + (unity_SHC.xyz * (
					    (normal_44.x * normal_44.x)
					   - 
					    (normal_44.y * normal_44.y)
					  )));
					  xlv_TEXCOORD4 = tmpvar_4;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_6 = tmpvar_10;
					  tmpvar_8 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  P_14 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_11 = (tmpvar_13.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_8.xyz);
					  tmpvar_12 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_15;
					  tmpvar_15 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_15;
					  mediump vec3 normalWorld_16;
					  normalWorld_16 = tmpvar_5;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_18;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normalWorld_16;
					  mediump vec3 x_20;
					  x_20.x = dot (unity_SHAr, tmpvar_19);
					  x_20.y = dot (unity_SHAg, tmpvar_19);
					  x_20.z = dot (unity_SHAb, tmpvar_19);
					  ambient_18 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_20)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_17;
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_6;
					  lowp vec4 c_22;
					  lowp vec4 c_23;
					  highp float nh_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_25 = tmpvar_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (tmpvar_5, normalize(
					    (tmpvar_3 + viewDir_21)
					  )));
					  nh_24 = tmpvar_27;
					  mediump float y_28;
					  y_28 = (_Shininess * 128.0);
					  highp float tmpvar_29;
					  tmpvar_29 = (pow (nh_24, y_28) * tmpvar_13.w);
					  c_23.xyz = (((tmpvar_11 * tmpvar_17) * diff_25) + ((tmpvar_17 * _SpecColor.xyz) * tmpvar_29));
					  c_23.w = (tmpvar_13.w * _Color.w);
					  c_22.w = c_23.w;
					  c_22.xyz = (c_23.xyz + (tmpvar_11 * ambient_18));
					  c_4.xyz = (c_22.xyz + tmpvar_12);
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_2 = worldNormal_1;
					  highp vec3 lightColor0_44;
					  lightColor0_44 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_45;
					  lightColor1_45 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_46;
					  lightColor2_46 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_47;
					  lightColor3_47 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_48;
					  lightAttenSq_48 = unity_4LightAtten0;
					  highp vec3 normal_49;
					  normal_49 = worldNormal_1;
					  highp vec3 col_50;
					  highp vec4 ndotl_51;
					  highp vec4 lengthSq_52;
					  highp vec4 tmpvar_53;
					  tmpvar_53 = (unity_4LightPosX0 - tmpvar_39.x);
					  highp vec4 tmpvar_54;
					  tmpvar_54 = (unity_4LightPosY0 - tmpvar_39.y);
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosZ0 - tmpvar_39.z);
					  lengthSq_52 = (tmpvar_53 * tmpvar_53);
					  lengthSq_52 = (lengthSq_52 + (tmpvar_54 * tmpvar_54));
					  lengthSq_52 = (lengthSq_52 + (tmpvar_55 * tmpvar_55));
					  ndotl_51 = (tmpvar_53 * normal_49.x);
					  ndotl_51 = (ndotl_51 + (tmpvar_54 * normal_49.y));
					  ndotl_51 = (ndotl_51 + (tmpvar_55 * normal_49.z));
					  highp vec4 tmpvar_56;
					  tmpvar_56 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_51 * inversesqrt(lengthSq_52)));
					  ndotl_51 = tmpvar_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_56 * (1.0/((1.0 + 
					    (lengthSq_52 * lightAttenSq_48)
					  ))));
					  col_50 = (lightColor0_44 * tmpvar_57.x);
					  col_50 = (col_50 + (lightColor1_45 * tmpvar_57.y));
					  col_50 = (col_50 + (lightColor2_46 * tmpvar_57.z));
					  col_50 = (col_50 + (lightColor3_47 * tmpvar_57.w));
					  tmpvar_3 = col_50;
					  mediump vec3 normal_58;
					  normal_58 = worldNormal_1;
					  mediump vec3 ambient_59;
					  ambient_59 = (tmpvar_3 * ((tmpvar_3 * 
					    ((tmpvar_3 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_60;
					  mediump vec4 tmpvar_61;
					  tmpvar_61 = (normal_58.xyzz * normal_58.yzzx);
					  x1_60.x = dot (unity_SHBr, tmpvar_61);
					  x1_60.y = dot (unity_SHBg, tmpvar_61);
					  x1_60.z = dot (unity_SHBb, tmpvar_61);
					  ambient_59 = (ambient_59 + (x1_60 + (unity_SHC.xyz * 
					    ((normal_58.x * normal_58.x) - (normal_58.y * normal_58.y))
					  )));
					  tmpvar_3 = ambient_59;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = tmpvar_39;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_59;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  P_13 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  tmpvar_11 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_14;
					  normalWorld_14 = tmpvar_4;
					  mediump vec3 ambient_15;
					  mediump vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = normalWorld_14;
					  mediump vec3 x_17;
					  x_17.x = dot (unity_SHAr, tmpvar_16);
					  x_17.y = dot (unity_SHAg, tmpvar_16);
					  x_17.z = dot (unity_SHAb, tmpvar_16);
					  ambient_15 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_17)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_18;
					  viewDir_18 = worldViewDir_5;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  highp float nh_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_22 = tmpvar_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_18)
					  )));
					  nh_21 = tmpvar_24;
					  mediump float y_25;
					  y_25 = (_Shininess * 128.0);
					  highp float tmpvar_26;
					  tmpvar_26 = (pow (nh_21, y_25) * tmpvar_12.w);
					  c_20.xyz = (((tmpvar_10 * tmpvar_1) * diff_22) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_26));
					  c_20.w = (tmpvar_12.w * _Color.w);
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_10 * ambient_15));
					  c_3.xyz = (c_19.xyz + tmpvar_11);
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_46;
					  lightColor0_46 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_47;
					  lightColor1_47 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_48;
					  lightColor2_48 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_49;
					  lightColor3_49 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_50;
					  lightAttenSq_50 = unity_4LightAtten0;
					  highp vec3 normal_51;
					  normal_51 = worldNormal_1;
					  highp vec3 col_52;
					  highp vec4 ndotl_53;
					  highp vec4 lengthSq_54;
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_54 = (tmpvar_55 * tmpvar_55);
					  lengthSq_54 = (lengthSq_54 + (tmpvar_56 * tmpvar_56));
					  lengthSq_54 = (lengthSq_54 + (tmpvar_57 * tmpvar_57));
					  ndotl_53 = (tmpvar_55 * normal_51.x);
					  ndotl_53 = (ndotl_53 + (tmpvar_56 * normal_51.y));
					  ndotl_53 = (ndotl_53 + (tmpvar_57 * normal_51.z));
					  highp vec4 tmpvar_58;
					  tmpvar_58 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_53 * inversesqrt(lengthSq_54)));
					  ndotl_53 = tmpvar_58;
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (tmpvar_58 * (1.0/((1.0 + 
					    (lengthSq_54 * lightAttenSq_50)
					  ))));
					  col_52 = (lightColor0_46 * tmpvar_59.x);
					  col_52 = (col_52 + (lightColor1_47 * tmpvar_59.y));
					  col_52 = (col_52 + (lightColor2_48 * tmpvar_59.z));
					  col_52 = (col_52 + (lightColor3_49 * tmpvar_59.w));
					  tmpvar_4 = col_52;
					  mediump vec3 normal_60;
					  normal_60 = worldNormal_1;
					  mediump vec3 ambient_61;
					  ambient_61 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_62;
					  mediump vec4 tmpvar_63;
					  tmpvar_63 = (normal_60.xyzz * normal_60.yzzx);
					  x1_62.x = dot (unity_SHBr, tmpvar_63);
					  x1_62.y = dot (unity_SHBg, tmpvar_63);
					  x1_62.z = dot (unity_SHBb, tmpvar_63);
					  ambient_61 = (ambient_61 + (x1_62 + (unity_SHC.xyz * 
					    ((normal_60.x * normal_60.x) - (normal_60.y * normal_60.y))
					  )));
					  tmpvar_4 = ambient_61;
					  highp vec4 o_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_66;
					  tmpvar_66.x = tmpvar_65.x;
					  tmpvar_66.y = (tmpvar_65.y * _ProjectionParams.x);
					  o_64.xy = (tmpvar_66 + tmpvar_65.w);
					  o_64.zw = tmpvar_2.zw;
					  tmpvar_5 = o_64;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_41;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_61;
					  xlv_TEXCOORD4 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_6 = tmpvar_10;
					  tmpvar_8 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  P_14 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_11 = (tmpvar_13.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_8.xyz);
					  tmpvar_12 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_15;
					  tmpvar_15 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_15;
					  mediump vec3 normalWorld_16;
					  normalWorld_16 = tmpvar_5;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_18;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normalWorld_16;
					  mediump vec3 x_20;
					  x_20.x = dot (unity_SHAr, tmpvar_19);
					  x_20.y = dot (unity_SHAg, tmpvar_19);
					  x_20.z = dot (unity_SHAb, tmpvar_19);
					  ambient_18 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_20)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_17;
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_6;
					  lowp vec4 c_22;
					  lowp vec4 c_23;
					  highp float nh_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_25 = tmpvar_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (tmpvar_5, normalize(
					    (tmpvar_3 + viewDir_21)
					  )));
					  nh_24 = tmpvar_27;
					  mediump float y_28;
					  y_28 = (_Shininess * 128.0);
					  highp float tmpvar_29;
					  tmpvar_29 = (pow (nh_24, y_28) * tmpvar_13.w);
					  c_23.xyz = (((tmpvar_11 * tmpvar_17) * diff_25) + ((tmpvar_17 * _SpecColor.xyz) * tmpvar_29));
					  c_23.w = (tmpvar_13.w * _Color.w);
					  c_22.w = c_23.w;
					  c_22.xyz = (c_23.xyz + (tmpvar_11 * ambient_18));
					  c_4.xyz = (c_22.xyz + tmpvar_12);
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  P_13 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  tmpvar_11 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_14;
					  normalWorld_14 = tmpvar_4;
					  mediump vec3 ambient_15;
					  mediump vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = normalWorld_14;
					  mediump vec3 x_17;
					  x_17.x = dot (unity_SHAr, tmpvar_16);
					  x_17.y = dot (unity_SHAg, tmpvar_16);
					  x_17.z = dot (unity_SHAb, tmpvar_16);
					  ambient_15 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_17)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_18;
					  viewDir_18 = worldViewDir_5;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  highp float nh_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_22 = tmpvar_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_18)
					  )));
					  nh_21 = tmpvar_24;
					  mediump float y_25;
					  y_25 = (_Shininess * 128.0);
					  highp float tmpvar_26;
					  tmpvar_26 = (pow (nh_21, y_25) * tmpvar_12.w);
					  c_20.xyz = (((tmpvar_10 * tmpvar_1) * diff_22) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_26));
					  c_20.w = (tmpvar_12.w * _Color.w);
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_10 * ambient_15));
					  c_3.w = c_19.w;
					  c_3.xyz = (c_19.xyz + tmpvar_11);
					  highp float tmpvar_27;
					  tmpvar_27 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_27));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_3 = worldNormal_1;
					  mediump vec3 normal_44;
					  normal_44 = worldNormal_1;
					  mediump vec3 x1_45;
					  mediump vec4 tmpvar_46;
					  tmpvar_46 = (normal_44.xyzz * normal_44.yzzx);
					  x1_45.x = dot (unity_SHBr, tmpvar_46);
					  x1_45.y = dot (unity_SHBg, tmpvar_46);
					  x1_45.z = dot (unity_SHBb, tmpvar_46);
					  highp vec4 o_47;
					  highp vec4 tmpvar_48;
					  tmpvar_48 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_49;
					  tmpvar_49.x = tmpvar_48.x;
					  tmpvar_49.y = (tmpvar_48.y * _ProjectionParams.x);
					  o_47.xy = (tmpvar_49 + tmpvar_48.w);
					  o_47.zw = tmpvar_2.zw;
					  tmpvar_4 = o_47;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = (x1_45 + (unity_SHC.xyz * (
					    (normal_44.x * normal_44.x)
					   - 
					    (normal_44.y * normal_44.y)
					  )));
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_6 = tmpvar_10;
					  tmpvar_8 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  P_14 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_11 = (tmpvar_13.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_8.xyz);
					  tmpvar_12 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_15;
					  tmpvar_15 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_15;
					  mediump vec3 normalWorld_16;
					  normalWorld_16 = tmpvar_5;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_18;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normalWorld_16;
					  mediump vec3 x_20;
					  x_20.x = dot (unity_SHAr, tmpvar_19);
					  x_20.y = dot (unity_SHAg, tmpvar_19);
					  x_20.z = dot (unity_SHAb, tmpvar_19);
					  ambient_18 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_20)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_17;
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_6;
					  lowp vec4 c_22;
					  lowp vec4 c_23;
					  highp float nh_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_25 = tmpvar_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (tmpvar_5, normalize(
					    (tmpvar_3 + viewDir_21)
					  )));
					  nh_24 = tmpvar_27;
					  mediump float y_28;
					  y_28 = (_Shininess * 128.0);
					  highp float tmpvar_29;
					  tmpvar_29 = (pow (nh_24, y_28) * tmpvar_13.w);
					  c_23.xyz = (((tmpvar_11 * tmpvar_17) * diff_25) + ((tmpvar_17 * _SpecColor.xyz) * tmpvar_29));
					  c_23.w = (tmpvar_13.w * _Color.w);
					  c_22.w = c_23.w;
					  c_22.xyz = (c_23.xyz + (tmpvar_11 * ambient_18));
					  c_4.w = c_22.w;
					  c_4.xyz = (c_22.xyz + tmpvar_12);
					  highp float tmpvar_30;
					  tmpvar_30 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_44;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_45;
					  lightColor0_45 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_46;
					  lightColor1_46 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_47;
					  lightColor2_47 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_48;
					  lightColor3_48 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_49;
					  lightAttenSq_49 = unity_4LightAtten0;
					  highp vec3 normal_50;
					  normal_50 = worldNormal_1;
					  highp vec3 col_51;
					  highp vec4 ndotl_52;
					  highp vec4 lengthSq_53;
					  highp vec4 tmpvar_54;
					  tmpvar_54 = (unity_4LightPosX0 - tmpvar_40.x);
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosY0 - tmpvar_40.y);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosZ0 - tmpvar_40.z);
					  lengthSq_53 = (tmpvar_54 * tmpvar_54);
					  lengthSq_53 = (lengthSq_53 + (tmpvar_55 * tmpvar_55));
					  lengthSq_53 = (lengthSq_53 + (tmpvar_56 * tmpvar_56));
					  ndotl_52 = (tmpvar_54 * normal_50.x);
					  ndotl_52 = (ndotl_52 + (tmpvar_55 * normal_50.y));
					  ndotl_52 = (ndotl_52 + (tmpvar_56 * normal_50.z));
					  highp vec4 tmpvar_57;
					  tmpvar_57 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_52 * inversesqrt(lengthSq_53)));
					  ndotl_52 = tmpvar_57;
					  highp vec4 tmpvar_58;
					  tmpvar_58 = (tmpvar_57 * (1.0/((1.0 + 
					    (lengthSq_53 * lightAttenSq_49)
					  ))));
					  col_51 = (lightColor0_45 * tmpvar_58.x);
					  col_51 = (col_51 + (lightColor1_46 * tmpvar_58.y));
					  col_51 = (col_51 + (lightColor2_47 * tmpvar_58.z));
					  col_51 = (col_51 + (lightColor3_48 * tmpvar_58.w));
					  tmpvar_4 = col_51;
					  mediump vec3 normal_59;
					  normal_59 = worldNormal_1;
					  mediump vec3 ambient_60;
					  ambient_60 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_61;
					  mediump vec4 tmpvar_62;
					  tmpvar_62 = (normal_59.xyzz * normal_59.yzzx);
					  x1_61.x = dot (unity_SHBr, tmpvar_62);
					  x1_61.y = dot (unity_SHBg, tmpvar_62);
					  x1_61.z = dot (unity_SHBb, tmpvar_62);
					  ambient_60 = (ambient_60 + (x1_61 + (unity_SHC.xyz * 
					    ((normal_59.x * normal_59.x) - (normal_59.y * normal_59.y))
					  )));
					  tmpvar_4 = ambient_60;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_40;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_60;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  P_13 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  tmpvar_11 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_14;
					  normalWorld_14 = tmpvar_4;
					  mediump vec3 ambient_15;
					  mediump vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = normalWorld_14;
					  mediump vec3 x_17;
					  x_17.x = dot (unity_SHAr, tmpvar_16);
					  x_17.y = dot (unity_SHAg, tmpvar_16);
					  x_17.z = dot (unity_SHAb, tmpvar_16);
					  ambient_15 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_17)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_18;
					  viewDir_18 = worldViewDir_5;
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  highp float nh_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_22 = tmpvar_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_18)
					  )));
					  nh_21 = tmpvar_24;
					  mediump float y_25;
					  y_25 = (_Shininess * 128.0);
					  highp float tmpvar_26;
					  tmpvar_26 = (pow (nh_21, y_25) * tmpvar_12.w);
					  c_20.xyz = (((tmpvar_10 * tmpvar_1) * diff_22) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_26));
					  c_20.w = (tmpvar_12.w * _Color.w);
					  c_19.w = c_20.w;
					  c_19.xyz = (c_20.xyz + (tmpvar_10 * ambient_15));
					  c_3.w = c_19.w;
					  c_3.xyz = (c_19.xyz + tmpvar_11);
					  highp float tmpvar_27;
					  tmpvar_27 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_27));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 lightColor0_46;
					  lightColor0_46 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_47;
					  lightColor1_47 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_48;
					  lightColor2_48 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_49;
					  lightColor3_49 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_50;
					  lightAttenSq_50 = unity_4LightAtten0;
					  highp vec3 normal_51;
					  normal_51 = worldNormal_1;
					  highp vec3 col_52;
					  highp vec4 ndotl_53;
					  highp vec4 lengthSq_54;
					  highp vec4 tmpvar_55;
					  tmpvar_55 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_54 = (tmpvar_55 * tmpvar_55);
					  lengthSq_54 = (lengthSq_54 + (tmpvar_56 * tmpvar_56));
					  lengthSq_54 = (lengthSq_54 + (tmpvar_57 * tmpvar_57));
					  ndotl_53 = (tmpvar_55 * normal_51.x);
					  ndotl_53 = (ndotl_53 + (tmpvar_56 * normal_51.y));
					  ndotl_53 = (ndotl_53 + (tmpvar_57 * normal_51.z));
					  highp vec4 tmpvar_58;
					  tmpvar_58 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_53 * inversesqrt(lengthSq_54)));
					  ndotl_53 = tmpvar_58;
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (tmpvar_58 * (1.0/((1.0 + 
					    (lengthSq_54 * lightAttenSq_50)
					  ))));
					  col_52 = (lightColor0_46 * tmpvar_59.x);
					  col_52 = (col_52 + (lightColor1_47 * tmpvar_59.y));
					  col_52 = (col_52 + (lightColor2_48 * tmpvar_59.z));
					  col_52 = (col_52 + (lightColor3_49 * tmpvar_59.w));
					  tmpvar_4 = col_52;
					  mediump vec3 normal_60;
					  normal_60 = worldNormal_1;
					  mediump vec3 ambient_61;
					  ambient_61 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_62;
					  mediump vec4 tmpvar_63;
					  tmpvar_63 = (normal_60.xyzz * normal_60.yzzx);
					  x1_62.x = dot (unity_SHBr, tmpvar_63);
					  x1_62.y = dot (unity_SHBg, tmpvar_63);
					  x1_62.z = dot (unity_SHBb, tmpvar_63);
					  ambient_61 = (ambient_61 + (x1_62 + (unity_SHC.xyz * 
					    ((normal_60.x * normal_60.x) - (normal_60.y * normal_60.y))
					  )));
					  tmpvar_4 = ambient_61;
					  highp vec4 o_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_66;
					  tmpvar_66.x = tmpvar_65.x;
					  tmpvar_66.y = (tmpvar_65.y * _ProjectionParams.x);
					  o_64.xy = (tmpvar_66 + tmpvar_65.w);
					  o_64.zw = tmpvar_2.zw;
					  tmpvar_5 = o_64;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_41;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = ambient_61;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD3;
					varying mediump vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_6 = tmpvar_10;
					  tmpvar_8 = xlv_COLOR0;
					  tmpvar_5 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  P_14 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_11 = (tmpvar_13.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_8.xyz);
					  tmpvar_12 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_15;
					  tmpvar_15 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_15;
					  mediump vec3 normalWorld_16;
					  normalWorld_16 = tmpvar_5;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_18;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normalWorld_16;
					  mediump vec3 x_20;
					  x_20.x = dot (unity_SHAr, tmpvar_19);
					  x_20.y = dot (unity_SHAg, tmpvar_19);
					  x_20.z = dot (unity_SHAb, tmpvar_19);
					  ambient_18 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD3 + x_20)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_17;
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_6;
					  lowp vec4 c_22;
					  lowp vec4 c_23;
					  highp float nh_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_25 = tmpvar_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (tmpvar_5, normalize(
					    (tmpvar_3 + viewDir_21)
					  )));
					  nh_24 = tmpvar_27;
					  mediump float y_28;
					  y_28 = (_Shininess * 128.0);
					  highp float tmpvar_29;
					  tmpvar_29 = (pow (nh_24, y_28) * tmpvar_13.w);
					  c_23.xyz = (((tmpvar_11 * tmpvar_17) * diff_25) + ((tmpvar_17 * _SpecColor.xyz) * tmpvar_29));
					  c_23.w = (tmpvar_13.w * _Color.w);
					  c_22.w = c_23.w;
					  c_22.xyz = (c_23.xyz + (tmpvar_11 * ambient_18));
					  c_4.w = c_22.w;
					  c_4.xyz = (c_22.xyz + tmpvar_12);
					  highp float tmpvar_30;
					  tmpvar_30 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_30));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  tmpvar_48.w = tmpvar_39.x;
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  tmpvar_49.w = tmpvar_39.y;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  tmpvar_50.w = tmpvar_39.z;
					  mediump vec3 normal_51;
					  normal_51 = worldNormal_3;
					  mediump vec3 x1_52;
					  mediump vec4 tmpvar_53;
					  tmpvar_53 = (normal_51.xyzz * normal_51.yzzx);
					  x1_52.x = dot (unity_SHBr, tmpvar_53);
					  x1_52.y = dot (unity_SHBg, tmpvar_53);
					  x1_52.z = dot (unity_SHBb, tmpvar_53);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_52 + (unity_SHC.xyz * (
					    (normal_51.x * normal_51.x)
					   - 
					    (normal_51.y * normal_51.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  highp vec2 tmpvar_13;
					  tmpvar_13 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_12 = (xlv_TEXCOORD0 + tmpvar_13);
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_8 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_14;
					  P_14 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_13);
					  lowp vec3 normal_15;
					  normal_15.xy = ((texture2D (_V_CW_NormalMap, P_14).wy * 2.0) - 1.0);
					  normal_15.z = sqrt((1.0 - clamp (
					    dot (normal_15.xy, normal_15.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_16;
					  tmpvar_16.xy = (normal_15.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_16.z = normal_15.z;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = normalize(tmpvar_16);
					  tmpvar_9 = tmpvar_17;
					  tmpvar_10 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_18;
					  tmpvar_18 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_20;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_21;
					  normalWorld_21 = worldN_3;
					  mediump vec3 ambient_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23.w = 1.0;
					  tmpvar_23.xyz = normalWorld_21;
					  mediump vec3 x_24;
					  x_24.x = dot (unity_SHAr, tmpvar_23);
					  x_24.y = dot (unity_SHAg, tmpvar_23);
					  x_24.z = dot (unity_SHAb, tmpvar_23);
					  ambient_22 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_24)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_25;
					  lowp vec4 c_26;
					  lowp float diff_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_27 = tmpvar_28;
					  c_26.xyz = ((tmpvar_8 * tmpvar_1) * diff_27);
					  c_26.w = (tmpvar_11.w * _Color.w);
					  c_25.w = c_26.w;
					  c_25.xyz = (c_26.xyz + (tmpvar_8 * ambient_22));
					  c_4.xyz = (c_25.xyz + tmpvar_10);
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  mediump vec3 normal_53;
					  normal_53 = worldNormal_3;
					  mediump vec3 x1_54;
					  mediump vec4 tmpvar_55;
					  tmpvar_55 = (normal_53.xyzz * normal_53.yzzx);
					  x1_54.x = dot (unity_SHBr, tmpvar_55);
					  x1_54.y = dot (unity_SHBg, tmpvar_55);
					  x1_54.z = dot (unity_SHBb, tmpvar_55);
					  highp vec4 o_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_58;
					  tmpvar_58.x = tmpvar_57.x;
					  tmpvar_58.y = (tmpvar_57.y * _ProjectionParams.x);
					  o_56.xy = (tmpvar_58 + tmpvar_57.w);
					  o_56.zw = tmpvar_4.zw;
					  tmpvar_5 = o_56;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_54 + (unity_SHC.xyz * (
					    (normal_53.x * normal_53.x)
					   - 
					    (normal_53.y * normal_53.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_9 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_10 = tmpvar_18;
					  tmpvar_11 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_19;
					  tmpvar_19 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_22;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_19;
					  mediump vec3 normalWorld_23;
					  normalWorld_23 = worldN_4;
					  mediump vec3 tmpvar_24;
					  tmpvar_24 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_25;
					  mediump vec4 tmpvar_26;
					  tmpvar_26.w = 1.0;
					  tmpvar_26.xyz = normalWorld_23;
					  mediump vec3 x_27;
					  x_27.x = dot (unity_SHAr, tmpvar_26);
					  x_27.y = dot (unity_SHAg, tmpvar_26);
					  x_27.z = dot (unity_SHAb, tmpvar_26);
					  ambient_25 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_27)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_24;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  lowp float diff_30;
					  mediump float tmpvar_31;
					  tmpvar_31 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_30 = tmpvar_31;
					  c_29.xyz = ((tmpvar_9 * tmpvar_24) * diff_30);
					  c_29.w = (tmpvar_12.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = (c_29.xyz + (tmpvar_9 * ambient_25));
					  c_5.xyz = (c_28.xyz + tmpvar_11);
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  highp vec3 lightColor0_52;
					  lightColor0_52 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_53;
					  lightColor1_53 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_54;
					  lightColor2_54 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_55;
					  lightColor3_55 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_56;
					  lightAttenSq_56 = unity_4LightAtten0;
					  highp vec3 normal_57;
					  normal_57 = worldNormal_3;
					  highp vec3 col_58;
					  highp vec4 ndotl_59;
					  highp vec4 lengthSq_60;
					  highp vec4 tmpvar_61;
					  tmpvar_61 = (unity_4LightPosX0 - tmpvar_40.x);
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (unity_4LightPosY0 - tmpvar_40.y);
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosZ0 - tmpvar_40.z);
					  lengthSq_60 = (tmpvar_61 * tmpvar_61);
					  lengthSq_60 = (lengthSq_60 + (tmpvar_62 * tmpvar_62));
					  lengthSq_60 = (lengthSq_60 + (tmpvar_63 * tmpvar_63));
					  ndotl_59 = (tmpvar_61 * normal_57.x);
					  ndotl_59 = (ndotl_59 + (tmpvar_62 * normal_57.y));
					  ndotl_59 = (ndotl_59 + (tmpvar_63 * normal_57.z));
					  highp vec4 tmpvar_64;
					  tmpvar_64 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_59 * inversesqrt(lengthSq_60)));
					  ndotl_59 = tmpvar_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_64 * (1.0/((1.0 + 
					    (lengthSq_60 * lightAttenSq_56)
					  ))));
					  col_58 = (lightColor0_52 * tmpvar_65.x);
					  col_58 = (col_58 + (lightColor1_53 * tmpvar_65.y));
					  col_58 = (col_58 + (lightColor2_54 * tmpvar_65.z));
					  col_58 = (col_58 + (lightColor3_55 * tmpvar_65.w));
					  tmpvar_4 = col_58;
					  mediump vec3 normal_66;
					  normal_66 = worldNormal_3;
					  mediump vec3 ambient_67;
					  ambient_67 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_68;
					  mediump vec4 tmpvar_69;
					  tmpvar_69 = (normal_66.xyzz * normal_66.yzzx);
					  x1_68.x = dot (unity_SHBr, tmpvar_69);
					  x1_68.y = dot (unity_SHBg, tmpvar_69);
					  x1_68.z = dot (unity_SHBb, tmpvar_69);
					  ambient_67 = (ambient_67 + (x1_68 + (unity_SHC.xyz * 
					    ((normal_66.x * normal_66.x) - (normal_66.y * normal_66.y))
					  )));
					  tmpvar_4 = ambient_67;
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_67;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  highp vec2 tmpvar_13;
					  tmpvar_13 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_12 = (xlv_TEXCOORD0 + tmpvar_13);
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_8 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_14;
					  P_14 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_13);
					  lowp vec3 normal_15;
					  normal_15.xy = ((texture2D (_V_CW_NormalMap, P_14).wy * 2.0) - 1.0);
					  normal_15.z = sqrt((1.0 - clamp (
					    dot (normal_15.xy, normal_15.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_16;
					  tmpvar_16.xy = (normal_15.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_16.z = normal_15.z;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = normalize(tmpvar_16);
					  tmpvar_9 = tmpvar_17;
					  tmpvar_10 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_18;
					  tmpvar_18 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_20;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_21;
					  normalWorld_21 = worldN_3;
					  mediump vec3 ambient_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23.w = 1.0;
					  tmpvar_23.xyz = normalWorld_21;
					  mediump vec3 x_24;
					  x_24.x = dot (unity_SHAr, tmpvar_23);
					  x_24.y = dot (unity_SHAg, tmpvar_23);
					  x_24.z = dot (unity_SHAb, tmpvar_23);
					  ambient_22 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_24)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_25;
					  lowp vec4 c_26;
					  lowp float diff_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_27 = tmpvar_28;
					  c_26.xyz = ((tmpvar_8 * tmpvar_1) * diff_27);
					  c_26.w = (tmpvar_11.w * _Color.w);
					  c_25.w = c_26.w;
					  c_25.xyz = (c_26.xyz + (tmpvar_8 * ambient_22));
					  c_4.xyz = (c_25.xyz + tmpvar_10);
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_3 = tmpvar_46;
					  highp mat3 tmpvar_47;
					  tmpvar_47[0] = _Object2World[0].xyz;
					  tmpvar_47[1] = _Object2World[1].xyz;
					  tmpvar_47[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = normalize((tmpvar_47 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_48;
					  highp float tmpvar_49;
					  tmpvar_49 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_49;
					  lowp vec3 tmpvar_50;
					  tmpvar_50 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.x;
					  tmpvar_51.y = tmpvar_50.x;
					  tmpvar_51.z = worldNormal_3.x;
					  tmpvar_51.w = tmpvar_42.x;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.y;
					  tmpvar_52.y = tmpvar_50.y;
					  tmpvar_52.z = worldNormal_3.y;
					  tmpvar_52.w = tmpvar_42.y;
					  highp vec4 tmpvar_53;
					  tmpvar_53.x = worldTangent_2.z;
					  tmpvar_53.y = tmpvar_50.z;
					  tmpvar_53.z = worldNormal_3.z;
					  tmpvar_53.w = tmpvar_42.z;
					  highp vec3 lightColor0_54;
					  lightColor0_54 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_55;
					  lightColor1_55 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_56;
					  lightColor2_56 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_57;
					  lightColor3_57 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_58;
					  lightAttenSq_58 = unity_4LightAtten0;
					  highp vec3 normal_59;
					  normal_59 = worldNormal_3;
					  highp vec3 col_60;
					  highp vec4 ndotl_61;
					  highp vec4 lengthSq_62;
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_62 = (tmpvar_63 * tmpvar_63);
					  lengthSq_62 = (lengthSq_62 + (tmpvar_64 * tmpvar_64));
					  lengthSq_62 = (lengthSq_62 + (tmpvar_65 * tmpvar_65));
					  ndotl_61 = (tmpvar_63 * normal_59.x);
					  ndotl_61 = (ndotl_61 + (tmpvar_64 * normal_59.y));
					  ndotl_61 = (ndotl_61 + (tmpvar_65 * normal_59.z));
					  highp vec4 tmpvar_66;
					  tmpvar_66 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_61 * inversesqrt(lengthSq_62)));
					  ndotl_61 = tmpvar_66;
					  highp vec4 tmpvar_67;
					  tmpvar_67 = (tmpvar_66 * (1.0/((1.0 + 
					    (lengthSq_62 * lightAttenSq_58)
					  ))));
					  col_60 = (lightColor0_54 * tmpvar_67.x);
					  col_60 = (col_60 + (lightColor1_55 * tmpvar_67.y));
					  col_60 = (col_60 + (lightColor2_56 * tmpvar_67.z));
					  col_60 = (col_60 + (lightColor3_57 * tmpvar_67.w));
					  tmpvar_5 = col_60;
					  mediump vec3 normal_68;
					  normal_68 = worldNormal_3;
					  mediump vec3 ambient_69;
					  ambient_69 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_70;
					  mediump vec4 tmpvar_71;
					  tmpvar_71 = (normal_68.xyzz * normal_68.yzzx);
					  x1_70.x = dot (unity_SHBr, tmpvar_71);
					  x1_70.y = dot (unity_SHBg, tmpvar_71);
					  x1_70.z = dot (unity_SHBb, tmpvar_71);
					  ambient_69 = (ambient_69 + (x1_70 + (unity_SHC.xyz * 
					    ((normal_68.x * normal_68.x) - (normal_68.y * normal_68.y))
					  )));
					  tmpvar_5 = ambient_69;
					  highp vec4 o_72;
					  highp vec4 tmpvar_73;
					  tmpvar_73 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_74;
					  tmpvar_74.x = tmpvar_73.x;
					  tmpvar_74.y = (tmpvar_73.y * _ProjectionParams.x);
					  o_72.xy = (tmpvar_74 + tmpvar_73.w);
					  o_72.zw = tmpvar_4.zw;
					  tmpvar_6 = o_72;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_51;
					  xlv_TEXCOORD2 = tmpvar_52;
					  xlv_TEXCOORD3 = tmpvar_53;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_69;
					  xlv_TEXCOORD5 = tmpvar_6;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_9 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_10 = tmpvar_18;
					  tmpvar_11 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_19;
					  tmpvar_19 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_22;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_19;
					  mediump vec3 normalWorld_23;
					  normalWorld_23 = worldN_4;
					  mediump vec3 tmpvar_24;
					  tmpvar_24 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_25;
					  mediump vec4 tmpvar_26;
					  tmpvar_26.w = 1.0;
					  tmpvar_26.xyz = normalWorld_23;
					  mediump vec3 x_27;
					  x_27.x = dot (unity_SHAr, tmpvar_26);
					  x_27.y = dot (unity_SHAg, tmpvar_26);
					  x_27.z = dot (unity_SHAb, tmpvar_26);
					  ambient_25 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_27)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_24;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  lowp float diff_30;
					  mediump float tmpvar_31;
					  tmpvar_31 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_30 = tmpvar_31;
					  c_29.xyz = ((tmpvar_9 * tmpvar_24) * diff_30);
					  c_29.w = (tmpvar_12.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = (c_29.xyz + (tmpvar_9 * ambient_25));
					  c_5.xyz = (c_28.xyz + tmpvar_11);
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  highp vec2 tmpvar_13;
					  tmpvar_13 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_12 = (xlv_TEXCOORD0 + tmpvar_13);
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_8 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_14;
					  P_14 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_13);
					  lowp vec3 normal_15;
					  normal_15.xy = ((texture2D (_V_CW_NormalMap, P_14).wy * 2.0) - 1.0);
					  normal_15.z = sqrt((1.0 - clamp (
					    dot (normal_15.xy, normal_15.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_16;
					  tmpvar_16.xy = (normal_15.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_16.z = normal_15.z;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = normalize(tmpvar_16);
					  tmpvar_9 = tmpvar_17;
					  tmpvar_10 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_18;
					  tmpvar_18 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_20;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_21;
					  normalWorld_21 = worldN_3;
					  mediump vec3 ambient_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23.w = 1.0;
					  tmpvar_23.xyz = normalWorld_21;
					  mediump vec3 x_24;
					  x_24.x = dot (unity_SHAr, tmpvar_23);
					  x_24.y = dot (unity_SHAg, tmpvar_23);
					  x_24.z = dot (unity_SHAb, tmpvar_23);
					  ambient_22 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_24)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_25;
					  lowp vec4 c_26;
					  lowp float diff_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_27 = tmpvar_28;
					  c_26.xyz = ((tmpvar_8 * tmpvar_1) * diff_27);
					  c_26.w = (tmpvar_11.w * _Color.w);
					  c_25.w = c_26.w;
					  c_25.xyz = (c_26.xyz + (tmpvar_8 * ambient_22));
					  c_4.w = c_25.w;
					  c_4.xyz = (c_25.xyz + tmpvar_10);
					  highp float tmpvar_29;
					  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_29));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  mediump vec3 normal_53;
					  normal_53 = worldNormal_3;
					  mediump vec3 x1_54;
					  mediump vec4 tmpvar_55;
					  tmpvar_55 = (normal_53.xyzz * normal_53.yzzx);
					  x1_54.x = dot (unity_SHBr, tmpvar_55);
					  x1_54.y = dot (unity_SHBg, tmpvar_55);
					  x1_54.z = dot (unity_SHBb, tmpvar_55);
					  highp vec4 o_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_58;
					  tmpvar_58.x = tmpvar_57.x;
					  tmpvar_58.y = (tmpvar_57.y * _ProjectionParams.x);
					  o_56.xy = (tmpvar_58 + tmpvar_57.w);
					  o_56.zw = tmpvar_4.zw;
					  tmpvar_5 = o_56;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_54 + (unity_SHC.xyz * (
					    (normal_53.x * normal_53.x)
					   - 
					    (normal_53.y * normal_53.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_9 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_10 = tmpvar_18;
					  tmpvar_11 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_19;
					  tmpvar_19 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_22;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_19;
					  mediump vec3 normalWorld_23;
					  normalWorld_23 = worldN_4;
					  mediump vec3 tmpvar_24;
					  tmpvar_24 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_25;
					  mediump vec4 tmpvar_26;
					  tmpvar_26.w = 1.0;
					  tmpvar_26.xyz = normalWorld_23;
					  mediump vec3 x_27;
					  x_27.x = dot (unity_SHAr, tmpvar_26);
					  x_27.y = dot (unity_SHAg, tmpvar_26);
					  x_27.z = dot (unity_SHAb, tmpvar_26);
					  ambient_25 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_27)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_24;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  lowp float diff_30;
					  mediump float tmpvar_31;
					  tmpvar_31 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_30 = tmpvar_31;
					  c_29.xyz = ((tmpvar_9 * tmpvar_24) * diff_30);
					  c_29.w = (tmpvar_12.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = (c_29.xyz + (tmpvar_9 * ambient_25));
					  c_5.w = c_28.w;
					  c_5.xyz = (c_28.xyz + tmpvar_11);
					  highp float tmpvar_32;
					  tmpvar_32 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_5.xyz, vec3(tmpvar_32));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  highp vec3 lightColor0_53;
					  lightColor0_53 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_54;
					  lightColor1_54 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_55;
					  lightColor2_55 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_56;
					  lightColor3_56 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_57;
					  lightAttenSq_57 = unity_4LightAtten0;
					  highp vec3 normal_58;
					  normal_58 = worldNormal_3;
					  highp vec3 col_59;
					  highp vec4 ndotl_60;
					  highp vec4 lengthSq_61;
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_61 = (tmpvar_62 * tmpvar_62);
					  lengthSq_61 = (lengthSq_61 + (tmpvar_63 * tmpvar_63));
					  lengthSq_61 = (lengthSq_61 + (tmpvar_64 * tmpvar_64));
					  ndotl_60 = (tmpvar_62 * normal_58.x);
					  ndotl_60 = (ndotl_60 + (tmpvar_63 * normal_58.y));
					  ndotl_60 = (ndotl_60 + (tmpvar_64 * normal_58.z));
					  highp vec4 tmpvar_65;
					  tmpvar_65 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_60 * inversesqrt(lengthSq_61)));
					  ndotl_60 = tmpvar_65;
					  highp vec4 tmpvar_66;
					  tmpvar_66 = (tmpvar_65 * (1.0/((1.0 + 
					    (lengthSq_61 * lightAttenSq_57)
					  ))));
					  col_59 = (lightColor0_53 * tmpvar_66.x);
					  col_59 = (col_59 + (lightColor1_54 * tmpvar_66.y));
					  col_59 = (col_59 + (lightColor2_55 * tmpvar_66.z));
					  col_59 = (col_59 + (lightColor3_56 * tmpvar_66.w));
					  tmpvar_5 = col_59;
					  mediump vec3 normal_67;
					  normal_67 = worldNormal_3;
					  mediump vec3 ambient_68;
					  ambient_68 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_69;
					  mediump vec4 tmpvar_70;
					  tmpvar_70 = (normal_67.xyzz * normal_67.yzzx);
					  x1_69.x = dot (unity_SHBr, tmpvar_70);
					  x1_69.y = dot (unity_SHBg, tmpvar_70);
					  x1_69.z = dot (unity_SHBb, tmpvar_70);
					  ambient_68 = (ambient_68 + (x1_69 + (unity_SHC.xyz * 
					    ((normal_67.x * normal_67.x) - (normal_67.y * normal_67.y))
					  )));
					  tmpvar_5 = ambient_68;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_68;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  highp vec2 tmpvar_13;
					  tmpvar_13 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_12 = (xlv_TEXCOORD0 + tmpvar_13);
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_8 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_14;
					  P_14 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_13);
					  lowp vec3 normal_15;
					  normal_15.xy = ((texture2D (_V_CW_NormalMap, P_14).wy * 2.0) - 1.0);
					  normal_15.z = sqrt((1.0 - clamp (
					    dot (normal_15.xy, normal_15.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_16;
					  tmpvar_16.xy = (normal_15.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_16.z = normal_15.z;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = normalize(tmpvar_16);
					  tmpvar_9 = tmpvar_17;
					  tmpvar_10 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_18;
					  tmpvar_18 = dot (xlv_TEXCOORD1.xyz, tmpvar_9);
					  worldN_3.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (xlv_TEXCOORD2.xyz, tmpvar_9);
					  worldN_3.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD3.xyz, tmpvar_9);
					  worldN_3.z = tmpvar_20;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  mediump vec3 normalWorld_21;
					  normalWorld_21 = worldN_3;
					  mediump vec3 ambient_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23.w = 1.0;
					  tmpvar_23.xyz = normalWorld_21;
					  mediump vec3 x_24;
					  x_24.x = dot (unity_SHAr, tmpvar_23);
					  x_24.y = dot (unity_SHAg, tmpvar_23);
					  x_24.z = dot (unity_SHAb, tmpvar_23);
					  ambient_22 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_24)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_25;
					  lowp vec4 c_26;
					  lowp float diff_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_27 = tmpvar_28;
					  c_26.xyz = ((tmpvar_8 * tmpvar_1) * diff_27);
					  c_26.w = (tmpvar_11.w * _Color.w);
					  c_25.w = c_26.w;
					  c_25.xyz = (c_26.xyz + (tmpvar_8 * ambient_22));
					  c_4.w = c_25.w;
					  c_4.xyz = (c_25.xyz + tmpvar_10);
					  highp float tmpvar_29;
					  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_29));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_3 = tmpvar_46;
					  highp mat3 tmpvar_47;
					  tmpvar_47[0] = _Object2World[0].xyz;
					  tmpvar_47[1] = _Object2World[1].xyz;
					  tmpvar_47[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = normalize((tmpvar_47 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_48;
					  highp float tmpvar_49;
					  tmpvar_49 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_49;
					  lowp vec3 tmpvar_50;
					  tmpvar_50 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.x;
					  tmpvar_51.y = tmpvar_50.x;
					  tmpvar_51.z = worldNormal_3.x;
					  tmpvar_51.w = tmpvar_42.x;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.y;
					  tmpvar_52.y = tmpvar_50.y;
					  tmpvar_52.z = worldNormal_3.y;
					  tmpvar_52.w = tmpvar_42.y;
					  highp vec4 tmpvar_53;
					  tmpvar_53.x = worldTangent_2.z;
					  tmpvar_53.y = tmpvar_50.z;
					  tmpvar_53.z = worldNormal_3.z;
					  tmpvar_53.w = tmpvar_42.z;
					  highp vec3 lightColor0_54;
					  lightColor0_54 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_55;
					  lightColor1_55 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_56;
					  lightColor2_56 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_57;
					  lightColor3_57 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_58;
					  lightAttenSq_58 = unity_4LightAtten0;
					  highp vec3 normal_59;
					  normal_59 = worldNormal_3;
					  highp vec3 col_60;
					  highp vec4 ndotl_61;
					  highp vec4 lengthSq_62;
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_62 = (tmpvar_63 * tmpvar_63);
					  lengthSq_62 = (lengthSq_62 + (tmpvar_64 * tmpvar_64));
					  lengthSq_62 = (lengthSq_62 + (tmpvar_65 * tmpvar_65));
					  ndotl_61 = (tmpvar_63 * normal_59.x);
					  ndotl_61 = (ndotl_61 + (tmpvar_64 * normal_59.y));
					  ndotl_61 = (ndotl_61 + (tmpvar_65 * normal_59.z));
					  highp vec4 tmpvar_66;
					  tmpvar_66 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_61 * inversesqrt(lengthSq_62)));
					  ndotl_61 = tmpvar_66;
					  highp vec4 tmpvar_67;
					  tmpvar_67 = (tmpvar_66 * (1.0/((1.0 + 
					    (lengthSq_62 * lightAttenSq_58)
					  ))));
					  col_60 = (lightColor0_54 * tmpvar_67.x);
					  col_60 = (col_60 + (lightColor1_55 * tmpvar_67.y));
					  col_60 = (col_60 + (lightColor2_56 * tmpvar_67.z));
					  col_60 = (col_60 + (lightColor3_57 * tmpvar_67.w));
					  tmpvar_5 = col_60;
					  mediump vec3 normal_68;
					  normal_68 = worldNormal_3;
					  mediump vec3 ambient_69;
					  ambient_69 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_70;
					  mediump vec4 tmpvar_71;
					  tmpvar_71 = (normal_68.xyzz * normal_68.yzzx);
					  x1_70.x = dot (unity_SHBr, tmpvar_71);
					  x1_70.y = dot (unity_SHBg, tmpvar_71);
					  x1_70.z = dot (unity_SHBb, tmpvar_71);
					  ambient_69 = (ambient_69 + (x1_70 + (unity_SHC.xyz * 
					    ((normal_68.x * normal_68.x) - (normal_68.y * normal_68.y))
					  )));
					  tmpvar_5 = ambient_69;
					  highp vec4 o_72;
					  highp vec4 tmpvar_73;
					  tmpvar_73 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_74;
					  tmpvar_74.x = tmpvar_73.x;
					  tmpvar_74.y = (tmpvar_73.y * _ProjectionParams.x);
					  o_72.xy = (tmpvar_74 + tmpvar_73.w);
					  o_72.zw = tmpvar_4.zw;
					  tmpvar_6 = o_72;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_51;
					  xlv_TEXCOORD2 = tmpvar_52;
					  xlv_TEXCOORD3 = tmpvar_53;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_69;
					  xlv_TEXCOORD5 = tmpvar_6;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_9 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_9 = (tmpvar_9 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_10 = tmpvar_18;
					  tmpvar_11 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_19;
					  tmpvar_19 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (xlv_TEXCOORD1.xyz, tmpvar_10);
					  worldN_4.x = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD2.xyz, tmpvar_10);
					  worldN_4.y = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD3.xyz, tmpvar_10);
					  worldN_4.z = tmpvar_22;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_6;
					  tmpvar_1 = tmpvar_19;
					  mediump vec3 normalWorld_23;
					  normalWorld_23 = worldN_4;
					  mediump vec3 tmpvar_24;
					  tmpvar_24 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_25;
					  mediump vec4 tmpvar_26;
					  tmpvar_26.w = 1.0;
					  tmpvar_26.xyz = normalWorld_23;
					  mediump vec3 x_27;
					  x_27.x = dot (unity_SHAr, tmpvar_26);
					  x_27.y = dot (unity_SHAg, tmpvar_26);
					  x_27.z = dot (unity_SHAb, tmpvar_26);
					  ambient_25 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_27)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_24;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  lowp float diff_30;
					  mediump float tmpvar_31;
					  tmpvar_31 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_30 = tmpvar_31;
					  c_29.xyz = ((tmpvar_9 * tmpvar_24) * diff_30);
					  c_29.w = (tmpvar_12.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = (c_29.xyz + (tmpvar_9 * ambient_25));
					  c_5.w = c_28.w;
					  c_5.xyz = (c_28.xyz + tmpvar_11);
					  highp float tmpvar_32;
					  tmpvar_32 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_5.xyz, vec3(tmpvar_32));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  tmpvar_48.w = tmpvar_39.x;
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  tmpvar_49.w = tmpvar_39.y;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  tmpvar_50.w = tmpvar_39.z;
					  mediump vec3 normal_51;
					  normal_51 = worldNormal_3;
					  mediump vec3 x1_52;
					  mediump vec4 tmpvar_53;
					  tmpvar_53 = (normal_51.xyzz * normal_51.yzzx);
					  x1_52.x = dot (unity_SHBr, tmpvar_53);
					  x1_52.y = dot (unity_SHBg, tmpvar_53);
					  x1_52.z = dot (unity_SHBb, tmpvar_53);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_52 + (unity_SHC.xyz * (
					    (normal_51.x * normal_51.x)
					   - 
					    (normal_51.y * normal_51.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_7.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_12 = tmpvar_20;
					  tmpvar_13 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_3.x = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_3.y = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_3.z = tmpvar_23;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_24;
					  normalWorld_24 = worldN_3;
					  mediump vec3 ambient_25;
					  mediump vec4 tmpvar_26;
					  tmpvar_26.w = 1.0;
					  tmpvar_26.xyz = normalWorld_24;
					  mediump vec3 x_27;
					  x_27.x = dot (unity_SHAr, tmpvar_26);
					  x_27.y = dot (unity_SHAg, tmpvar_26);
					  x_27.z = dot (unity_SHAb, tmpvar_26);
					  ambient_25 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_27)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_28;
					  viewDir_28 = worldViewDir_5;
					  lowp vec4 c_29;
					  lowp vec4 c_30;
					  highp float nh_31;
					  lowp float diff_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_32 = tmpvar_33;
					  mediump float tmpvar_34;
					  tmpvar_34 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_28)
					  )));
					  nh_31 = tmpvar_34;
					  mediump float y_35;
					  y_35 = (_Shininess * 128.0);
					  highp float tmpvar_36;
					  tmpvar_36 = (pow (nh_31, y_35) * tmpvar_14.w);
					  c_30.xyz = (((tmpvar_11 * tmpvar_1) * diff_32) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_36));
					  c_30.w = (tmpvar_14.w * _Color.w);
					  c_29.w = c_30.w;
					  c_29.xyz = (c_30.xyz + (tmpvar_11 * ambient_25));
					  c_4.xyz = (c_29.xyz + tmpvar_13);
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  mediump vec3 normal_53;
					  normal_53 = worldNormal_3;
					  mediump vec3 x1_54;
					  mediump vec4 tmpvar_55;
					  tmpvar_55 = (normal_53.xyzz * normal_53.yzzx);
					  x1_54.x = dot (unity_SHBr, tmpvar_55);
					  x1_54.y = dot (unity_SHBg, tmpvar_55);
					  x1_54.z = dot (unity_SHBb, tmpvar_55);
					  highp vec4 o_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_58;
					  tmpvar_58.x = tmpvar_57.x;
					  tmpvar_58.y = (tmpvar_57.y * _ProjectionParams.x);
					  o_56.xy = (tmpvar_58 + tmpvar_57.w);
					  o_56.zw = tmpvar_4.zw;
					  tmpvar_5 = o_56;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_54 + (unity_SHC.xyz * (
					    (normal_53.x * normal_53.x)
					   - 
					    (normal_53.y * normal_53.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9.x = xlv_TEXCOORD1.w;
					  tmpvar_9.y = xlv_TEXCOORD2.w;
					  tmpvar_9.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - tmpvar_9));
					  worldViewDir_6 = tmpvar_11;
					  tmpvar_8 = xlv_COLOR0;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec3 tmpvar_14;
					  lowp vec4 tmpvar_15;
					  highp vec2 P_16;
					  highp vec2 tmpvar_17;
					  tmpvar_17 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_16 = (xlv_TEXCOORD0 + tmpvar_17);
					  tmpvar_15 = texture2D (_MainTex, P_16);
					  tmpvar_12 = (tmpvar_15.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_8.xyz);
					  highp vec2 P_18;
					  P_18 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_17);
					  lowp vec3 normal_19;
					  normal_19.xy = ((texture2D (_V_CW_NormalMap, P_18).wy * 2.0) - 1.0);
					  normal_19.z = sqrt((1.0 - clamp (
					    dot (normal_19.xy, normal_19.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_20;
					  tmpvar_20.xy = (normal_19.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_20.z = normal_19.z;
					  mediump vec3 tmpvar_21;
					  tmpvar_21 = normalize(tmpvar_20);
					  tmpvar_13 = tmpvar_21;
					  tmpvar_14 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_22;
					  tmpvar_22 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD1.xyz, tmpvar_13);
					  worldN_4.x = tmpvar_23;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (xlv_TEXCOORD2.xyz, tmpvar_13);
					  worldN_4.y = tmpvar_24;
					  highp float tmpvar_25;
					  tmpvar_25 = dot (xlv_TEXCOORD3.xyz, tmpvar_13);
					  worldN_4.z = tmpvar_25;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_22;
					  mediump vec3 normalWorld_26;
					  normalWorld_26 = worldN_4;
					  mediump vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_28;
					  mediump vec4 tmpvar_29;
					  tmpvar_29.w = 1.0;
					  tmpvar_29.xyz = normalWorld_26;
					  mediump vec3 x_30;
					  x_30.x = dot (unity_SHAr, tmpvar_29);
					  x_30.y = dot (unity_SHAg, tmpvar_29);
					  x_30.z = dot (unity_SHAb, tmpvar_29);
					  ambient_28 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_27;
					  mediump vec3 viewDir_31;
					  viewDir_31 = worldViewDir_6;
					  lowp vec4 c_32;
					  lowp vec4 c_33;
					  highp float nh_34;
					  lowp float diff_35;
					  mediump float tmpvar_36;
					  tmpvar_36 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_35 = tmpvar_36;
					  mediump float tmpvar_37;
					  tmpvar_37 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_31)
					  )));
					  nh_34 = tmpvar_37;
					  mediump float y_38;
					  y_38 = (_Shininess * 128.0);
					  highp float tmpvar_39;
					  tmpvar_39 = (pow (nh_34, y_38) * tmpvar_15.w);
					  c_33.xyz = (((tmpvar_12 * tmpvar_27) * diff_35) + ((tmpvar_27 * _SpecColor.xyz) * tmpvar_39));
					  c_33.w = (tmpvar_15.w * _Color.w);
					  c_32.w = c_33.w;
					  c_32.xyz = (c_33.xyz + (tmpvar_12 * ambient_28));
					  c_5.xyz = (c_32.xyz + tmpvar_14);
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  highp vec3 lightColor0_52;
					  lightColor0_52 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_53;
					  lightColor1_53 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_54;
					  lightColor2_54 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_55;
					  lightColor3_55 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_56;
					  lightAttenSq_56 = unity_4LightAtten0;
					  highp vec3 normal_57;
					  normal_57 = worldNormal_3;
					  highp vec3 col_58;
					  highp vec4 ndotl_59;
					  highp vec4 lengthSq_60;
					  highp vec4 tmpvar_61;
					  tmpvar_61 = (unity_4LightPosX0 - tmpvar_40.x);
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (unity_4LightPosY0 - tmpvar_40.y);
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosZ0 - tmpvar_40.z);
					  lengthSq_60 = (tmpvar_61 * tmpvar_61);
					  lengthSq_60 = (lengthSq_60 + (tmpvar_62 * tmpvar_62));
					  lengthSq_60 = (lengthSq_60 + (tmpvar_63 * tmpvar_63));
					  ndotl_59 = (tmpvar_61 * normal_57.x);
					  ndotl_59 = (ndotl_59 + (tmpvar_62 * normal_57.y));
					  ndotl_59 = (ndotl_59 + (tmpvar_63 * normal_57.z));
					  highp vec4 tmpvar_64;
					  tmpvar_64 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_59 * inversesqrt(lengthSq_60)));
					  ndotl_59 = tmpvar_64;
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (tmpvar_64 * (1.0/((1.0 + 
					    (lengthSq_60 * lightAttenSq_56)
					  ))));
					  col_58 = (lightColor0_52 * tmpvar_65.x);
					  col_58 = (col_58 + (lightColor1_53 * tmpvar_65.y));
					  col_58 = (col_58 + (lightColor2_54 * tmpvar_65.z));
					  col_58 = (col_58 + (lightColor3_55 * tmpvar_65.w));
					  tmpvar_4 = col_58;
					  mediump vec3 normal_66;
					  normal_66 = worldNormal_3;
					  mediump vec3 ambient_67;
					  ambient_67 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_68;
					  mediump vec4 tmpvar_69;
					  tmpvar_69 = (normal_66.xyzz * normal_66.yzzx);
					  x1_68.x = dot (unity_SHBr, tmpvar_69);
					  x1_68.y = dot (unity_SHBg, tmpvar_69);
					  x1_68.z = dot (unity_SHBb, tmpvar_69);
					  ambient_67 = (ambient_67 + (x1_68 + (unity_SHC.xyz * 
					    ((normal_66.x * normal_66.x) - (normal_66.y * normal_66.y))
					  )));
					  tmpvar_4 = ambient_67;
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_67;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_7.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_12 = tmpvar_20;
					  tmpvar_13 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_3.x = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_3.y = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_3.z = tmpvar_23;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_24;
					  normalWorld_24 = worldN_3;
					  mediump vec3 ambient_25;
					  mediump vec4 tmpvar_26;
					  tmpvar_26.w = 1.0;
					  tmpvar_26.xyz = normalWorld_24;
					  mediump vec3 x_27;
					  x_27.x = dot (unity_SHAr, tmpvar_26);
					  x_27.y = dot (unity_SHAg, tmpvar_26);
					  x_27.z = dot (unity_SHAb, tmpvar_26);
					  ambient_25 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_27)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_28;
					  viewDir_28 = worldViewDir_5;
					  lowp vec4 c_29;
					  lowp vec4 c_30;
					  highp float nh_31;
					  lowp float diff_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_32 = tmpvar_33;
					  mediump float tmpvar_34;
					  tmpvar_34 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_28)
					  )));
					  nh_31 = tmpvar_34;
					  mediump float y_35;
					  y_35 = (_Shininess * 128.0);
					  highp float tmpvar_36;
					  tmpvar_36 = (pow (nh_31, y_35) * tmpvar_14.w);
					  c_30.xyz = (((tmpvar_11 * tmpvar_1) * diff_32) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_36));
					  c_30.w = (tmpvar_14.w * _Color.w);
					  c_29.w = c_30.w;
					  c_29.xyz = (c_30.xyz + (tmpvar_11 * ambient_25));
					  c_4.xyz = (c_29.xyz + tmpvar_13);
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_3 = tmpvar_46;
					  highp mat3 tmpvar_47;
					  tmpvar_47[0] = _Object2World[0].xyz;
					  tmpvar_47[1] = _Object2World[1].xyz;
					  tmpvar_47[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = normalize((tmpvar_47 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_48;
					  highp float tmpvar_49;
					  tmpvar_49 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_49;
					  lowp vec3 tmpvar_50;
					  tmpvar_50 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.x;
					  tmpvar_51.y = tmpvar_50.x;
					  tmpvar_51.z = worldNormal_3.x;
					  tmpvar_51.w = tmpvar_42.x;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.y;
					  tmpvar_52.y = tmpvar_50.y;
					  tmpvar_52.z = worldNormal_3.y;
					  tmpvar_52.w = tmpvar_42.y;
					  highp vec4 tmpvar_53;
					  tmpvar_53.x = worldTangent_2.z;
					  tmpvar_53.y = tmpvar_50.z;
					  tmpvar_53.z = worldNormal_3.z;
					  tmpvar_53.w = tmpvar_42.z;
					  highp vec3 lightColor0_54;
					  lightColor0_54 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_55;
					  lightColor1_55 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_56;
					  lightColor2_56 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_57;
					  lightColor3_57 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_58;
					  lightAttenSq_58 = unity_4LightAtten0;
					  highp vec3 normal_59;
					  normal_59 = worldNormal_3;
					  highp vec3 col_60;
					  highp vec4 ndotl_61;
					  highp vec4 lengthSq_62;
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_62 = (tmpvar_63 * tmpvar_63);
					  lengthSq_62 = (lengthSq_62 + (tmpvar_64 * tmpvar_64));
					  lengthSq_62 = (lengthSq_62 + (tmpvar_65 * tmpvar_65));
					  ndotl_61 = (tmpvar_63 * normal_59.x);
					  ndotl_61 = (ndotl_61 + (tmpvar_64 * normal_59.y));
					  ndotl_61 = (ndotl_61 + (tmpvar_65 * normal_59.z));
					  highp vec4 tmpvar_66;
					  tmpvar_66 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_61 * inversesqrt(lengthSq_62)));
					  ndotl_61 = tmpvar_66;
					  highp vec4 tmpvar_67;
					  tmpvar_67 = (tmpvar_66 * (1.0/((1.0 + 
					    (lengthSq_62 * lightAttenSq_58)
					  ))));
					  col_60 = (lightColor0_54 * tmpvar_67.x);
					  col_60 = (col_60 + (lightColor1_55 * tmpvar_67.y));
					  col_60 = (col_60 + (lightColor2_56 * tmpvar_67.z));
					  col_60 = (col_60 + (lightColor3_57 * tmpvar_67.w));
					  tmpvar_5 = col_60;
					  mediump vec3 normal_68;
					  normal_68 = worldNormal_3;
					  mediump vec3 ambient_69;
					  ambient_69 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_70;
					  mediump vec4 tmpvar_71;
					  tmpvar_71 = (normal_68.xyzz * normal_68.yzzx);
					  x1_70.x = dot (unity_SHBr, tmpvar_71);
					  x1_70.y = dot (unity_SHBg, tmpvar_71);
					  x1_70.z = dot (unity_SHBb, tmpvar_71);
					  ambient_69 = (ambient_69 + (x1_70 + (unity_SHC.xyz * 
					    ((normal_68.x * normal_68.x) - (normal_68.y * normal_68.y))
					  )));
					  tmpvar_5 = ambient_69;
					  highp vec4 o_72;
					  highp vec4 tmpvar_73;
					  tmpvar_73 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_74;
					  tmpvar_74.x = tmpvar_73.x;
					  tmpvar_74.y = (tmpvar_73.y * _ProjectionParams.x);
					  o_72.xy = (tmpvar_74 + tmpvar_73.w);
					  o_72.zw = tmpvar_4.zw;
					  tmpvar_6 = o_72;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_51;
					  xlv_TEXCOORD2 = tmpvar_52;
					  xlv_TEXCOORD3 = tmpvar_53;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_69;
					  xlv_TEXCOORD5 = tmpvar_6;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9.x = xlv_TEXCOORD1.w;
					  tmpvar_9.y = xlv_TEXCOORD2.w;
					  tmpvar_9.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - tmpvar_9));
					  worldViewDir_6 = tmpvar_11;
					  tmpvar_8 = xlv_COLOR0;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec3 tmpvar_14;
					  lowp vec4 tmpvar_15;
					  highp vec2 P_16;
					  highp vec2 tmpvar_17;
					  tmpvar_17 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_16 = (xlv_TEXCOORD0 + tmpvar_17);
					  tmpvar_15 = texture2D (_MainTex, P_16);
					  tmpvar_12 = (tmpvar_15.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_8.xyz);
					  highp vec2 P_18;
					  P_18 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_17);
					  lowp vec3 normal_19;
					  normal_19.xy = ((texture2D (_V_CW_NormalMap, P_18).wy * 2.0) - 1.0);
					  normal_19.z = sqrt((1.0 - clamp (
					    dot (normal_19.xy, normal_19.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_20;
					  tmpvar_20.xy = (normal_19.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_20.z = normal_19.z;
					  mediump vec3 tmpvar_21;
					  tmpvar_21 = normalize(tmpvar_20);
					  tmpvar_13 = tmpvar_21;
					  tmpvar_14 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_22;
					  tmpvar_22 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD1.xyz, tmpvar_13);
					  worldN_4.x = tmpvar_23;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (xlv_TEXCOORD2.xyz, tmpvar_13);
					  worldN_4.y = tmpvar_24;
					  highp float tmpvar_25;
					  tmpvar_25 = dot (xlv_TEXCOORD3.xyz, tmpvar_13);
					  worldN_4.z = tmpvar_25;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_22;
					  mediump vec3 normalWorld_26;
					  normalWorld_26 = worldN_4;
					  mediump vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_28;
					  mediump vec4 tmpvar_29;
					  tmpvar_29.w = 1.0;
					  tmpvar_29.xyz = normalWorld_26;
					  mediump vec3 x_30;
					  x_30.x = dot (unity_SHAr, tmpvar_29);
					  x_30.y = dot (unity_SHAg, tmpvar_29);
					  x_30.z = dot (unity_SHAb, tmpvar_29);
					  ambient_28 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_27;
					  mediump vec3 viewDir_31;
					  viewDir_31 = worldViewDir_6;
					  lowp vec4 c_32;
					  lowp vec4 c_33;
					  highp float nh_34;
					  lowp float diff_35;
					  mediump float tmpvar_36;
					  tmpvar_36 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_35 = tmpvar_36;
					  mediump float tmpvar_37;
					  tmpvar_37 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_31)
					  )));
					  nh_34 = tmpvar_37;
					  mediump float y_38;
					  y_38 = (_Shininess * 128.0);
					  highp float tmpvar_39;
					  tmpvar_39 = (pow (nh_34, y_38) * tmpvar_15.w);
					  c_33.xyz = (((tmpvar_12 * tmpvar_27) * diff_35) + ((tmpvar_27 * _SpecColor.xyz) * tmpvar_39));
					  c_33.w = (tmpvar_15.w * _Color.w);
					  c_32.w = c_33.w;
					  c_32.xyz = (c_33.xyz + (tmpvar_12 * ambient_28));
					  c_5.xyz = (c_32.xyz + tmpvar_14);
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_7.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_12 = tmpvar_20;
					  tmpvar_13 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_3.x = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_3.y = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_3.z = tmpvar_23;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_24;
					  normalWorld_24 = worldN_3;
					  mediump vec3 ambient_25;
					  mediump vec4 tmpvar_26;
					  tmpvar_26.w = 1.0;
					  tmpvar_26.xyz = normalWorld_24;
					  mediump vec3 x_27;
					  x_27.x = dot (unity_SHAr, tmpvar_26);
					  x_27.y = dot (unity_SHAg, tmpvar_26);
					  x_27.z = dot (unity_SHAb, tmpvar_26);
					  ambient_25 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_27)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_28;
					  viewDir_28 = worldViewDir_5;
					  lowp vec4 c_29;
					  lowp vec4 c_30;
					  highp float nh_31;
					  lowp float diff_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_32 = tmpvar_33;
					  mediump float tmpvar_34;
					  tmpvar_34 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_28)
					  )));
					  nh_31 = tmpvar_34;
					  mediump float y_35;
					  y_35 = (_Shininess * 128.0);
					  highp float tmpvar_36;
					  tmpvar_36 = (pow (nh_31, y_35) * tmpvar_14.w);
					  c_30.xyz = (((tmpvar_11 * tmpvar_1) * diff_32) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_36));
					  c_30.w = (tmpvar_14.w * _Color.w);
					  c_29.w = c_30.w;
					  c_29.xyz = (c_30.xyz + (tmpvar_11 * ambient_25));
					  c_4.w = c_29.w;
					  c_4.xyz = (c_29.xyz + tmpvar_13);
					  highp float tmpvar_37;
					  tmpvar_37 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_37));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  mediump vec3 normal_53;
					  normal_53 = worldNormal_3;
					  mediump vec3 x1_54;
					  mediump vec4 tmpvar_55;
					  tmpvar_55 = (normal_53.xyzz * normal_53.yzzx);
					  x1_54.x = dot (unity_SHBr, tmpvar_55);
					  x1_54.y = dot (unity_SHBg, tmpvar_55);
					  x1_54.z = dot (unity_SHBb, tmpvar_55);
					  highp vec4 o_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_58;
					  tmpvar_58.x = tmpvar_57.x;
					  tmpvar_58.y = (tmpvar_57.y * _ProjectionParams.x);
					  o_56.xy = (tmpvar_58 + tmpvar_57.w);
					  o_56.zw = tmpvar_4.zw;
					  tmpvar_5 = o_56;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = (x1_54 + (unity_SHC.xyz * (
					    (normal_53.x * normal_53.x)
					   - 
					    (normal_53.y * normal_53.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9.x = xlv_TEXCOORD1.w;
					  tmpvar_9.y = xlv_TEXCOORD2.w;
					  tmpvar_9.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - tmpvar_9));
					  worldViewDir_6 = tmpvar_11;
					  tmpvar_8 = xlv_COLOR0;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec3 tmpvar_14;
					  lowp vec4 tmpvar_15;
					  highp vec2 P_16;
					  highp vec2 tmpvar_17;
					  tmpvar_17 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_16 = (xlv_TEXCOORD0 + tmpvar_17);
					  tmpvar_15 = texture2D (_MainTex, P_16);
					  tmpvar_12 = (tmpvar_15.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_8.xyz);
					  highp vec2 P_18;
					  P_18 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_17);
					  lowp vec3 normal_19;
					  normal_19.xy = ((texture2D (_V_CW_NormalMap, P_18).wy * 2.0) - 1.0);
					  normal_19.z = sqrt((1.0 - clamp (
					    dot (normal_19.xy, normal_19.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_20;
					  tmpvar_20.xy = (normal_19.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_20.z = normal_19.z;
					  mediump vec3 tmpvar_21;
					  tmpvar_21 = normalize(tmpvar_20);
					  tmpvar_13 = tmpvar_21;
					  tmpvar_14 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_22;
					  tmpvar_22 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD1.xyz, tmpvar_13);
					  worldN_4.x = tmpvar_23;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (xlv_TEXCOORD2.xyz, tmpvar_13);
					  worldN_4.y = tmpvar_24;
					  highp float tmpvar_25;
					  tmpvar_25 = dot (xlv_TEXCOORD3.xyz, tmpvar_13);
					  worldN_4.z = tmpvar_25;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_22;
					  mediump vec3 normalWorld_26;
					  normalWorld_26 = worldN_4;
					  mediump vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_28;
					  mediump vec4 tmpvar_29;
					  tmpvar_29.w = 1.0;
					  tmpvar_29.xyz = normalWorld_26;
					  mediump vec3 x_30;
					  x_30.x = dot (unity_SHAr, tmpvar_29);
					  x_30.y = dot (unity_SHAg, tmpvar_29);
					  x_30.z = dot (unity_SHAb, tmpvar_29);
					  ambient_28 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_27;
					  mediump vec3 viewDir_31;
					  viewDir_31 = worldViewDir_6;
					  lowp vec4 c_32;
					  lowp vec4 c_33;
					  highp float nh_34;
					  lowp float diff_35;
					  mediump float tmpvar_36;
					  tmpvar_36 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_35 = tmpvar_36;
					  mediump float tmpvar_37;
					  tmpvar_37 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_31)
					  )));
					  nh_34 = tmpvar_37;
					  mediump float y_38;
					  y_38 = (_Shininess * 128.0);
					  highp float tmpvar_39;
					  tmpvar_39 = (pow (nh_34, y_38) * tmpvar_15.w);
					  c_33.xyz = (((tmpvar_12 * tmpvar_27) * diff_35) + ((tmpvar_27 * _SpecColor.xyz) * tmpvar_39));
					  c_33.w = (tmpvar_15.w * _Color.w);
					  c_32.w = c_33.w;
					  c_32.xyz = (c_33.xyz + (tmpvar_12 * ambient_28));
					  c_5.w = c_32.w;
					  c_5.xyz = (c_32.xyz + tmpvar_14);
					  highp float tmpvar_40;
					  tmpvar_40 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_5.xyz, vec3(tmpvar_40));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_3 = tmpvar_45;
					  highp mat3 tmpvar_46;
					  tmpvar_46[0] = _Object2World[0].xyz;
					  tmpvar_46[1] = _Object2World[1].xyz;
					  tmpvar_46[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize((tmpvar_46 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_47;
					  highp float tmpvar_48;
					  tmpvar_48 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_48;
					  lowp vec3 tmpvar_49;
					  tmpvar_49 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.x;
					  tmpvar_50.y = tmpvar_49.x;
					  tmpvar_50.z = worldNormal_3.x;
					  tmpvar_50.w = tmpvar_41.x;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.y;
					  tmpvar_51.y = tmpvar_49.y;
					  tmpvar_51.z = worldNormal_3.y;
					  tmpvar_51.w = tmpvar_41.y;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.z;
					  tmpvar_52.y = tmpvar_49.z;
					  tmpvar_52.z = worldNormal_3.z;
					  tmpvar_52.w = tmpvar_41.z;
					  highp vec3 lightColor0_53;
					  lightColor0_53 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_54;
					  lightColor1_54 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_55;
					  lightColor2_55 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_56;
					  lightColor3_56 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_57;
					  lightAttenSq_57 = unity_4LightAtten0;
					  highp vec3 normal_58;
					  normal_58 = worldNormal_3;
					  highp vec3 col_59;
					  highp vec4 ndotl_60;
					  highp vec4 lengthSq_61;
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_61 = (tmpvar_62 * tmpvar_62);
					  lengthSq_61 = (lengthSq_61 + (tmpvar_63 * tmpvar_63));
					  lengthSq_61 = (lengthSq_61 + (tmpvar_64 * tmpvar_64));
					  ndotl_60 = (tmpvar_62 * normal_58.x);
					  ndotl_60 = (ndotl_60 + (tmpvar_63 * normal_58.y));
					  ndotl_60 = (ndotl_60 + (tmpvar_64 * normal_58.z));
					  highp vec4 tmpvar_65;
					  tmpvar_65 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_60 * inversesqrt(lengthSq_61)));
					  ndotl_60 = tmpvar_65;
					  highp vec4 tmpvar_66;
					  tmpvar_66 = (tmpvar_65 * (1.0/((1.0 + 
					    (lengthSq_61 * lightAttenSq_57)
					  ))));
					  col_59 = (lightColor0_53 * tmpvar_66.x);
					  col_59 = (col_59 + (lightColor1_54 * tmpvar_66.y));
					  col_59 = (col_59 + (lightColor2_55 * tmpvar_66.z));
					  col_59 = (col_59 + (lightColor3_56 * tmpvar_66.w));
					  tmpvar_5 = col_59;
					  mediump vec3 normal_67;
					  normal_67 = worldNormal_3;
					  mediump vec3 ambient_68;
					  ambient_68 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_69;
					  mediump vec4 tmpvar_70;
					  tmpvar_70 = (normal_67.xyzz * normal_67.yzzx);
					  x1_69.x = dot (unity_SHBr, tmpvar_70);
					  x1_69.y = dot (unity_SHBg, tmpvar_70);
					  x1_69.z = dot (unity_SHBb, tmpvar_70);
					  ambient_68 = (ambient_68 + (x1_69 + (unity_SHC.xyz * 
					    ((normal_67.x * normal_67.x) - (normal_67.y * normal_67.y))
					  )));
					  tmpvar_5 = ambient_68;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_50;
					  xlv_TEXCOORD2 = tmpvar_51;
					  xlv_TEXCOORD3 = tmpvar_52;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_68;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = xlv_TEXCOORD1.w;
					  tmpvar_8.y = xlv_TEXCOORD2.w;
					  tmpvar_8.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - tmpvar_8));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_11 * tmpvar_7.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_12 = tmpvar_20;
					  tmpvar_13 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_21;
					  tmpvar_21 = dot (xlv_TEXCOORD1.xyz, tmpvar_12);
					  worldN_3.x = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (xlv_TEXCOORD2.xyz, tmpvar_12);
					  worldN_3.y = tmpvar_22;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD3.xyz, tmpvar_12);
					  worldN_3.z = tmpvar_23;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_24;
					  normalWorld_24 = worldN_3;
					  mediump vec3 ambient_25;
					  mediump vec4 tmpvar_26;
					  tmpvar_26.w = 1.0;
					  tmpvar_26.xyz = normalWorld_24;
					  mediump vec3 x_27;
					  x_27.x = dot (unity_SHAr, tmpvar_26);
					  x_27.y = dot (unity_SHAg, tmpvar_26);
					  x_27.z = dot (unity_SHAb, tmpvar_26);
					  ambient_25 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_27)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  mediump vec3 viewDir_28;
					  viewDir_28 = worldViewDir_5;
					  lowp vec4 c_29;
					  lowp vec4 c_30;
					  highp float nh_31;
					  lowp float diff_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_32 = tmpvar_33;
					  mediump float tmpvar_34;
					  tmpvar_34 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_28)
					  )));
					  nh_31 = tmpvar_34;
					  mediump float y_35;
					  y_35 = (_Shininess * 128.0);
					  highp float tmpvar_36;
					  tmpvar_36 = (pow (nh_31, y_35) * tmpvar_14.w);
					  c_30.xyz = (((tmpvar_11 * tmpvar_1) * diff_32) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_36));
					  c_30.w = (tmpvar_14.w * _Color.w);
					  c_29.w = c_30.w;
					  c_29.xyz = (c_30.xyz + (tmpvar_11 * ambient_25));
					  c_4.w = c_29.w;
					  c_4.xyz = (c_29.xyz + tmpvar_13);
					  highp float tmpvar_37;
					  tmpvar_37 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_37));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "VERTEXLIGHT_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_3 = tmpvar_46;
					  highp mat3 tmpvar_47;
					  tmpvar_47[0] = _Object2World[0].xyz;
					  tmpvar_47[1] = _Object2World[1].xyz;
					  tmpvar_47[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = normalize((tmpvar_47 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_48;
					  highp float tmpvar_49;
					  tmpvar_49 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_49;
					  lowp vec3 tmpvar_50;
					  tmpvar_50 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.x;
					  tmpvar_51.y = tmpvar_50.x;
					  tmpvar_51.z = worldNormal_3.x;
					  tmpvar_51.w = tmpvar_42.x;
					  highp vec4 tmpvar_52;
					  tmpvar_52.x = worldTangent_2.y;
					  tmpvar_52.y = tmpvar_50.y;
					  tmpvar_52.z = worldNormal_3.y;
					  tmpvar_52.w = tmpvar_42.y;
					  highp vec4 tmpvar_53;
					  tmpvar_53.x = worldTangent_2.z;
					  tmpvar_53.y = tmpvar_50.z;
					  tmpvar_53.z = worldNormal_3.z;
					  tmpvar_53.w = tmpvar_42.z;
					  highp vec3 lightColor0_54;
					  lightColor0_54 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_55;
					  lightColor1_55 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_56;
					  lightColor2_56 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_57;
					  lightColor3_57 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_58;
					  lightAttenSq_58 = unity_4LightAtten0;
					  highp vec3 normal_59;
					  normal_59 = worldNormal_3;
					  highp vec3 col_60;
					  highp vec4 ndotl_61;
					  highp vec4 lengthSq_62;
					  highp vec4 tmpvar_63;
					  tmpvar_63 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_64;
					  tmpvar_64 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_65;
					  tmpvar_65 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_62 = (tmpvar_63 * tmpvar_63);
					  lengthSq_62 = (lengthSq_62 + (tmpvar_64 * tmpvar_64));
					  lengthSq_62 = (lengthSq_62 + (tmpvar_65 * tmpvar_65));
					  ndotl_61 = (tmpvar_63 * normal_59.x);
					  ndotl_61 = (ndotl_61 + (tmpvar_64 * normal_59.y));
					  ndotl_61 = (ndotl_61 + (tmpvar_65 * normal_59.z));
					  highp vec4 tmpvar_66;
					  tmpvar_66 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_61 * inversesqrt(lengthSq_62)));
					  ndotl_61 = tmpvar_66;
					  highp vec4 tmpvar_67;
					  tmpvar_67 = (tmpvar_66 * (1.0/((1.0 + 
					    (lengthSq_62 * lightAttenSq_58)
					  ))));
					  col_60 = (lightColor0_54 * tmpvar_67.x);
					  col_60 = (col_60 + (lightColor1_55 * tmpvar_67.y));
					  col_60 = (col_60 + (lightColor2_56 * tmpvar_67.z));
					  col_60 = (col_60 + (lightColor3_57 * tmpvar_67.w));
					  tmpvar_5 = col_60;
					  mediump vec3 normal_68;
					  normal_68 = worldNormal_3;
					  mediump vec3 ambient_69;
					  ambient_69 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_70;
					  mediump vec4 tmpvar_71;
					  tmpvar_71 = (normal_68.xyzz * normal_68.yzzx);
					  x1_70.x = dot (unity_SHBr, tmpvar_71);
					  x1_70.y = dot (unity_SHBg, tmpvar_71);
					  x1_70.z = dot (unity_SHBb, tmpvar_71);
					  ambient_69 = (ambient_69 + (x1_70 + (unity_SHC.xyz * 
					    ((normal_68.x * normal_68.x) - (normal_68.y * normal_68.y))
					  )));
					  tmpvar_5 = ambient_69;
					  highp vec4 o_72;
					  highp vec4 tmpvar_73;
					  tmpvar_73 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_74;
					  tmpvar_74.x = tmpvar_73.x;
					  tmpvar_74.y = (tmpvar_73.y * _ProjectionParams.x);
					  o_72.xy = (tmpvar_74 + tmpvar_73.w);
					  o_72.zw = tmpvar_4.zw;
					  tmpvar_6 = o_72;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_51;
					  xlv_TEXCOORD2 = tmpvar_52;
					  xlv_TEXCOORD3 = tmpvar_53;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ambient_69;
					  xlv_TEXCOORD5 = tmpvar_6;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9.x = xlv_TEXCOORD1.w;
					  tmpvar_9.y = xlv_TEXCOORD2.w;
					  tmpvar_9.z = xlv_TEXCOORD3.w;
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - tmpvar_9));
					  worldViewDir_6 = tmpvar_11;
					  tmpvar_8 = xlv_COLOR0;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec3 tmpvar_14;
					  lowp vec4 tmpvar_15;
					  highp vec2 P_16;
					  highp vec2 tmpvar_17;
					  tmpvar_17 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_16 = (xlv_TEXCOORD0 + tmpvar_17);
					  tmpvar_15 = texture2D (_MainTex, P_16);
					  tmpvar_12 = (tmpvar_15.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_8.xyz);
					  highp vec2 P_18;
					  P_18 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_17);
					  lowp vec3 normal_19;
					  normal_19.xy = ((texture2D (_V_CW_NormalMap, P_18).wy * 2.0) - 1.0);
					  normal_19.z = sqrt((1.0 - clamp (
					    dot (normal_19.xy, normal_19.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_20;
					  tmpvar_20.xy = (normal_19.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_20.z = normal_19.z;
					  mediump vec3 tmpvar_21;
					  tmpvar_21 = normalize(tmpvar_20);
					  tmpvar_13 = tmpvar_21;
					  tmpvar_14 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp float tmpvar_22;
					  tmpvar_22 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  highp float tmpvar_23;
					  tmpvar_23 = dot (xlv_TEXCOORD1.xyz, tmpvar_13);
					  worldN_4.x = tmpvar_23;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (xlv_TEXCOORD2.xyz, tmpvar_13);
					  worldN_4.y = tmpvar_24;
					  highp float tmpvar_25;
					  tmpvar_25 = dot (xlv_TEXCOORD3.xyz, tmpvar_13);
					  worldN_4.z = tmpvar_25;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_22;
					  mediump vec3 normalWorld_26;
					  normalWorld_26 = worldN_4;
					  mediump vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_28;
					  mediump vec4 tmpvar_29;
					  tmpvar_29.w = 1.0;
					  tmpvar_29.xyz = normalWorld_26;
					  mediump vec3 x_30;
					  x_30.x = dot (unity_SHAr, tmpvar_29);
					  x_30.y = dot (unity_SHAg, tmpvar_29);
					  x_30.z = dot (unity_SHAb, tmpvar_29);
					  ambient_28 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_30)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_27;
					  mediump vec3 viewDir_31;
					  viewDir_31 = worldViewDir_6;
					  lowp vec4 c_32;
					  lowp vec4 c_33;
					  highp float nh_34;
					  lowp float diff_35;
					  mediump float tmpvar_36;
					  tmpvar_36 = max (0.0, dot (worldN_4, tmpvar_3));
					  diff_35 = tmpvar_36;
					  mediump float tmpvar_37;
					  tmpvar_37 = max (0.0, dot (worldN_4, normalize(
					    (tmpvar_3 + viewDir_31)
					  )));
					  nh_34 = tmpvar_37;
					  mediump float y_38;
					  y_38 = (_Shininess * 128.0);
					  highp float tmpvar_39;
					  tmpvar_39 = (pow (nh_34, y_38) * tmpvar_15.w);
					  c_33.xyz = (((tmpvar_12 * tmpvar_27) * diff_35) + ((tmpvar_27 * _SpecColor.xyz) * tmpvar_39));
					  c_33.w = (tmpvar_15.w * _Color.w);
					  c_32.w = c_33.w;
					  c_32.xyz = (c_33.xyz + (tmpvar_12 * ambient_28));
					  c_5.w = c_32.w;
					  c_5.xyz = (c_32.xyz + tmpvar_14);
					  highp float tmpvar_40;
					  tmpvar_40 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_5.xyz, vec3(tmpvar_40));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_43;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 tmpvar_44;
					  highp vec3 I_45;
					  I_45 = (tmpvar_39 - _WorldSpaceCameraPos);
					  tmpvar_44 = (I_45 - (2.0 * (
					    dot (worldNormal_1, I_45)
					   * worldNormal_1)));
					  tmpvar_2 = tmpvar_44;
					  mediump vec3 normal_46;
					  normal_46 = worldNormal_1;
					  mediump vec3 x1_47;
					  mediump vec4 tmpvar_48;
					  tmpvar_48 = (normal_46.xyzz * normal_46.yzzx);
					  x1_47.x = dot (unity_SHBr, tmpvar_48);
					  x1_47.y = dot (unity_SHBg, tmpvar_48);
					  x1_47.z = dot (unity_SHBb, tmpvar_48);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = tmpvar_3;
					  xlv_TEXCOORD3 = tmpvar_39;
					  xlv_TEXCOORD4 = (x1_47 + (unity_SHC.xyz * (
					    (normal_46.x * normal_46.x)
					   - 
					    (normal_46.y * normal_46.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  highp vec3 tmpvar_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD3));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_8 = xlv_TEXCOORD1;
					  tmpvar_7 = worldViewDir_5;
					  tmpvar_4 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  P_15 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_13 = (tmpvar_14.w * _Color.w);
					  mediump vec3 inVec_16;
					  inVec_16 = tmpvar_7;
					  tmpvar_12 = ((textureCube (_V_CW_Cube, tmpvar_8).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_13 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_17;
					  tmpvar_17 = pow ((1.0 - max (0.0, 
					    dot ((inVec_16 * inversesqrt(max (0.001, 
					      dot (inVec_16, inVec_16)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_12 = tmpvar_18;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_11, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_11 = tmpvar_19;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_20;
					  normalWorld_20 = tmpvar_4;
					  mediump vec3 ambient_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = normalWorld_20;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_22);
					  x_23.y = dot (unity_SHAg, tmpvar_22);
					  x_23.z = dot (unity_SHAb, tmpvar_22);
					  ambient_21 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_23)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_26 = tmpvar_27;
					  c_25.xyz = ((tmpvar_11 * tmpvar_1) * diff_26);
					  c_25.w = tmpvar_13;
					  c_24.w = c_25.w;
					  c_24.xyz = (c_25.xyz + (tmpvar_11 * ambient_21));
					  c_3.xyz = (c_24.xyz + tmpvar_12);
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_4 = worldNormal_1;
					  highp vec3 tmpvar_46;
					  highp vec3 I_47;
					  I_47 = (tmpvar_41 - _WorldSpaceCameraPos);
					  tmpvar_46 = (I_47 - (2.0 * (
					    dot (worldNormal_1, I_47)
					   * worldNormal_1)));
					  tmpvar_3 = tmpvar_46;
					  mediump vec3 normal_48;
					  normal_48 = worldNormal_1;
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_48.xyzz * normal_48.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  highp vec4 o_51;
					  highp vec4 tmpvar_52;
					  tmpvar_52 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_53;
					  tmpvar_53.x = tmpvar_52.x;
					  tmpvar_53.y = (tmpvar_52.y * _ProjectionParams.x);
					  o_51.xy = (tmpvar_53 + tmpvar_52.w);
					  o_51.zw = tmpvar_2.zw;
					  tmpvar_5 = o_51;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_4;
					  xlv_TEXCOORD3 = tmpvar_41;
					  xlv_TEXCOORD4 = (x1_49 + (unity_SHC.xyz * (
					    (normal_48.x * normal_48.x)
					   - 
					    (normal_48.y * normal_48.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  highp vec3 tmpvar_9;
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD3));
					  worldViewDir_6 = tmpvar_11;
					  tmpvar_9 = xlv_TEXCOORD1;
					  tmpvar_8 = worldViewDir_6;
					  tmpvar_5 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp float tmpvar_14;
					  lowp vec4 tmpvar_15;
					  highp vec2 P_16;
					  P_16 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_15 = texture2D (_MainTex, P_16);
					  tmpvar_12 = (tmpvar_15.xyz * _Color.xyz);
					  tmpvar_14 = (tmpvar_15.w * _Color.w);
					  mediump vec3 inVec_17;
					  inVec_17 = tmpvar_8;
					  tmpvar_13 = ((textureCube (_V_CW_Cube, tmpvar_9).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_14 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_18;
					  tmpvar_18 = pow ((1.0 - max (0.0, 
					    dot ((inVec_17 * inversesqrt(max (0.001, 
					      dot (inVec_17, inVec_17)
					    ))), tmpvar_5)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_13, _V_CW_Rim_Color.xyz, vec3(tmpvar_18));
					  tmpvar_13 = tmpvar_19;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_18));
					  tmpvar_12 = tmpvar_20;
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_21;
					  mediump vec3 normalWorld_22;
					  normalWorld_22 = tmpvar_5;
					  mediump vec3 tmpvar_23;
					  tmpvar_23 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_22;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_23;
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  lowp float diff_29;
					  mediump float tmpvar_30;
					  tmpvar_30 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_29 = tmpvar_30;
					  c_28.xyz = ((tmpvar_12 * tmpvar_23) * diff_29);
					  c_28.w = tmpvar_14;
					  c_27.w = c_28.w;
					  c_27.xyz = (c_28.xyz + (tmpvar_12 * ambient_24));
					  c_4.xyz = (c_27.xyz + tmpvar_13);
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_44;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 tmpvar_45;
					  highp vec3 I_46;
					  I_46 = (tmpvar_40 - _WorldSpaceCameraPos);
					  tmpvar_45 = (I_46 - (2.0 * (
					    dot (worldNormal_1, I_46)
					   * worldNormal_1)));
					  tmpvar_2 = tmpvar_45;
					  highp vec3 lightColor0_47;
					  lightColor0_47 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_48;
					  lightColor1_48 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_49;
					  lightColor2_49 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_50;
					  lightColor3_50 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_51;
					  lightAttenSq_51 = unity_4LightAtten0;
					  highp vec3 normal_52;
					  normal_52 = worldNormal_1;
					  highp vec3 col_53;
					  highp vec4 ndotl_54;
					  highp vec4 lengthSq_55;
					  highp vec4 tmpvar_56;
					  tmpvar_56 = (unity_4LightPosX0 - tmpvar_40.x);
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosY0 - tmpvar_40.y);
					  highp vec4 tmpvar_58;
					  tmpvar_58 = (unity_4LightPosZ0 - tmpvar_40.z);
					  lengthSq_55 = (tmpvar_56 * tmpvar_56);
					  lengthSq_55 = (lengthSq_55 + (tmpvar_57 * tmpvar_57));
					  lengthSq_55 = (lengthSq_55 + (tmpvar_58 * tmpvar_58));
					  ndotl_54 = (tmpvar_56 * normal_52.x);
					  ndotl_54 = (ndotl_54 + (tmpvar_57 * normal_52.y));
					  ndotl_54 = (ndotl_54 + (tmpvar_58 * normal_52.z));
					  highp vec4 tmpvar_59;
					  tmpvar_59 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_54 * inversesqrt(lengthSq_55)));
					  ndotl_54 = tmpvar_59;
					  highp vec4 tmpvar_60;
					  tmpvar_60 = (tmpvar_59 * (1.0/((1.0 + 
					    (lengthSq_55 * lightAttenSq_51)
					  ))));
					  col_53 = (lightColor0_47 * tmpvar_60.x);
					  col_53 = (col_53 + (lightColor1_48 * tmpvar_60.y));
					  col_53 = (col_53 + (lightColor2_49 * tmpvar_60.z));
					  col_53 = (col_53 + (lightColor3_50 * tmpvar_60.w));
					  tmpvar_4 = col_53;
					  mediump vec3 normal_61;
					  normal_61 = worldNormal_1;
					  mediump vec3 ambient_62;
					  ambient_62 = (tmpvar_4 * ((tmpvar_4 * 
					    ((tmpvar_4 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_63;
					  mediump vec4 tmpvar_64;
					  tmpvar_64 = (normal_61.xyzz * normal_61.yzzx);
					  x1_63.x = dot (unity_SHBr, tmpvar_64);
					  x1_63.y = dot (unity_SHBg, tmpvar_64);
					  x1_63.z = dot (unity_SHBb, tmpvar_64);
					  ambient_62 = (ambient_62 + (x1_63 + (unity_SHC.xyz * 
					    ((normal_61.x * normal_61.x) - (normal_61.y * normal_61.y))
					  )));
					  tmpvar_4 = ambient_62;
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = tmpvar_3;
					  xlv_TEXCOORD3 = tmpvar_40;
					  xlv_TEXCOORD4 = ambient_62;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  highp vec3 tmpvar_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD3));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_8 = xlv_TEXCOORD1;
					  tmpvar_7 = worldViewDir_5;
					  tmpvar_4 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  P_15 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_13 = (tmpvar_14.w * _Color.w);
					  mediump vec3 inVec_16;
					  inVec_16 = tmpvar_7;
					  tmpvar_12 = ((textureCube (_V_CW_Cube, tmpvar_8).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_13 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_17;
					  tmpvar_17 = pow ((1.0 - max (0.0, 
					    dot ((inVec_16 * inversesqrt(max (0.001, 
					      dot (inVec_16, inVec_16)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_12 = tmpvar_18;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_11, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_11 = tmpvar_19;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_20;
					  normalWorld_20 = tmpvar_4;
					  mediump vec3 ambient_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = normalWorld_20;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_22);
					  x_23.y = dot (unity_SHAg, tmpvar_22);
					  x_23.z = dot (unity_SHAb, tmpvar_22);
					  ambient_21 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_23)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_26 = tmpvar_27;
					  c_25.xyz = ((tmpvar_11 * tmpvar_1) * diff_26);
					  c_25.w = tmpvar_13;
					  c_24.w = c_25.w;
					  c_24.xyz = (c_25.xyz + (tmpvar_11 * ambient_21));
					  c_3.xyz = (c_24.xyz + tmpvar_12);
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_1 = tmpvar_46;
					  tmpvar_4 = worldNormal_1;
					  highp vec3 tmpvar_47;
					  highp vec3 I_48;
					  I_48 = (tmpvar_42 - _WorldSpaceCameraPos);
					  tmpvar_47 = (I_48 - (2.0 * (
					    dot (worldNormal_1, I_48)
					   * worldNormal_1)));
					  tmpvar_3 = tmpvar_47;
					  highp vec3 lightColor0_49;
					  lightColor0_49 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_50;
					  lightColor1_50 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_51;
					  lightColor2_51 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_52;
					  lightColor3_52 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_53;
					  lightAttenSq_53 = unity_4LightAtten0;
					  highp vec3 normal_54;
					  normal_54 = worldNormal_1;
					  highp vec3 col_55;
					  highp vec4 ndotl_56;
					  highp vec4 lengthSq_57;
					  highp vec4 tmpvar_58;
					  tmpvar_58 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_60;
					  tmpvar_60 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_57 = (tmpvar_58 * tmpvar_58);
					  lengthSq_57 = (lengthSq_57 + (tmpvar_59 * tmpvar_59));
					  lengthSq_57 = (lengthSq_57 + (tmpvar_60 * tmpvar_60));
					  ndotl_56 = (tmpvar_58 * normal_54.x);
					  ndotl_56 = (ndotl_56 + (tmpvar_59 * normal_54.y));
					  ndotl_56 = (ndotl_56 + (tmpvar_60 * normal_54.z));
					  highp vec4 tmpvar_61;
					  tmpvar_61 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_56 * inversesqrt(lengthSq_57)));
					  ndotl_56 = tmpvar_61;
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (tmpvar_61 * (1.0/((1.0 + 
					    (lengthSq_57 * lightAttenSq_53)
					  ))));
					  col_55 = (lightColor0_49 * tmpvar_62.x);
					  col_55 = (col_55 + (lightColor1_50 * tmpvar_62.y));
					  col_55 = (col_55 + (lightColor2_51 * tmpvar_62.z));
					  col_55 = (col_55 + (lightColor3_52 * tmpvar_62.w));
					  tmpvar_5 = col_55;
					  mediump vec3 normal_63;
					  normal_63 = worldNormal_1;
					  mediump vec3 ambient_64;
					  ambient_64 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_65;
					  mediump vec4 tmpvar_66;
					  tmpvar_66 = (normal_63.xyzz * normal_63.yzzx);
					  x1_65.x = dot (unity_SHBr, tmpvar_66);
					  x1_65.y = dot (unity_SHBg, tmpvar_66);
					  x1_65.z = dot (unity_SHBb, tmpvar_66);
					  ambient_64 = (ambient_64 + (x1_65 + (unity_SHC.xyz * 
					    ((normal_63.x * normal_63.x) - (normal_63.y * normal_63.y))
					  )));
					  tmpvar_5 = ambient_64;
					  highp vec4 o_67;
					  highp vec4 tmpvar_68;
					  tmpvar_68 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_69;
					  tmpvar_69.x = tmpvar_68.x;
					  tmpvar_69.y = (tmpvar_68.y * _ProjectionParams.x);
					  o_67.xy = (tmpvar_69 + tmpvar_68.w);
					  o_67.zw = tmpvar_2.zw;
					  tmpvar_6 = o_67;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_4;
					  xlv_TEXCOORD3 = tmpvar_42;
					  xlv_TEXCOORD4 = ambient_64;
					  xlv_TEXCOORD5 = tmpvar_6;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  highp vec3 tmpvar_9;
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD3));
					  worldViewDir_6 = tmpvar_11;
					  tmpvar_9 = xlv_TEXCOORD1;
					  tmpvar_8 = worldViewDir_6;
					  tmpvar_5 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp float tmpvar_14;
					  lowp vec4 tmpvar_15;
					  highp vec2 P_16;
					  P_16 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_15 = texture2D (_MainTex, P_16);
					  tmpvar_12 = (tmpvar_15.xyz * _Color.xyz);
					  tmpvar_14 = (tmpvar_15.w * _Color.w);
					  mediump vec3 inVec_17;
					  inVec_17 = tmpvar_8;
					  tmpvar_13 = ((textureCube (_V_CW_Cube, tmpvar_9).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_14 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_18;
					  tmpvar_18 = pow ((1.0 - max (0.0, 
					    dot ((inVec_17 * inversesqrt(max (0.001, 
					      dot (inVec_17, inVec_17)
					    ))), tmpvar_5)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_13, _V_CW_Rim_Color.xyz, vec3(tmpvar_18));
					  tmpvar_13 = tmpvar_19;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_18));
					  tmpvar_12 = tmpvar_20;
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_21;
					  mediump vec3 normalWorld_22;
					  normalWorld_22 = tmpvar_5;
					  mediump vec3 tmpvar_23;
					  tmpvar_23 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_22;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_23;
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  lowp float diff_29;
					  mediump float tmpvar_30;
					  tmpvar_30 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_29 = tmpvar_30;
					  c_28.xyz = ((tmpvar_12 * tmpvar_23) * diff_29);
					  c_28.w = tmpvar_14;
					  c_27.w = c_28.w;
					  c_27.xyz = (c_28.xyz + (tmpvar_12 * ambient_24));
					  c_4.xyz = (c_27.xyz + tmpvar_13);
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_23);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_1 = tmpvar_44;
					  tmpvar_4 = worldNormal_1;
					  highp vec3 tmpvar_45;
					  highp vec3 I_46;
					  I_46 = (tmpvar_40 - _WorldSpaceCameraPos);
					  tmpvar_45 = (I_46 - (2.0 * (
					    dot (worldNormal_1, I_46)
					   * worldNormal_1)));
					  tmpvar_3 = tmpvar_45;
					  mediump vec3 normal_47;
					  normal_47 = worldNormal_1;
					  mediump vec3 x1_48;
					  mediump vec4 tmpvar_49;
					  tmpvar_49 = (normal_47.xyzz * normal_47.yzzx);
					  x1_48.x = dot (unity_SHBr, tmpvar_49);
					  x1_48.y = dot (unity_SHBg, tmpvar_49);
					  x1_48.z = dot (unity_SHBb, tmpvar_49);
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_4;
					  xlv_TEXCOORD3 = tmpvar_40;
					  xlv_TEXCOORD4 = (x1_48 + (unity_SHC.xyz * (
					    (normal_47.x * normal_47.x)
					   - 
					    (normal_47.y * normal_47.y)
					  )));
					  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  highp vec3 tmpvar_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD3));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_8 = xlv_TEXCOORD1;
					  tmpvar_7 = worldViewDir_5;
					  tmpvar_4 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  P_15 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_13 = (tmpvar_14.w * _Color.w);
					  mediump vec3 inVec_16;
					  inVec_16 = tmpvar_7;
					  tmpvar_12 = ((textureCube (_V_CW_Cube, tmpvar_8).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_13 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_17;
					  tmpvar_17 = pow ((1.0 - max (0.0, 
					    dot ((inVec_16 * inversesqrt(max (0.001, 
					      dot (inVec_16, inVec_16)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_12 = tmpvar_18;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_11, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_11 = tmpvar_19;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_20;
					  normalWorld_20 = tmpvar_4;
					  mediump vec3 ambient_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = normalWorld_20;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_22);
					  x_23.y = dot (unity_SHAg, tmpvar_22);
					  x_23.z = dot (unity_SHAb, tmpvar_22);
					  ambient_21 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_23)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_26 = tmpvar_27;
					  c_25.xyz = ((tmpvar_11 * tmpvar_1) * diff_26);
					  c_25.w = tmpvar_13;
					  c_24.w = c_25.w;
					  c_24.xyz = (c_25.xyz + (tmpvar_11 * ambient_21));
					  c_3.w = c_24.w;
					  c_3.xyz = (c_24.xyz + tmpvar_12);
					  highp float tmpvar_28;
					  tmpvar_28 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_28));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_4 = worldNormal_1;
					  highp vec3 tmpvar_46;
					  highp vec3 I_47;
					  I_47 = (tmpvar_41 - _WorldSpaceCameraPos);
					  tmpvar_46 = (I_47 - (2.0 * (
					    dot (worldNormal_1, I_47)
					   * worldNormal_1)));
					  tmpvar_3 = tmpvar_46;
					  mediump vec3 normal_48;
					  normal_48 = worldNormal_1;
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_48.xyzz * normal_48.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  highp vec4 o_51;
					  highp vec4 tmpvar_52;
					  tmpvar_52 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_53;
					  tmpvar_53.x = tmpvar_52.x;
					  tmpvar_53.y = (tmpvar_52.y * _ProjectionParams.x);
					  o_51.xy = (tmpvar_53 + tmpvar_52.w);
					  o_51.zw = tmpvar_2.zw;
					  tmpvar_5 = o_51;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_4;
					  xlv_TEXCOORD3 = tmpvar_41;
					  xlv_TEXCOORD4 = (x1_49 + (unity_SHC.xyz * (
					    (normal_48.x * normal_48.x)
					   - 
					    (normal_48.y * normal_48.y)
					  )));
					  xlv_TEXCOORD5 = tmpvar_5;
					  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  highp vec3 tmpvar_9;
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD3));
					  worldViewDir_6 = tmpvar_11;
					  tmpvar_9 = xlv_TEXCOORD1;
					  tmpvar_8 = worldViewDir_6;
					  tmpvar_5 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp float tmpvar_14;
					  lowp vec4 tmpvar_15;
					  highp vec2 P_16;
					  P_16 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_15 = texture2D (_MainTex, P_16);
					  tmpvar_12 = (tmpvar_15.xyz * _Color.xyz);
					  tmpvar_14 = (tmpvar_15.w * _Color.w);
					  mediump vec3 inVec_17;
					  inVec_17 = tmpvar_8;
					  tmpvar_13 = ((textureCube (_V_CW_Cube, tmpvar_9).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_14 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_18;
					  tmpvar_18 = pow ((1.0 - max (0.0, 
					    dot ((inVec_17 * inversesqrt(max (0.001, 
					      dot (inVec_17, inVec_17)
					    ))), tmpvar_5)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_13, _V_CW_Rim_Color.xyz, vec3(tmpvar_18));
					  tmpvar_13 = tmpvar_19;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_18));
					  tmpvar_12 = tmpvar_20;
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_21;
					  mediump vec3 normalWorld_22;
					  normalWorld_22 = tmpvar_5;
					  mediump vec3 tmpvar_23;
					  tmpvar_23 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_22;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_23;
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  lowp float diff_29;
					  mediump float tmpvar_30;
					  tmpvar_30 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_29 = tmpvar_30;
					  c_28.xyz = ((tmpvar_12 * tmpvar_23) * diff_29);
					  c_28.w = tmpvar_14;
					  c_27.w = c_28.w;
					  c_27.xyz = (c_28.xyz + (tmpvar_12 * ambient_24));
					  c_4.w = c_27.w;
					  c_4.xyz = (c_27.xyz + tmpvar_13);
					  highp float tmpvar_31;
					  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_31));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_24);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_4 = worldNormal_1;
					  highp vec3 tmpvar_46;
					  highp vec3 I_47;
					  I_47 = (tmpvar_41 - _WorldSpaceCameraPos);
					  tmpvar_46 = (I_47 - (2.0 * (
					    dot (worldNormal_1, I_47)
					   * worldNormal_1)));
					  tmpvar_3 = tmpvar_46;
					  highp vec3 lightColor0_48;
					  lightColor0_48 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_49;
					  lightColor1_49 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_50;
					  lightColor2_50 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_51;
					  lightColor3_51 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_52;
					  lightAttenSq_52 = unity_4LightAtten0;
					  highp vec3 normal_53;
					  normal_53 = worldNormal_1;
					  highp vec3 col_54;
					  highp vec4 ndotl_55;
					  highp vec4 lengthSq_56;
					  highp vec4 tmpvar_57;
					  tmpvar_57 = (unity_4LightPosX0 - tmpvar_41.x);
					  highp vec4 tmpvar_58;
					  tmpvar_58 = (unity_4LightPosY0 - tmpvar_41.y);
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (unity_4LightPosZ0 - tmpvar_41.z);
					  lengthSq_56 = (tmpvar_57 * tmpvar_57);
					  lengthSq_56 = (lengthSq_56 + (tmpvar_58 * tmpvar_58));
					  lengthSq_56 = (lengthSq_56 + (tmpvar_59 * tmpvar_59));
					  ndotl_55 = (tmpvar_57 * normal_53.x);
					  ndotl_55 = (ndotl_55 + (tmpvar_58 * normal_53.y));
					  ndotl_55 = (ndotl_55 + (tmpvar_59 * normal_53.z));
					  highp vec4 tmpvar_60;
					  tmpvar_60 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_55 * inversesqrt(lengthSq_56)));
					  ndotl_55 = tmpvar_60;
					  highp vec4 tmpvar_61;
					  tmpvar_61 = (tmpvar_60 * (1.0/((1.0 + 
					    (lengthSq_56 * lightAttenSq_52)
					  ))));
					  col_54 = (lightColor0_48 * tmpvar_61.x);
					  col_54 = (col_54 + (lightColor1_49 * tmpvar_61.y));
					  col_54 = (col_54 + (lightColor2_50 * tmpvar_61.z));
					  col_54 = (col_54 + (lightColor3_51 * tmpvar_61.w));
					  tmpvar_5 = col_54;
					  mediump vec3 normal_62;
					  normal_62 = worldNormal_1;
					  mediump vec3 ambient_63;
					  ambient_63 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_64;
					  mediump vec4 tmpvar_65;
					  tmpvar_65 = (normal_62.xyzz * normal_62.yzzx);
					  x1_64.x = dot (unity_SHBr, tmpvar_65);
					  x1_64.y = dot (unity_SHBg, tmpvar_65);
					  x1_64.z = dot (unity_SHBb, tmpvar_65);
					  ambient_63 = (ambient_63 + (x1_64 + (unity_SHC.xyz * 
					    ((normal_62.x * normal_62.x) - (normal_62.y * normal_62.y))
					  )));
					  tmpvar_5 = ambient_63;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_4;
					  xlv_TEXCOORD3 = tmpvar_41;
					  xlv_TEXCOORD4 = ambient_63;
					  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  highp vec3 tmpvar_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD3));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_8 = xlv_TEXCOORD1;
					  tmpvar_7 = worldViewDir_5;
					  tmpvar_4 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  P_15 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_13 = (tmpvar_14.w * _Color.w);
					  mediump vec3 inVec_16;
					  inVec_16 = tmpvar_7;
					  tmpvar_12 = ((textureCube (_V_CW_Cube, tmpvar_8).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_13 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_17;
					  tmpvar_17 = pow ((1.0 - max (0.0, 
					    dot ((inVec_16 * inversesqrt(max (0.001, 
					      dot (inVec_16, inVec_16)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_12 = tmpvar_18;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_11, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_11 = tmpvar_19;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 normalWorld_20;
					  normalWorld_20 = tmpvar_4;
					  mediump vec3 ambient_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = normalWorld_20;
					  mediump vec3 x_23;
					  x_23.x = dot (unity_SHAr, tmpvar_22);
					  x_23.y = dot (unity_SHAg, tmpvar_22);
					  x_23.z = dot (unity_SHAb, tmpvar_22);
					  ambient_21 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_23)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_26 = tmpvar_27;
					  c_25.xyz = ((tmpvar_11 * tmpvar_1) * diff_26);
					  c_25.w = tmpvar_13;
					  c_24.w = c_25.w;
					  c_24.xyz = (c_25.xyz + (tmpvar_11 * ambient_21));
					  c_3.w = c_24.w;
					  c_3.xyz = (c_24.xyz + tmpvar_12);
					  highp float tmpvar_28;
					  tmpvar_28 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_3.xyz = mix (unity_FogColor.xyz, c_3.xyz, vec3(tmpvar_28));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _ProjectionParams;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  mediump vec4 tmpvar_6;
					  highp vec4 v_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[0].x;
					  v_7.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[1].x;
					  v_7.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[2].x;
					  v_7.z = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[3].x;
					  v_7.w = tmpvar_11;
					  highp vec4 v_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[0].y;
					  v_12.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[1].y;
					  v_12.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[2].y;
					  v_12.z = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[3].y;
					  v_12.w = tmpvar_16;
					  highp vec4 v_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[0].z;
					  v_17.x = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[1].z;
					  v_17.y = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[2].z;
					  v_17.z = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[3].z;
					  v_17.w = tmpvar_21;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize(((
					    (v_7.xyz * _glesNormal.x)
					   + 
					    (v_12.xyz * _glesNormal.y)
					  ) + (v_17.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_23;
					  tmpvar_23[0] = _Object2World[0].xyz;
					  tmpvar_23[1] = _Object2World[1].xyz;
					  tmpvar_23[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_24;
					  tmpvar_24 = normalize((tmpvar_23 * _glesTANGENT.xyz));
					  highp vec4 vertex_25;
					  vertex_25.w = _glesVertex.w;
					  highp vec2 xzOff_26;
					  highp vec3 v2_27;
					  highp vec3 v1_28;
					  highp vec3 v0_29;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_30 + tmpvar_24);
					  v1_28.xz = tmpvar_31.xz;
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_30 - ((tmpvar_22.yzx * tmpvar_24.zxy) - (tmpvar_22.zxy * tmpvar_24.yzx)));
					  v2_27.xz = tmpvar_32.xz;
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_30.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  highp vec3 tmpvar_34;
					  tmpvar_34.xz = vec2(0.0, 0.0);
					  tmpvar_34.y = (((_V_CW_Bend.x * xzOff_26.x) + (_V_CW_Bend.z * xzOff_26.y)) * 0.001);
					  v0_29 = (tmpvar_30 + tmpvar_34);
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v1_28.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_26 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_26 = (xzOff_26 * xzOff_26);
					  v2_27.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_26.x)
					   + 
					    (_V_CW_Bend.z * xzOff_26.y)
					  ) * 0.001));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  vertex_25.xyz = (_glesVertex.xyz + (tmpvar_37 * tmpvar_34));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  highp vec3 a_39;
					  a_39 = (v2_27 - v0_29);
					  highp vec3 b_40;
					  b_40 = (v1_28 - v0_29);
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize((tmpvar_38 * normalize(
					    ((a_39.yzx * b_40.zxy) - (a_39.zxy * b_40.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_25);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = (_Object2World * vertex_25).xyz;
					  highp vec4 v_43;
					  v_43.x = tmpvar_8;
					  v_43.y = tmpvar_9;
					  v_43.z = tmpvar_10;
					  v_43.w = tmpvar_11;
					  highp vec4 v_44;
					  v_44.x = tmpvar_13;
					  v_44.y = tmpvar_14;
					  v_44.z = tmpvar_15;
					  v_44.w = tmpvar_16;
					  highp vec4 v_45;
					  v_45.x = tmpvar_18;
					  v_45.y = tmpvar_19;
					  v_45.z = tmpvar_20;
					  v_45.w = tmpvar_21;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize(((
					    (v_43.xyz * tmpvar_41.x)
					   + 
					    (v_44.xyz * tmpvar_41.y)
					  ) + (v_45.xyz * tmpvar_41.z)));
					  worldNormal_1 = tmpvar_46;
					  tmpvar_4 = worldNormal_1;
					  highp vec3 tmpvar_47;
					  highp vec3 I_48;
					  I_48 = (tmpvar_42 - _WorldSpaceCameraPos);
					  tmpvar_47 = (I_48 - (2.0 * (
					    dot (worldNormal_1, I_48)
					   * worldNormal_1)));
					  tmpvar_3 = tmpvar_47;
					  highp vec3 lightColor0_49;
					  lightColor0_49 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_50;
					  lightColor1_50 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_51;
					  lightColor2_51 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_52;
					  lightColor3_52 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_53;
					  lightAttenSq_53 = unity_4LightAtten0;
					  highp vec3 normal_54;
					  normal_54 = worldNormal_1;
					  highp vec3 col_55;
					  highp vec4 ndotl_56;
					  highp vec4 lengthSq_57;
					  highp vec4 tmpvar_58;
					  tmpvar_58 = (unity_4LightPosX0 - tmpvar_42.x);
					  highp vec4 tmpvar_59;
					  tmpvar_59 = (unity_4LightPosY0 - tmpvar_42.y);
					  highp vec4 tmpvar_60;
					  tmpvar_60 = (unity_4LightPosZ0 - tmpvar_42.z);
					  lengthSq_57 = (tmpvar_58 * tmpvar_58);
					  lengthSq_57 = (lengthSq_57 + (tmpvar_59 * tmpvar_59));
					  lengthSq_57 = (lengthSq_57 + (tmpvar_60 * tmpvar_60));
					  ndotl_56 = (tmpvar_58 * normal_54.x);
					  ndotl_56 = (ndotl_56 + (tmpvar_59 * normal_54.y));
					  ndotl_56 = (ndotl_56 + (tmpvar_60 * normal_54.z));
					  highp vec4 tmpvar_61;
					  tmpvar_61 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_56 * inversesqrt(lengthSq_57)));
					  ndotl_56 = tmpvar_61;
					  highp vec4 tmpvar_62;
					  tmpvar_62 = (tmpvar_61 * (1.0/((1.0 + 
					    (lengthSq_57 * lightAttenSq_53)
					  ))));
					  col_55 = (lightColor0_49 * tmpvar_62.x);
					  col_55 = (col_55 + (lightColor1_50 * tmpvar_62.y));
					  col_55 = (col_55 + (lightColor2_51 * tmpvar_62.z));
					  col_55 = (col_55 + (lightColor3_52 * tmpvar_62.w));
					  tmpvar_5 = col_55;
					  mediump vec3 normal_63;
					  normal_63 = worldNormal_1;
					  mediump vec3 ambient_64;
					  ambient_64 = (tmpvar_5 * ((tmpvar_5 * 
					    ((tmpvar_5 * 0.305306) + 0.6821711)
					  ) + 0.01252288));
					  mediump vec3 x1_65;
					  mediump vec4 tmpvar_66;
					  tmpvar_66 = (normal_63.xyzz * normal_63.yzzx);
					  x1_65.x = dot (unity_SHBr, tmpvar_66);
					  x1_65.y = dot (unity_SHBg, tmpvar_66);
					  x1_65.z = dot (unity_SHBb, tmpvar_66);
					  ambient_64 = (ambient_64 + (x1_65 + (unity_SHC.xyz * 
					    ((normal_63.x * normal_63.x) - (normal_63.y * normal_63.y))
					  )));
					  tmpvar_5 = ambient_64;
					  highp vec4 o_67;
					  highp vec4 tmpvar_68;
					  tmpvar_68 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_69;
					  tmpvar_69.x = tmpvar_68.x;
					  tmpvar_69.y = (tmpvar_68.y * _ProjectionParams.x);
					  o_67.xy = (tmpvar_69 + tmpvar_68.w);
					  o_67.zw = tmpvar_2.zw;
					  tmpvar_6 = o_67;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_4;
					  xlv_TEXCOORD3 = tmpvar_42;
					  xlv_TEXCOORD4 = ambient_64;
					  xlv_TEXCOORD5 = tmpvar_6;
					  xlv_TEXCOORD6 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec4 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 worldViewDir_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  highp vec3 tmpvar_9;
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD3));
					  worldViewDir_6 = tmpvar_11;
					  tmpvar_9 = xlv_TEXCOORD1;
					  tmpvar_8 = worldViewDir_6;
					  tmpvar_5 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp float tmpvar_14;
					  lowp vec4 tmpvar_15;
					  highp vec2 P_16;
					  P_16 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_15 = texture2D (_MainTex, P_16);
					  tmpvar_12 = (tmpvar_15.xyz * _Color.xyz);
					  tmpvar_14 = (tmpvar_15.w * _Color.w);
					  mediump vec3 inVec_17;
					  inVec_17 = tmpvar_8;
					  tmpvar_13 = ((textureCube (_V_CW_Cube, tmpvar_9).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_14 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_18;
					  tmpvar_18 = pow ((1.0 - max (0.0, 
					    dot ((inVec_17 * inversesqrt(max (0.001, 
					      dot (inVec_17, inVec_17)
					    ))), tmpvar_5)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_13, _V_CW_Rim_Color.xyz, vec3(tmpvar_18));
					  tmpvar_13 = tmpvar_19;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_18));
					  tmpvar_12 = tmpvar_20;
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_7;
					  tmpvar_1 = tmpvar_21;
					  mediump vec3 normalWorld_22;
					  normalWorld_22 = tmpvar_5;
					  mediump vec3 tmpvar_23;
					  tmpvar_23 = (tmpvar_2 * tmpvar_1);
					  mediump vec3 ambient_24;
					  mediump vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = normalWorld_22;
					  mediump vec3 x_26;
					  x_26.x = dot (unity_SHAr, tmpvar_25);
					  x_26.y = dot (unity_SHAg, tmpvar_25);
					  x_26.z = dot (unity_SHAb, tmpvar_25);
					  ambient_24 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_26)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_23;
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  lowp float diff_29;
					  mediump float tmpvar_30;
					  tmpvar_30 = max (0.0, dot (tmpvar_5, tmpvar_3));
					  diff_29 = tmpvar_30;
					  c_28.xyz = ((tmpvar_12 * tmpvar_23) * diff_29);
					  c_28.w = tmpvar_14;
					  c_27.w = c_28.w;
					  c_27.xyz = (c_28.xyz + (tmpvar_12 * ambient_24));
					  c_4.w = c_27.w;
					  c_4.xyz = (c_27.xyz + tmpvar_13);
					  highp float tmpvar_31;
					  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_4.xyz, vec3(tmpvar_31));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
}
 }
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardAdd" "RenderType"="CurvedWorld_Opaque" "CurvedWorldTag"="Legacy Shader/Opaque/Diffuse" "CurvedWorldNoneRemoveableKeywords"="" "CurvedWorldAvailableOptions"="V_CW_REFLECTIVE;V_CW_VERTEX_COLOR;_EMISSION;V_CW_RIM;_NORMALMAP;V_CW_SPECULAR_HD;" }
  ZWrite Off
  Blend One One
  GpuProgramID 86441
Program "vp" {
SubProgram "gles " {
Keywords { "POINT" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_5 = tmpvar_6;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (_LightMatrix0 * tmpvar_9).xyz;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (tmpvar_10, tmpvar_10);
					  lowp float tmpvar_12;
					  tmpvar_12 = texture2D (_LightTexture0, vec2(tmpvar_11)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_12);
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7.xyz * _Color.xyz) * (tmpvar_1 * diff_15));
					  c_14.w = (tmpvar_7.w * _Color.w);
					  c_13.w = c_14.w;
					  c_13.xyz = c_14.xyz;
					  c_3.xyz = c_13.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_9;
					  lowp vec4 c_10;
					  lowp float diff_11;
					  mediump float tmpvar_12;
					  tmpvar_12 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_11 = tmpvar_12;
					  c_10.xyz = ((tmpvar_7.xyz * _Color.xyz) * (tmpvar_1 * diff_11));
					  c_10.w = (tmpvar_7.w * _Color.w);
					  c_9.w = c_10.w;
					  c_9.xyz = c_10.xyz;
					  c_3.xyz = c_9.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_7 = tmpvar_8;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11);
					  lightCoord_5 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  mediump vec2 P_14;
					  P_14 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_13 = texture2D (_LightTexture0, P_14);
					  highp vec3 LightCoord_15;
					  LightCoord_15 = lightCoord_5.xyz;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (LightCoord_15, LightCoord_15);
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_LightTextureB0, vec2(tmpvar_16));
					  mediump float tmpvar_18;
					  tmpvar_18 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_13.w) * tmpvar_17.w);
					  atten_4 = tmpvar_18;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  lowp vec4 c_19;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_9.xyz * _Color.xyz) * (tmpvar_1 * diff_21));
					  c_20.w = (tmpvar_9.w * _Color.w);
					  c_19.w = c_20.w;
					  c_19.xyz = c_20.xyz;
					  c_3.xyz = c_19.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_5 = tmpvar_6;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (_LightMatrix0 * tmpvar_9).xyz;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (tmpvar_10, tmpvar_10);
					  lowp float tmpvar_12;
					  tmpvar_12 = (texture2D (_LightTextureB0, vec2(tmpvar_11)).w * textureCube (_LightTexture0, tmpvar_10).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_12);
					  lowp vec4 c_13;
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_7.xyz * _Color.xyz) * (tmpvar_1 * diff_15));
					  c_14.w = (tmpvar_7.w * _Color.w);
					  c_13.w = c_14.w;
					  c_13.xyz = c_14.xyz;
					  c_3.xyz = c_13.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_10;
					  tmpvar_10 = (_LightMatrix0 * tmpvar_9).xy;
					  lowp float tmpvar_11;
					  tmpvar_11 = texture2D (_LightTexture0, tmpvar_10).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_11);
					  lowp vec4 c_12;
					  lowp vec4 c_13;
					  lowp float diff_14;
					  mediump float tmpvar_15;
					  tmpvar_15 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_14 = tmpvar_15;
					  c_13.xyz = ((tmpvar_7.xyz * _Color.xyz) * (tmpvar_1 * diff_14));
					  c_13.w = (tmpvar_7.w * _Color.w);
					  c_12.w = c_13.w;
					  c_12.xyz = c_13.xyz;
					  c_3.xyz = c_12.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_5 = tmpvar_6;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (_LightMatrix0 * tmpvar_9).xyz;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (tmpvar_10, tmpvar_10);
					  lowp float tmpvar_12;
					  tmpvar_12 = texture2D (_LightTexture0, vec2(tmpvar_11)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_12);
					  lowp vec4 c_13;
					  lowp float diff_14;
					  mediump float tmpvar_15;
					  tmpvar_15 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_14 = tmpvar_15;
					  c_13.xyz = ((tmpvar_7.xyz * _Color.xyz) * (tmpvar_1 * diff_14));
					  c_13.w = (tmpvar_7.w * _Color.w);
					  highp float tmpvar_16;
					  tmpvar_16 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_13.xyz * vec3(tmpvar_16));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_9;
					  lowp float diff_10;
					  mediump float tmpvar_11;
					  tmpvar_11 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_10 = tmpvar_11;
					  c_9.xyz = ((tmpvar_7.xyz * _Color.xyz) * (tmpvar_1 * diff_10));
					  c_9.w = (tmpvar_7.w * _Color.w);
					  highp float tmpvar_12;
					  tmpvar_12 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_9.xyz * vec3(tmpvar_12));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 lightDir_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_7 = tmpvar_8;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11);
					  lightCoord_5 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  mediump vec2 P_14;
					  P_14 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_13 = texture2D (_LightTexture0, P_14);
					  highp vec3 LightCoord_15;
					  LightCoord_15 = lightCoord_5.xyz;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (LightCoord_15, LightCoord_15);
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_LightTextureB0, vec2(tmpvar_16));
					  mediump float tmpvar_18;
					  tmpvar_18 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_13.w) * tmpvar_17.w);
					  atten_4 = tmpvar_18;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  lowp vec4 c_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_20 = tmpvar_21;
					  c_19.xyz = ((tmpvar_9.xyz * _Color.xyz) * (tmpvar_1 * diff_20));
					  c_19.w = (tmpvar_9.w * _Color.w);
					  highp float tmpvar_22;
					  tmpvar_22 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_19.xyz * vec3(tmpvar_22));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_5 = tmpvar_6;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (_LightMatrix0 * tmpvar_9).xyz;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (tmpvar_10, tmpvar_10);
					  lowp float tmpvar_12;
					  tmpvar_12 = (texture2D (_LightTextureB0, vec2(tmpvar_11)).w * textureCube (_LightTexture0, tmpvar_10).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_12);
					  lowp vec4 c_13;
					  lowp float diff_14;
					  mediump float tmpvar_15;
					  tmpvar_15 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_14 = tmpvar_15;
					  c_13.xyz = ((tmpvar_7.xyz * _Color.xyz) * (tmpvar_1 * diff_14));
					  c_13.w = (tmpvar_7.w * _Color.w);
					  highp float tmpvar_16;
					  tmpvar_16 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_13.xyz * vec3(tmpvar_16));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_6;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_10;
					  tmpvar_10 = (_LightMatrix0 * tmpvar_9).xy;
					  lowp float tmpvar_11;
					  tmpvar_11 = texture2D (_LightTexture0, tmpvar_10).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_11);
					  lowp vec4 c_12;
					  lowp float diff_13;
					  mediump float tmpvar_14;
					  tmpvar_14 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_13 = tmpvar_14;
					  c_12.xyz = ((tmpvar_7.xyz * _Color.xyz) * (tmpvar_1 * diff_13));
					  c_12.w = (tmpvar_7.w * _Color.w);
					  highp float tmpvar_15;
					  tmpvar_15 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_12.xyz * vec3(tmpvar_15));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_8;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xyz;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (tmpvar_12, tmpvar_12);
					  lowp float tmpvar_14;
					  tmpvar_14 = texture2D (_LightTexture0, vec2(tmpvar_13)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_14);
					  mediump vec3 viewDir_15;
					  viewDir_15 = worldViewDir_5;
					  lowp vec4 c_16;
					  lowp vec4 c_17;
					  highp float nh_18;
					  lowp float diff_19;
					  mediump float tmpvar_20;
					  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_19 = tmpvar_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_15)
					  )));
					  nh_18 = tmpvar_21;
					  mediump float y_22;
					  y_22 = (_Shininess * 128.0);
					  highp float tmpvar_23;
					  tmpvar_23 = (pow (nh_18, y_22) * tmpvar_9.w);
					  c_17.xyz = (((tmpvar_9.xyz * _Color.xyz) * (tmpvar_1 * diff_19)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_23));
					  c_17.w = (tmpvar_9.w * _Color.w);
					  c_16.w = c_17.w;
					  c_16.xyz = c_17.xyz;
					  c_3.xyz = c_16.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_8;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_11;
					  viewDir_11 = worldViewDir_5;
					  lowp vec4 c_12;
					  lowp vec4 c_13;
					  highp float nh_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_15 = tmpvar_16;
					  mediump float tmpvar_17;
					  tmpvar_17 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_11)
					  )));
					  nh_14 = tmpvar_17;
					  mediump float y_18;
					  y_18 = (_Shininess * 128.0);
					  highp float tmpvar_19;
					  tmpvar_19 = (pow (nh_14, y_18) * tmpvar_9.w);
					  c_13.xyz = (((tmpvar_9.xyz * _Color.xyz) * (tmpvar_1 * diff_15)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_19));
					  c_13.w = (tmpvar_9.w * _Color.w);
					  c_12.w = c_13.w;
					  c_12.xyz = c_13.xyz;
					  c_3.xyz = c_12.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_8 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_7 = tmpvar_10;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13);
					  lightCoord_5 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  mediump vec2 P_16;
					  P_16 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_15 = texture2D (_LightTexture0, P_16);
					  highp vec3 LightCoord_17;
					  LightCoord_17 = lightCoord_5.xyz;
					  highp float tmpvar_18;
					  tmpvar_18 = dot (LightCoord_17, LightCoord_17);
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_LightTextureB0, vec2(tmpvar_18));
					  mediump float tmpvar_20;
					  tmpvar_20 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_15.w) * tmpvar_19.w);
					  atten_4 = tmpvar_20;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_7;
					  lowp vec4 c_22;
					  lowp vec4 c_23;
					  highp float nh_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_25 = tmpvar_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (tmpvar_6, normalize(
					    (tmpvar_2 + viewDir_21)
					  )));
					  nh_24 = tmpvar_27;
					  mediump float y_28;
					  y_28 = (_Shininess * 128.0);
					  highp float tmpvar_29;
					  tmpvar_29 = (pow (nh_24, y_28) * tmpvar_11.w);
					  c_23.xyz = (((tmpvar_11.xyz * _Color.xyz) * (tmpvar_1 * diff_25)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_29));
					  c_23.w = (tmpvar_11.w * _Color.w);
					  c_22.w = c_23.w;
					  c_22.xyz = c_23.xyz;
					  c_3.xyz = c_22.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_8;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xyz;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (tmpvar_12, tmpvar_12);
					  lowp float tmpvar_14;
					  tmpvar_14 = (texture2D (_LightTextureB0, vec2(tmpvar_13)).w * textureCube (_LightTexture0, tmpvar_12).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_14);
					  mediump vec3 viewDir_15;
					  viewDir_15 = worldViewDir_5;
					  lowp vec4 c_16;
					  lowp vec4 c_17;
					  highp float nh_18;
					  lowp float diff_19;
					  mediump float tmpvar_20;
					  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_19 = tmpvar_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_15)
					  )));
					  nh_18 = tmpvar_21;
					  mediump float y_22;
					  y_22 = (_Shininess * 128.0);
					  highp float tmpvar_23;
					  tmpvar_23 = (pow (nh_18, y_22) * tmpvar_9.w);
					  c_17.xyz = (((tmpvar_9.xyz * _Color.xyz) * (tmpvar_1 * diff_19)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_23));
					  c_17.w = (tmpvar_9.w * _Color.w);
					  c_16.w = c_17.w;
					  c_16.xyz = c_17.xyz;
					  c_3.xyz = c_16.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_8;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xy;
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2D (_LightTexture0, tmpvar_12).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_13);
					  mediump vec3 viewDir_14;
					  viewDir_14 = worldViewDir_5;
					  lowp vec4 c_15;
					  lowp vec4 c_16;
					  highp float nh_17;
					  lowp float diff_18;
					  mediump float tmpvar_19;
					  tmpvar_19 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_18 = tmpvar_19;
					  mediump float tmpvar_20;
					  tmpvar_20 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_14)
					  )));
					  nh_17 = tmpvar_20;
					  mediump float y_21;
					  y_21 = (_Shininess * 128.0);
					  highp float tmpvar_22;
					  tmpvar_22 = (pow (nh_17, y_21) * tmpvar_9.w);
					  c_16.xyz = (((tmpvar_9.xyz * _Color.xyz) * (tmpvar_1 * diff_18)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_22));
					  c_16.w = (tmpvar_9.w * _Color.w);
					  c_15.w = c_16.w;
					  c_15.xyz = c_16.xyz;
					  c_3.xyz = c_15.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_8;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xyz;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (tmpvar_12, tmpvar_12);
					  lowp float tmpvar_14;
					  tmpvar_14 = texture2D (_LightTexture0, vec2(tmpvar_13)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_14);
					  mediump vec3 viewDir_15;
					  viewDir_15 = worldViewDir_5;
					  lowp vec4 c_16;
					  highp float nh_17;
					  lowp float diff_18;
					  mediump float tmpvar_19;
					  tmpvar_19 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_18 = tmpvar_19;
					  mediump float tmpvar_20;
					  tmpvar_20 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_15)
					  )));
					  nh_17 = tmpvar_20;
					  mediump float y_21;
					  y_21 = (_Shininess * 128.0);
					  highp float tmpvar_22;
					  tmpvar_22 = (pow (nh_17, y_21) * tmpvar_9.w);
					  c_16.xyz = (((tmpvar_9.xyz * _Color.xyz) * (tmpvar_1 * diff_18)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_22));
					  c_16.w = (tmpvar_9.w * _Color.w);
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_16.xyz * vec3(tmpvar_23));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_8;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_11;
					  viewDir_11 = worldViewDir_5;
					  lowp vec4 c_12;
					  highp float nh_13;
					  lowp float diff_14;
					  mediump float tmpvar_15;
					  tmpvar_15 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_14 = tmpvar_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_11)
					  )));
					  nh_13 = tmpvar_16;
					  mediump float y_17;
					  y_17 = (_Shininess * 128.0);
					  highp float tmpvar_18;
					  tmpvar_18 = (pow (nh_13, y_17) * tmpvar_9.w);
					  c_12.xyz = (((tmpvar_9.xyz * _Color.xyz) * (tmpvar_1 * diff_14)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_18));
					  c_12.w = (tmpvar_9.w * _Color.w);
					  highp float tmpvar_19;
					  tmpvar_19 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_12.xyz * vec3(tmpvar_19));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_8 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_7 = tmpvar_10;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13);
					  lightCoord_5 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  mediump vec2 P_16;
					  P_16 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_15 = texture2D (_LightTexture0, P_16);
					  highp vec3 LightCoord_17;
					  LightCoord_17 = lightCoord_5.xyz;
					  highp float tmpvar_18;
					  tmpvar_18 = dot (LightCoord_17, LightCoord_17);
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_LightTextureB0, vec2(tmpvar_18));
					  mediump float tmpvar_20;
					  tmpvar_20 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_15.w) * tmpvar_19.w);
					  atten_4 = tmpvar_20;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_7;
					  lowp vec4 c_22;
					  highp float nh_23;
					  lowp float diff_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_24 = tmpvar_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (tmpvar_6, normalize(
					    (tmpvar_2 + viewDir_21)
					  )));
					  nh_23 = tmpvar_26;
					  mediump float y_27;
					  y_27 = (_Shininess * 128.0);
					  highp float tmpvar_28;
					  tmpvar_28 = (pow (nh_23, y_27) * tmpvar_11.w);
					  c_22.xyz = (((tmpvar_11.xyz * _Color.xyz) * (tmpvar_1 * diff_24)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_28));
					  c_22.w = (tmpvar_11.w * _Color.w);
					  highp float tmpvar_29;
					  tmpvar_29 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_22.xyz * vec3(tmpvar_29));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_8;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xyz;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (tmpvar_12, tmpvar_12);
					  lowp float tmpvar_14;
					  tmpvar_14 = (texture2D (_LightTextureB0, vec2(tmpvar_13)).w * textureCube (_LightTexture0, tmpvar_12).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_14);
					  mediump vec3 viewDir_15;
					  viewDir_15 = worldViewDir_5;
					  lowp vec4 c_16;
					  highp float nh_17;
					  lowp float diff_18;
					  mediump float tmpvar_19;
					  tmpvar_19 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_18 = tmpvar_19;
					  mediump float tmpvar_20;
					  tmpvar_20 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_15)
					  )));
					  nh_17 = tmpvar_20;
					  mediump float y_21;
					  y_21 = (_Shininess * 128.0);
					  highp float tmpvar_22;
					  tmpvar_22 = (pow (nh_17, y_21) * tmpvar_9.w);
					  c_16.xyz = (((tmpvar_9.xyz * _Color.xyz) * (tmpvar_1 * diff_18)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_22));
					  c_16.w = (tmpvar_9.w * _Color.w);
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_16.xyz * vec3(tmpvar_23));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_8;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xy;
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2D (_LightTexture0, tmpvar_12).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_13);
					  mediump vec3 viewDir_14;
					  viewDir_14 = worldViewDir_5;
					  lowp vec4 c_15;
					  highp float nh_16;
					  lowp float diff_17;
					  mediump float tmpvar_18;
					  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_17 = tmpvar_18;
					  mediump float tmpvar_19;
					  tmpvar_19 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_14)
					  )));
					  nh_16 = tmpvar_19;
					  mediump float y_20;
					  y_20 = (_Shininess * 128.0);
					  highp float tmpvar_21;
					  tmpvar_21 = (pow (nh_16, y_20) * tmpvar_9.w);
					  c_15.xyz = (((tmpvar_9.xyz * _Color.xyz) * (tmpvar_1 * diff_17)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_21));
					  c_15.w = (tmpvar_9.w * _Color.w);
					  highp float tmpvar_22;
					  tmpvar_22 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_15.xyz * vec3(tmpvar_22));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = texture2D (_LightTexture0, vec2(tmpvar_19)).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_5;
					  lowp vec4 c_22;
					  lowp vec4 c_23;
					  highp float nh_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_25 = tmpvar_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_21)
					  )));
					  nh_24 = tmpvar_27;
					  mediump float y_28;
					  y_28 = (_Shininess * 128.0);
					  highp float tmpvar_29;
					  tmpvar_29 = (pow (nh_24, y_28) * tmpvar_10.w);
					  c_23.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_25)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_29));
					  c_23.w = (tmpvar_10.w * _Color.w);
					  c_22.w = c_23.w;
					  c_22.xyz = c_23.xyz;
					  c_4.xyz = c_22.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  highp float nh_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_21 = tmpvar_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_20 = tmpvar_23;
					  mediump float y_24;
					  y_24 = (_Shininess * 128.0);
					  highp float tmpvar_25;
					  tmpvar_25 = (pow (nh_20, y_24) * tmpvar_10.w);
					  c_19.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_21)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_25));
					  c_19.w = (tmpvar_10.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = c_19.xyz;
					  c_4.xyz = c_18.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  mediump vec4 lightCoord_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_8 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_7 = tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec4 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19);
					  lightCoord_6 = tmpvar_20;
					  lowp vec4 tmpvar_21;
					  mediump vec2 P_22;
					  P_22 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_21 = texture2D (_LightTexture0, P_22);
					  highp vec3 LightCoord_23;
					  LightCoord_23 = lightCoord_6.xyz;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (LightCoord_23, LightCoord_23);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_LightTextureB0, vec2(tmpvar_24));
					  mediump float tmpvar_26;
					  tmpvar_26 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_21.w) * tmpvar_25.w);
					  atten_5 = tmpvar_26;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  mediump vec3 viewDir_27;
					  viewDir_27 = worldViewDir_7;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  highp float nh_30;
					  lowp float diff_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_31 = tmpvar_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_27)
					  )));
					  nh_30 = tmpvar_33;
					  mediump float y_34;
					  y_34 = (_Shininess * 128.0);
					  highp float tmpvar_35;
					  tmpvar_35 = (pow (nh_30, y_34) * tmpvar_12.w);
					  c_29.xyz = (((tmpvar_12.xyz * _Color.xyz) * (tmpvar_1 * diff_31)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_35));
					  c_29.w = (tmpvar_12.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = c_29.xyz;
					  c_4.xyz = c_28.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = (texture2D (_LightTextureB0, vec2(tmpvar_19)).w * textureCube (_LightTexture0, tmpvar_18).w);
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_5;
					  lowp vec4 c_22;
					  lowp vec4 c_23;
					  highp float nh_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_25 = tmpvar_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_21)
					  )));
					  nh_24 = tmpvar_27;
					  mediump float y_28;
					  y_28 = (_Shininess * 128.0);
					  highp float tmpvar_29;
					  tmpvar_29 = (pow (nh_24, y_28) * tmpvar_10.w);
					  c_23.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_25)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_29));
					  c_23.w = (tmpvar_10.w * _Color.w);
					  c_22.w = c_23.w;
					  c_22.xyz = c_23.xyz;
					  c_4.xyz = c_22.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec2 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xy;
					  lowp float tmpvar_19;
					  tmpvar_19 = texture2D (_LightTexture0, tmpvar_18).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_19);
					  mediump vec3 viewDir_20;
					  viewDir_20 = worldViewDir_5;
					  lowp vec4 c_21;
					  lowp vec4 c_22;
					  highp float nh_23;
					  lowp float diff_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_24 = tmpvar_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_20)
					  )));
					  nh_23 = tmpvar_26;
					  mediump float y_27;
					  y_27 = (_Shininess * 128.0);
					  highp float tmpvar_28;
					  tmpvar_28 = (pow (nh_23, y_27) * tmpvar_10.w);
					  c_22.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_24)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_28));
					  c_22.w = (tmpvar_10.w * _Color.w);
					  c_21.w = c_22.w;
					  c_21.xyz = c_22.xyz;
					  c_4.xyz = c_21.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = texture2D (_LightTexture0, vec2(tmpvar_19)).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_5;
					  lowp vec4 c_22;
					  highp float nh_23;
					  lowp float diff_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_24 = tmpvar_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_21)
					  )));
					  nh_23 = tmpvar_26;
					  mediump float y_27;
					  y_27 = (_Shininess * 128.0);
					  highp float tmpvar_28;
					  tmpvar_28 = (pow (nh_23, y_27) * tmpvar_10.w);
					  c_22.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_24)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_28));
					  c_22.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_29;
					  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_22.xyz * vec3(tmpvar_29));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  highp float nh_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_20 = tmpvar_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_19 = tmpvar_22;
					  mediump float y_23;
					  y_23 = (_Shininess * 128.0);
					  highp float tmpvar_24;
					  tmpvar_24 = (pow (nh_19, y_23) * tmpvar_10.w);
					  c_18.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_20)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_24));
					  c_18.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_25;
					  tmpvar_25 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_18.xyz * vec3(tmpvar_25));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  mediump vec4 lightCoord_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_8 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_7 = tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec4 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19);
					  lightCoord_6 = tmpvar_20;
					  lowp vec4 tmpvar_21;
					  mediump vec2 P_22;
					  P_22 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_21 = texture2D (_LightTexture0, P_22);
					  highp vec3 LightCoord_23;
					  LightCoord_23 = lightCoord_6.xyz;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (LightCoord_23, LightCoord_23);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_LightTextureB0, vec2(tmpvar_24));
					  mediump float tmpvar_26;
					  tmpvar_26 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_21.w) * tmpvar_25.w);
					  atten_5 = tmpvar_26;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  mediump vec3 viewDir_27;
					  viewDir_27 = worldViewDir_7;
					  lowp vec4 c_28;
					  highp float nh_29;
					  lowp float diff_30;
					  mediump float tmpvar_31;
					  tmpvar_31 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_30 = tmpvar_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_27)
					  )));
					  nh_29 = tmpvar_32;
					  mediump float y_33;
					  y_33 = (_Shininess * 128.0);
					  highp float tmpvar_34;
					  tmpvar_34 = (pow (nh_29, y_33) * tmpvar_12.w);
					  c_28.xyz = (((tmpvar_12.xyz * _Color.xyz) * (tmpvar_1 * diff_30)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_34));
					  c_28.w = (tmpvar_12.w * _Color.w);
					  highp float tmpvar_35;
					  tmpvar_35 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_28.xyz * vec3(tmpvar_35));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = (texture2D (_LightTextureB0, vec2(tmpvar_19)).w * textureCube (_LightTexture0, tmpvar_18).w);
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_5;
					  lowp vec4 c_22;
					  highp float nh_23;
					  lowp float diff_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_24 = tmpvar_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_21)
					  )));
					  nh_23 = tmpvar_26;
					  mediump float y_27;
					  y_27 = (_Shininess * 128.0);
					  highp float tmpvar_28;
					  tmpvar_28 = (pow (nh_23, y_27) * tmpvar_10.w);
					  c_22.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_24)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_28));
					  c_22.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_29;
					  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_22.xyz * vec3(tmpvar_29));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec2 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xy;
					  lowp float tmpvar_19;
					  tmpvar_19 = texture2D (_LightTexture0, tmpvar_18).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_19);
					  mediump vec3 viewDir_20;
					  viewDir_20 = worldViewDir_5;
					  lowp vec4 c_21;
					  highp float nh_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_23 = tmpvar_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_20)
					  )));
					  nh_22 = tmpvar_25;
					  mediump float y_26;
					  y_26 = (_Shininess * 128.0);
					  highp float tmpvar_27;
					  tmpvar_27 = (pow (nh_22, y_26) * tmpvar_10.w);
					  c_21.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_23)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_27));
					  c_21.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_28;
					  tmpvar_28 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_21.xyz * vec3(tmpvar_28));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = texture2D (_LightTexture0, vec2(tmpvar_19)).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_5;
					  lowp vec4 c_22;
					  lowp vec4 c_23;
					  highp float nh_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_25 = tmpvar_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_21)
					  )));
					  nh_24 = tmpvar_27;
					  mediump float y_28;
					  y_28 = (_Shininess * 128.0);
					  highp float tmpvar_29;
					  tmpvar_29 = (pow (nh_24, y_28) * tmpvar_10.w);
					  c_23.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_25)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_29));
					  c_23.w = (tmpvar_10.w * _Color.w);
					  c_22.w = c_23.w;
					  c_22.xyz = c_23.xyz;
					  c_4.xyz = c_22.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  highp float nh_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_21 = tmpvar_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_20 = tmpvar_23;
					  mediump float y_24;
					  y_24 = (_Shininess * 128.0);
					  highp float tmpvar_25;
					  tmpvar_25 = (pow (nh_20, y_24) * tmpvar_10.w);
					  c_19.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_21)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_25));
					  c_19.w = (tmpvar_10.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = c_19.xyz;
					  c_4.xyz = c_18.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  mediump vec4 lightCoord_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_8 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_7 = tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec4 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19);
					  lightCoord_6 = tmpvar_20;
					  lowp vec4 tmpvar_21;
					  mediump vec2 P_22;
					  P_22 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_21 = texture2D (_LightTexture0, P_22);
					  highp vec3 LightCoord_23;
					  LightCoord_23 = lightCoord_6.xyz;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (LightCoord_23, LightCoord_23);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_LightTextureB0, vec2(tmpvar_24));
					  mediump float tmpvar_26;
					  tmpvar_26 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_21.w) * tmpvar_25.w);
					  atten_5 = tmpvar_26;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  mediump vec3 viewDir_27;
					  viewDir_27 = worldViewDir_7;
					  lowp vec4 c_28;
					  lowp vec4 c_29;
					  highp float nh_30;
					  lowp float diff_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_31 = tmpvar_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_27)
					  )));
					  nh_30 = tmpvar_33;
					  mediump float y_34;
					  y_34 = (_Shininess * 128.0);
					  highp float tmpvar_35;
					  tmpvar_35 = (pow (nh_30, y_34) * tmpvar_12.w);
					  c_29.xyz = (((tmpvar_12.xyz * _Color.xyz) * (tmpvar_1 * diff_31)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_35));
					  c_29.w = (tmpvar_12.w * _Color.w);
					  c_28.w = c_29.w;
					  c_28.xyz = c_29.xyz;
					  c_4.xyz = c_28.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = (texture2D (_LightTextureB0, vec2(tmpvar_19)).w * textureCube (_LightTexture0, tmpvar_18).w);
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_5;
					  lowp vec4 c_22;
					  lowp vec4 c_23;
					  highp float nh_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_25 = tmpvar_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_21)
					  )));
					  nh_24 = tmpvar_27;
					  mediump float y_28;
					  y_28 = (_Shininess * 128.0);
					  highp float tmpvar_29;
					  tmpvar_29 = (pow (nh_24, y_28) * tmpvar_10.w);
					  c_23.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_25)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_29));
					  c_23.w = (tmpvar_10.w * _Color.w);
					  c_22.w = c_23.w;
					  c_22.xyz = c_23.xyz;
					  c_4.xyz = c_22.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec2 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xy;
					  lowp float tmpvar_19;
					  tmpvar_19 = texture2D (_LightTexture0, tmpvar_18).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_19);
					  mediump vec3 viewDir_20;
					  viewDir_20 = worldViewDir_5;
					  lowp vec4 c_21;
					  lowp vec4 c_22;
					  highp float nh_23;
					  lowp float diff_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_24 = tmpvar_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_20)
					  )));
					  nh_23 = tmpvar_26;
					  mediump float y_27;
					  y_27 = (_Shininess * 128.0);
					  highp float tmpvar_28;
					  tmpvar_28 = (pow (nh_23, y_27) * tmpvar_10.w);
					  c_22.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_24)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_28));
					  c_22.w = (tmpvar_10.w * _Color.w);
					  c_21.w = c_22.w;
					  c_21.xyz = c_22.xyz;
					  c_4.xyz = c_21.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = texture2D (_LightTexture0, vec2(tmpvar_19)).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_5;
					  lowp vec4 c_22;
					  highp float nh_23;
					  lowp float diff_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_24 = tmpvar_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_21)
					  )));
					  nh_23 = tmpvar_26;
					  mediump float y_27;
					  y_27 = (_Shininess * 128.0);
					  highp float tmpvar_28;
					  tmpvar_28 = (pow (nh_23, y_27) * tmpvar_10.w);
					  c_22.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_24)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_28));
					  c_22.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_29;
					  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_22.xyz * vec3(tmpvar_29));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  highp float nh_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_20 = tmpvar_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_19 = tmpvar_22;
					  mediump float y_23;
					  y_23 = (_Shininess * 128.0);
					  highp float tmpvar_24;
					  tmpvar_24 = (pow (nh_19, y_23) * tmpvar_10.w);
					  c_18.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_20)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_24));
					  c_18.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_25;
					  tmpvar_25 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_18.xyz * vec3(tmpvar_25));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  mediump vec4 lightCoord_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_8 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_7 = tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec4 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19);
					  lightCoord_6 = tmpvar_20;
					  lowp vec4 tmpvar_21;
					  mediump vec2 P_22;
					  P_22 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_21 = texture2D (_LightTexture0, P_22);
					  highp vec3 LightCoord_23;
					  LightCoord_23 = lightCoord_6.xyz;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (LightCoord_23, LightCoord_23);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_LightTextureB0, vec2(tmpvar_24));
					  mediump float tmpvar_26;
					  tmpvar_26 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_21.w) * tmpvar_25.w);
					  atten_5 = tmpvar_26;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  mediump vec3 viewDir_27;
					  viewDir_27 = worldViewDir_7;
					  lowp vec4 c_28;
					  highp float nh_29;
					  lowp float diff_30;
					  mediump float tmpvar_31;
					  tmpvar_31 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_30 = tmpvar_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_27)
					  )));
					  nh_29 = tmpvar_32;
					  mediump float y_33;
					  y_33 = (_Shininess * 128.0);
					  highp float tmpvar_34;
					  tmpvar_34 = (pow (nh_29, y_33) * tmpvar_12.w);
					  c_28.xyz = (((tmpvar_12.xyz * _Color.xyz) * (tmpvar_1 * diff_30)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_34));
					  c_28.w = (tmpvar_12.w * _Color.w);
					  highp float tmpvar_35;
					  tmpvar_35 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_28.xyz * vec3(tmpvar_35));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = (texture2D (_LightTextureB0, vec2(tmpvar_19)).w * textureCube (_LightTexture0, tmpvar_18).w);
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  mediump vec3 viewDir_21;
					  viewDir_21 = worldViewDir_5;
					  lowp vec4 c_22;
					  highp float nh_23;
					  lowp float diff_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_24 = tmpvar_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_21)
					  )));
					  nh_23 = tmpvar_26;
					  mediump float y_27;
					  y_27 = (_Shininess * 128.0);
					  highp float tmpvar_28;
					  tmpvar_28 = (pow (nh_23, y_27) * tmpvar_10.w);
					  c_22.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_24)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_28));
					  c_22.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_29;
					  tmpvar_29 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_22.xyz * vec3(tmpvar_29));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec2 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xy;
					  lowp float tmpvar_19;
					  tmpvar_19 = texture2D (_LightTexture0, tmpvar_18).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_19);
					  mediump vec3 viewDir_20;
					  viewDir_20 = worldViewDir_5;
					  lowp vec4 c_21;
					  highp float nh_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_23 = tmpvar_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_20)
					  )));
					  nh_22 = tmpvar_25;
					  mediump float y_26;
					  y_26 = (_Shininess * 128.0);
					  highp float tmpvar_27;
					  tmpvar_27 = (pow (nh_22, y_26) * tmpvar_10.w);
					  c_21.xyz = (((tmpvar_10.xyz * _Color.xyz) * (tmpvar_1 * diff_23)) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_27));
					  c_21.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_28;
					  tmpvar_28 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_21.xyz * vec3(tmpvar_28));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xyz;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (tmpvar_12, tmpvar_12);
					  lowp float tmpvar_14;
					  tmpvar_14 = texture2D (_LightTexture0, vec2(tmpvar_13)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_14);
					  lowp vec4 c_15;
					  lowp vec4 c_16;
					  lowp float diff_17;
					  mediump float tmpvar_18;
					  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_17 = tmpvar_18;
					  c_16.xyz = ((tmpvar_8 * tmpvar_1) * diff_17);
					  c_16.w = (tmpvar_9.w * _Color.w);
					  c_15.w = c_16.w;
					  c_15.xyz = c_16.xyz;
					  c_3.xyz = c_15.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_11;
					  lowp vec4 c_12;
					  lowp float diff_13;
					  mediump float tmpvar_14;
					  tmpvar_14 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_13 = tmpvar_14;
					  c_12.xyz = ((tmpvar_8 * tmpvar_1) * diff_13);
					  c_12.w = (tmpvar_9.w * _Color.w);
					  c_11.w = c_12.w;
					  c_11.xyz = c_12.xyz;
					  c_3.xyz = c_11.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_7 = tmpvar_9;
					  tmpvar_8 = xlv_COLOR0;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_8.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13);
					  lightCoord_5 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  mediump vec2 P_16;
					  P_16 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_15 = texture2D (_LightTexture0, P_16);
					  highp vec3 LightCoord_17;
					  LightCoord_17 = lightCoord_5.xyz;
					  highp float tmpvar_18;
					  tmpvar_18 = dot (LightCoord_17, LightCoord_17);
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_LightTextureB0, vec2(tmpvar_18));
					  mediump float tmpvar_20;
					  tmpvar_20 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_15.w) * tmpvar_19.w);
					  atten_4 = tmpvar_20;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  lowp vec4 c_21;
					  lowp vec4 c_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_23 = tmpvar_24;
					  c_22.xyz = ((tmpvar_10 * tmpvar_1) * diff_23);
					  c_22.w = (tmpvar_11.w * _Color.w);
					  c_21.w = c_22.w;
					  c_21.xyz = c_22.xyz;
					  c_3.xyz = c_21.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xyz;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (tmpvar_12, tmpvar_12);
					  lowp float tmpvar_14;
					  tmpvar_14 = (texture2D (_LightTextureB0, vec2(tmpvar_13)).w * textureCube (_LightTexture0, tmpvar_12).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_14);
					  lowp vec4 c_15;
					  lowp vec4 c_16;
					  lowp float diff_17;
					  mediump float tmpvar_18;
					  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_17 = tmpvar_18;
					  c_16.xyz = ((tmpvar_8 * tmpvar_1) * diff_17);
					  c_16.w = (tmpvar_9.w * _Color.w);
					  c_15.w = c_16.w;
					  c_15.xyz = c_16.xyz;
					  c_3.xyz = c_15.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xy;
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2D (_LightTexture0, tmpvar_12).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_13);
					  lowp vec4 c_14;
					  lowp vec4 c_15;
					  lowp float diff_16;
					  mediump float tmpvar_17;
					  tmpvar_17 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_16 = tmpvar_17;
					  c_15.xyz = ((tmpvar_8 * tmpvar_1) * diff_16);
					  c_15.w = (tmpvar_9.w * _Color.w);
					  c_14.w = c_15.w;
					  c_14.xyz = c_15.xyz;
					  c_3.xyz = c_14.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xyz;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (tmpvar_12, tmpvar_12);
					  lowp float tmpvar_14;
					  tmpvar_14 = texture2D (_LightTexture0, vec2(tmpvar_13)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_14);
					  lowp vec4 c_15;
					  lowp float diff_16;
					  mediump float tmpvar_17;
					  tmpvar_17 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_16 = tmpvar_17;
					  c_15.xyz = ((tmpvar_8 * tmpvar_1) * diff_16);
					  c_15.w = (tmpvar_9.w * _Color.w);
					  highp float tmpvar_18;
					  tmpvar_18 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_15.xyz * vec3(tmpvar_18));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_11;
					  lowp float diff_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_12 = tmpvar_13;
					  c_11.xyz = ((tmpvar_8 * tmpvar_1) * diff_12);
					  c_11.w = (tmpvar_9.w * _Color.w);
					  highp float tmpvar_14;
					  tmpvar_14 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_11.xyz * vec3(tmpvar_14));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_7 = tmpvar_9;
					  tmpvar_8 = xlv_COLOR0;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_8.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13);
					  lightCoord_5 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  mediump vec2 P_16;
					  P_16 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_15 = texture2D (_LightTexture0, P_16);
					  highp vec3 LightCoord_17;
					  LightCoord_17 = lightCoord_5.xyz;
					  highp float tmpvar_18;
					  tmpvar_18 = dot (LightCoord_17, LightCoord_17);
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_LightTextureB0, vec2(tmpvar_18));
					  mediump float tmpvar_20;
					  tmpvar_20 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_15.w) * tmpvar_19.w);
					  atten_4 = tmpvar_20;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  lowp vec4 c_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_22 = tmpvar_23;
					  c_21.xyz = ((tmpvar_10 * tmpvar_1) * diff_22);
					  c_21.w = (tmpvar_11.w * _Color.w);
					  highp float tmpvar_24;
					  tmpvar_24 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_21.xyz * vec3(tmpvar_24));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xyz;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (tmpvar_12, tmpvar_12);
					  lowp float tmpvar_14;
					  tmpvar_14 = (texture2D (_LightTextureB0, vec2(tmpvar_13)).w * textureCube (_LightTexture0, tmpvar_12).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_14);
					  lowp vec4 c_15;
					  lowp float diff_16;
					  mediump float tmpvar_17;
					  tmpvar_17 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_16 = tmpvar_17;
					  c_15.xyz = ((tmpvar_8 * tmpvar_1) * diff_16);
					  c_15.w = (tmpvar_9.w * _Color.w);
					  highp float tmpvar_18;
					  tmpvar_18 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_15.xyz * vec3(tmpvar_18));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xy;
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2D (_LightTexture0, tmpvar_12).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_13);
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_8 * tmpvar_1) * diff_15);
					  c_14.w = (tmpvar_9.w * _Color.w);
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_14.xyz * vec3(tmpvar_17));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13).xyz;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (tmpvar_14, tmpvar_14);
					  lowp float tmpvar_16;
					  tmpvar_16 = texture2D (_LightTexture0, vec2(tmpvar_15)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_16);
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  highp float nh_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_21 = tmpvar_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_20 = tmpvar_23;
					  mediump float y_24;
					  y_24 = (_Shininess * 128.0);
					  highp float tmpvar_25;
					  tmpvar_25 = (pow (nh_20, y_24) * tmpvar_11.w);
					  c_19.xyz = (((tmpvar_10 * tmpvar_1) * diff_21) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_25));
					  c_19.w = (tmpvar_11.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = c_19.xyz;
					  c_3.xyz = c_18.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_13;
					  viewDir_13 = worldViewDir_5;
					  lowp vec4 c_14;
					  lowp vec4 c_15;
					  highp float nh_16;
					  lowp float diff_17;
					  mediump float tmpvar_18;
					  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_17 = tmpvar_18;
					  mediump float tmpvar_19;
					  tmpvar_19 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_13)
					  )));
					  nh_16 = tmpvar_19;
					  mediump float y_20;
					  y_20 = (_Shininess * 128.0);
					  highp float tmpvar_21;
					  tmpvar_21 = (pow (nh_16, y_20) * tmpvar_11.w);
					  c_15.xyz = (((tmpvar_10 * tmpvar_1) * diff_17) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_21));
					  c_15.w = (tmpvar_11.w * _Color.w);
					  c_14.w = c_15.w;
					  c_14.xyz = c_15.xyz;
					  c_3.xyz = c_14.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec4 tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_8 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_7 = tmpvar_11;
					  tmpvar_9 = xlv_COLOR0;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  P_14 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_12 = (tmpvar_13.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_9.xyz);
					  highp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_16;
					  tmpvar_16 = (_LightMatrix0 * tmpvar_15);
					  lightCoord_5 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  mediump vec2 P_18;
					  P_18 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_17 = texture2D (_LightTexture0, P_18);
					  highp vec3 LightCoord_19;
					  LightCoord_19 = lightCoord_5.xyz;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (LightCoord_19, LightCoord_19);
					  lowp vec4 tmpvar_21;
					  tmpvar_21 = texture2D (_LightTextureB0, vec2(tmpvar_20));
					  mediump float tmpvar_22;
					  tmpvar_22 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_17.w) * tmpvar_21.w);
					  atten_4 = tmpvar_22;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  mediump vec3 viewDir_23;
					  viewDir_23 = worldViewDir_7;
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  highp float nh_26;
					  lowp float diff_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_27 = tmpvar_28;
					  mediump float tmpvar_29;
					  tmpvar_29 = max (0.0, dot (tmpvar_6, normalize(
					    (tmpvar_2 + viewDir_23)
					  )));
					  nh_26 = tmpvar_29;
					  mediump float y_30;
					  y_30 = (_Shininess * 128.0);
					  highp float tmpvar_31;
					  tmpvar_31 = (pow (nh_26, y_30) * tmpvar_13.w);
					  c_25.xyz = (((tmpvar_12 * tmpvar_1) * diff_27) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_31));
					  c_25.w = (tmpvar_13.w * _Color.w);
					  c_24.w = c_25.w;
					  c_24.xyz = c_25.xyz;
					  c_3.xyz = c_24.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13).xyz;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (tmpvar_14, tmpvar_14);
					  lowp float tmpvar_16;
					  tmpvar_16 = (texture2D (_LightTextureB0, vec2(tmpvar_15)).w * textureCube (_LightTexture0, tmpvar_14).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_16);
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  highp float nh_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_21 = tmpvar_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_20 = tmpvar_23;
					  mediump float y_24;
					  y_24 = (_Shininess * 128.0);
					  highp float tmpvar_25;
					  tmpvar_25 = (pow (nh_20, y_24) * tmpvar_11.w);
					  c_19.xyz = (((tmpvar_10 * tmpvar_1) * diff_21) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_25));
					  c_19.w = (tmpvar_11.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = c_19.xyz;
					  c_3.xyz = c_18.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13).xy;
					  lowp float tmpvar_15;
					  tmpvar_15 = texture2D (_LightTexture0, tmpvar_14).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_15);
					  mediump vec3 viewDir_16;
					  viewDir_16 = worldViewDir_5;
					  lowp vec4 c_17;
					  lowp vec4 c_18;
					  highp float nh_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_20 = tmpvar_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_16)
					  )));
					  nh_19 = tmpvar_22;
					  mediump float y_23;
					  y_23 = (_Shininess * 128.0);
					  highp float tmpvar_24;
					  tmpvar_24 = (pow (nh_19, y_23) * tmpvar_11.w);
					  c_18.xyz = (((tmpvar_10 * tmpvar_1) * diff_20) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_24));
					  c_18.w = (tmpvar_11.w * _Color.w);
					  c_17.w = c_18.w;
					  c_17.xyz = c_18.xyz;
					  c_3.xyz = c_17.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13).xyz;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (tmpvar_14, tmpvar_14);
					  lowp float tmpvar_16;
					  tmpvar_16 = texture2D (_LightTexture0, vec2(tmpvar_15)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_16);
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  highp float nh_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_20 = tmpvar_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_19 = tmpvar_22;
					  mediump float y_23;
					  y_23 = (_Shininess * 128.0);
					  highp float tmpvar_24;
					  tmpvar_24 = (pow (nh_19, y_23) * tmpvar_11.w);
					  c_18.xyz = (((tmpvar_10 * tmpvar_1) * diff_20) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_24));
					  c_18.w = (tmpvar_11.w * _Color.w);
					  highp float tmpvar_25;
					  tmpvar_25 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_18.xyz * vec3(tmpvar_25));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_13;
					  viewDir_13 = worldViewDir_5;
					  lowp vec4 c_14;
					  highp float nh_15;
					  lowp float diff_16;
					  mediump float tmpvar_17;
					  tmpvar_17 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_16 = tmpvar_17;
					  mediump float tmpvar_18;
					  tmpvar_18 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_13)
					  )));
					  nh_15 = tmpvar_18;
					  mediump float y_19;
					  y_19 = (_Shininess * 128.0);
					  highp float tmpvar_20;
					  tmpvar_20 = (pow (nh_15, y_19) * tmpvar_11.w);
					  c_14.xyz = (((tmpvar_10 * tmpvar_1) * diff_16) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_20));
					  c_14.w = (tmpvar_11.w * _Color.w);
					  highp float tmpvar_21;
					  tmpvar_21 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_14.xyz * vec3(tmpvar_21));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec4 tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_8 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_7 = tmpvar_11;
					  tmpvar_9 = xlv_COLOR0;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  P_14 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_12 = (tmpvar_13.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_9.xyz);
					  highp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_16;
					  tmpvar_16 = (_LightMatrix0 * tmpvar_15);
					  lightCoord_5 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  mediump vec2 P_18;
					  P_18 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_17 = texture2D (_LightTexture0, P_18);
					  highp vec3 LightCoord_19;
					  LightCoord_19 = lightCoord_5.xyz;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (LightCoord_19, LightCoord_19);
					  lowp vec4 tmpvar_21;
					  tmpvar_21 = texture2D (_LightTextureB0, vec2(tmpvar_20));
					  mediump float tmpvar_22;
					  tmpvar_22 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_17.w) * tmpvar_21.w);
					  atten_4 = tmpvar_22;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  mediump vec3 viewDir_23;
					  viewDir_23 = worldViewDir_7;
					  lowp vec4 c_24;
					  highp float nh_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_26 = tmpvar_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (tmpvar_6, normalize(
					    (tmpvar_2 + viewDir_23)
					  )));
					  nh_25 = tmpvar_28;
					  mediump float y_29;
					  y_29 = (_Shininess * 128.0);
					  highp float tmpvar_30;
					  tmpvar_30 = (pow (nh_25, y_29) * tmpvar_13.w);
					  c_24.xyz = (((tmpvar_12 * tmpvar_1) * diff_26) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_30));
					  c_24.w = (tmpvar_13.w * _Color.w);
					  highp float tmpvar_31;
					  tmpvar_31 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_24.xyz * vec3(tmpvar_31));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13).xyz;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (tmpvar_14, tmpvar_14);
					  lowp float tmpvar_16;
					  tmpvar_16 = (texture2D (_LightTextureB0, vec2(tmpvar_15)).w * textureCube (_LightTexture0, tmpvar_14).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_16);
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  highp float nh_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_20 = tmpvar_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_19 = tmpvar_22;
					  mediump float y_23;
					  y_23 = (_Shininess * 128.0);
					  highp float tmpvar_24;
					  tmpvar_24 = (pow (nh_19, y_23) * tmpvar_11.w);
					  c_18.xyz = (((tmpvar_10 * tmpvar_1) * diff_20) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_24));
					  c_18.w = (tmpvar_11.w * _Color.w);
					  highp float tmpvar_25;
					  tmpvar_25 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_18.xyz * vec3(tmpvar_25));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13).xy;
					  lowp float tmpvar_15;
					  tmpvar_15 = texture2D (_LightTexture0, tmpvar_14).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_15);
					  mediump vec3 viewDir_16;
					  viewDir_16 = worldViewDir_5;
					  lowp vec4 c_17;
					  highp float nh_18;
					  lowp float diff_19;
					  mediump float tmpvar_20;
					  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_19 = tmpvar_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_16)
					  )));
					  nh_18 = tmpvar_21;
					  mediump float y_22;
					  y_22 = (_Shininess * 128.0);
					  highp float tmpvar_23;
					  tmpvar_23 = (pow (nh_18, y_22) * tmpvar_11.w);
					  c_17.xyz = (((tmpvar_10 * tmpvar_1) * diff_19) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_23));
					  c_17.w = (tmpvar_11.w * _Color.w);
					  highp float tmpvar_24;
					  tmpvar_24 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_17.xyz * vec3(tmpvar_24));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = texture2D (_LightTexture0, vec2(tmpvar_19)).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  lowp vec4 c_21;
					  lowp vec4 c_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_23 = tmpvar_24;
					  c_22.xyz = ((tmpvar_8 * tmpvar_1) * diff_23);
					  c_22.w = (tmpvar_10.w * _Color.w);
					  c_21.w = c_22.w;
					  c_21.xyz = c_22.xyz;
					  c_4.xyz = c_21.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_17;
					  lowp vec4 c_18;
					  lowp float diff_19;
					  mediump float tmpvar_20;
					  tmpvar_20 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_19 = tmpvar_20;
					  c_18.xyz = ((tmpvar_8 * tmpvar_1) * diff_19);
					  c_18.w = (tmpvar_10.w * _Color.w);
					  c_17.w = c_18.w;
					  c_17.xyz = c_18.xyz;
					  c_4.xyz = c_17.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  mediump vec4 lightCoord_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_7 = tmpvar_9;
					  tmpvar_8 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_8.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec4 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19);
					  lightCoord_6 = tmpvar_20;
					  lowp vec4 tmpvar_21;
					  mediump vec2 P_22;
					  P_22 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_21 = texture2D (_LightTexture0, P_22);
					  highp vec3 LightCoord_23;
					  LightCoord_23 = lightCoord_6.xyz;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (LightCoord_23, LightCoord_23);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_LightTextureB0, vec2(tmpvar_24));
					  mediump float tmpvar_26;
					  tmpvar_26 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_21.w) * tmpvar_25.w);
					  atten_5 = tmpvar_26;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  lowp float diff_29;
					  mediump float tmpvar_30;
					  tmpvar_30 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_29 = tmpvar_30;
					  c_28.xyz = ((tmpvar_10 * tmpvar_1) * diff_29);
					  c_28.w = (tmpvar_12.w * _Color.w);
					  c_27.w = c_28.w;
					  c_27.xyz = c_28.xyz;
					  c_4.xyz = c_27.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = (texture2D (_LightTextureB0, vec2(tmpvar_19)).w * textureCube (_LightTexture0, tmpvar_18).w);
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  lowp vec4 c_21;
					  lowp vec4 c_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_23 = tmpvar_24;
					  c_22.xyz = ((tmpvar_8 * tmpvar_1) * diff_23);
					  c_22.w = (tmpvar_10.w * _Color.w);
					  c_21.w = c_22.w;
					  c_21.xyz = c_22.xyz;
					  c_4.xyz = c_21.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec2 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xy;
					  lowp float tmpvar_19;
					  tmpvar_19 = texture2D (_LightTexture0, tmpvar_18).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_19);
					  lowp vec4 c_20;
					  lowp vec4 c_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_22 = tmpvar_23;
					  c_21.xyz = ((tmpvar_8 * tmpvar_1) * diff_22);
					  c_21.w = (tmpvar_10.w * _Color.w);
					  c_20.w = c_21.w;
					  c_20.xyz = c_21.xyz;
					  c_4.xyz = c_20.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = texture2D (_LightTexture0, vec2(tmpvar_19)).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  lowp vec4 c_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_22 = tmpvar_23;
					  c_21.xyz = ((tmpvar_8 * tmpvar_1) * diff_22);
					  c_21.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_24;
					  tmpvar_24 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_21.xyz * vec3(tmpvar_24));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_17;
					  lowp float diff_18;
					  mediump float tmpvar_19;
					  tmpvar_19 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_18 = tmpvar_19;
					  c_17.xyz = ((tmpvar_8 * tmpvar_1) * diff_18);
					  c_17.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_20;
					  tmpvar_20 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_17.xyz * vec3(tmpvar_20));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  mediump vec4 lightCoord_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_7 = tmpvar_9;
					  tmpvar_8 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_8.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec4 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19);
					  lightCoord_6 = tmpvar_20;
					  lowp vec4 tmpvar_21;
					  mediump vec2 P_22;
					  P_22 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_21 = texture2D (_LightTexture0, P_22);
					  highp vec3 LightCoord_23;
					  LightCoord_23 = lightCoord_6.xyz;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (LightCoord_23, LightCoord_23);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_LightTextureB0, vec2(tmpvar_24));
					  mediump float tmpvar_26;
					  tmpvar_26 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_21.w) * tmpvar_25.w);
					  atten_5 = tmpvar_26;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  lowp vec4 c_27;
					  lowp float diff_28;
					  mediump float tmpvar_29;
					  tmpvar_29 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_28 = tmpvar_29;
					  c_27.xyz = ((tmpvar_10 * tmpvar_1) * diff_28);
					  c_27.w = (tmpvar_12.w * _Color.w);
					  highp float tmpvar_30;
					  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_27.xyz * vec3(tmpvar_30));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = (texture2D (_LightTextureB0, vec2(tmpvar_19)).w * textureCube (_LightTexture0, tmpvar_18).w);
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  lowp vec4 c_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_22 = tmpvar_23;
					  c_21.xyz = ((tmpvar_8 * tmpvar_1) * diff_22);
					  c_21.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_24;
					  tmpvar_24 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_21.xyz * vec3(tmpvar_24));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec2 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xy;
					  lowp float tmpvar_19;
					  tmpvar_19 = texture2D (_LightTexture0, tmpvar_18).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_19);
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_1) * diff_21);
					  c_20.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_20.xyz * vec3(tmpvar_23));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19).xyz;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (tmpvar_20, tmpvar_20);
					  lowp float tmpvar_22;
					  tmpvar_22 = texture2D (_LightTexture0, vec2(tmpvar_21)).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_22);
					  mediump vec3 viewDir_23;
					  viewDir_23 = worldViewDir_5;
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  highp float nh_26;
					  lowp float diff_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_27 = tmpvar_28;
					  mediump float tmpvar_29;
					  tmpvar_29 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_23)
					  )));
					  nh_26 = tmpvar_29;
					  mediump float y_30;
					  y_30 = (_Shininess * 128.0);
					  highp float tmpvar_31;
					  tmpvar_31 = (pow (nh_26, y_30) * tmpvar_12.w);
					  c_25.xyz = (((tmpvar_10 * tmpvar_1) * diff_27) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_31));
					  c_25.w = (tmpvar_12.w * _Color.w);
					  c_24.w = c_25.w;
					  c_24.xyz = c_25.xyz;
					  c_4.xyz = c_24.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_19;
					  viewDir_19 = worldViewDir_5;
					  lowp vec4 c_20;
					  lowp vec4 c_21;
					  highp float nh_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_23 = tmpvar_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_19)
					  )));
					  nh_22 = tmpvar_25;
					  mediump float y_26;
					  y_26 = (_Shininess * 128.0);
					  highp float tmpvar_27;
					  tmpvar_27 = (pow (nh_22, y_26) * tmpvar_12.w);
					  c_21.xyz = (((tmpvar_10 * tmpvar_1) * diff_23) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_27));
					  c_21.w = (tmpvar_12.w * _Color.w);
					  c_20.w = c_21.w;
					  c_20.xyz = c_21.xyz;
					  c_4.xyz = c_20.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  mediump vec4 lightCoord_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec4 tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_8 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_7 = tmpvar_11;
					  tmpvar_9 = xlv_COLOR0;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_12 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_9.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_13 = tmpvar_20;
					  highp vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = xlv_TEXCOORD4;
					  highp vec4 tmpvar_22;
					  tmpvar_22 = (_LightMatrix0 * tmpvar_21);
					  lightCoord_6 = tmpvar_22;
					  lowp vec4 tmpvar_23;
					  mediump vec2 P_24;
					  P_24 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_23 = texture2D (_LightTexture0, P_24);
					  highp vec3 LightCoord_25;
					  LightCoord_25 = lightCoord_6.xyz;
					  highp float tmpvar_26;
					  tmpvar_26 = dot (LightCoord_25, LightCoord_25);
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_LightTextureB0, vec2(tmpvar_26));
					  mediump float tmpvar_28;
					  tmpvar_28 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_23.w) * tmpvar_27.w);
					  atten_5 = tmpvar_28;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_13);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_13);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_13);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  mediump vec3 viewDir_29;
					  viewDir_29 = worldViewDir_7;
					  lowp vec4 c_30;
					  lowp vec4 c_31;
					  highp float nh_32;
					  lowp float diff_33;
					  mediump float tmpvar_34;
					  tmpvar_34 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_33 = tmpvar_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_29)
					  )));
					  nh_32 = tmpvar_35;
					  mediump float y_36;
					  y_36 = (_Shininess * 128.0);
					  highp float tmpvar_37;
					  tmpvar_37 = (pow (nh_32, y_36) * tmpvar_14.w);
					  c_31.xyz = (((tmpvar_12 * tmpvar_1) * diff_33) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_37));
					  c_31.w = (tmpvar_14.w * _Color.w);
					  c_30.w = c_31.w;
					  c_30.xyz = c_31.xyz;
					  c_4.xyz = c_30.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19).xyz;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (tmpvar_20, tmpvar_20);
					  lowp float tmpvar_22;
					  tmpvar_22 = (texture2D (_LightTextureB0, vec2(tmpvar_21)).w * textureCube (_LightTexture0, tmpvar_20).w);
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_22);
					  mediump vec3 viewDir_23;
					  viewDir_23 = worldViewDir_5;
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  highp float nh_26;
					  lowp float diff_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_27 = tmpvar_28;
					  mediump float tmpvar_29;
					  tmpvar_29 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_23)
					  )));
					  nh_26 = tmpvar_29;
					  mediump float y_30;
					  y_30 = (_Shininess * 128.0);
					  highp float tmpvar_31;
					  tmpvar_31 = (pow (nh_26, y_30) * tmpvar_12.w);
					  c_25.xyz = (((tmpvar_10 * tmpvar_1) * diff_27) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_31));
					  c_25.w = (tmpvar_12.w * _Color.w);
					  c_24.w = c_25.w;
					  c_24.xyz = c_25.xyz;
					  c_4.xyz = c_24.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec2 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19).xy;
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2D (_LightTexture0, tmpvar_20).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_21);
					  mediump vec3 viewDir_22;
					  viewDir_22 = worldViewDir_5;
					  lowp vec4 c_23;
					  lowp vec4 c_24;
					  highp float nh_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_26 = tmpvar_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_22)
					  )));
					  nh_25 = tmpvar_28;
					  mediump float y_29;
					  y_29 = (_Shininess * 128.0);
					  highp float tmpvar_30;
					  tmpvar_30 = (pow (nh_25, y_29) * tmpvar_12.w);
					  c_24.xyz = (((tmpvar_10 * tmpvar_1) * diff_26) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_30));
					  c_24.w = (tmpvar_12.w * _Color.w);
					  c_23.w = c_24.w;
					  c_23.xyz = c_24.xyz;
					  c_4.xyz = c_23.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19).xyz;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (tmpvar_20, tmpvar_20);
					  lowp float tmpvar_22;
					  tmpvar_22 = texture2D (_LightTexture0, vec2(tmpvar_21)).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_22);
					  mediump vec3 viewDir_23;
					  viewDir_23 = worldViewDir_5;
					  lowp vec4 c_24;
					  highp float nh_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_26 = tmpvar_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_23)
					  )));
					  nh_25 = tmpvar_28;
					  mediump float y_29;
					  y_29 = (_Shininess * 128.0);
					  highp float tmpvar_30;
					  tmpvar_30 = (pow (nh_25, y_29) * tmpvar_12.w);
					  c_24.xyz = (((tmpvar_10 * tmpvar_1) * diff_26) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_30));
					  c_24.w = (tmpvar_12.w * _Color.w);
					  highp float tmpvar_31;
					  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_24.xyz * vec3(tmpvar_31));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_19;
					  viewDir_19 = worldViewDir_5;
					  lowp vec4 c_20;
					  highp float nh_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_22 = tmpvar_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_19)
					  )));
					  nh_21 = tmpvar_24;
					  mediump float y_25;
					  y_25 = (_Shininess * 128.0);
					  highp float tmpvar_26;
					  tmpvar_26 = (pow (nh_21, y_25) * tmpvar_12.w);
					  c_20.xyz = (((tmpvar_10 * tmpvar_1) * diff_22) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_26));
					  c_20.w = (tmpvar_12.w * _Color.w);
					  highp float tmpvar_27;
					  tmpvar_27 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_20.xyz * vec3(tmpvar_27));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  mediump vec4 lightCoord_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec4 tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_8 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_7 = tmpvar_11;
					  tmpvar_9 = xlv_COLOR0;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_12 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_9.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_13 = tmpvar_20;
					  highp vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = xlv_TEXCOORD4;
					  highp vec4 tmpvar_22;
					  tmpvar_22 = (_LightMatrix0 * tmpvar_21);
					  lightCoord_6 = tmpvar_22;
					  lowp vec4 tmpvar_23;
					  mediump vec2 P_24;
					  P_24 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_23 = texture2D (_LightTexture0, P_24);
					  highp vec3 LightCoord_25;
					  LightCoord_25 = lightCoord_6.xyz;
					  highp float tmpvar_26;
					  tmpvar_26 = dot (LightCoord_25, LightCoord_25);
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_LightTextureB0, vec2(tmpvar_26));
					  mediump float tmpvar_28;
					  tmpvar_28 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_23.w) * tmpvar_27.w);
					  atten_5 = tmpvar_28;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_13);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_13);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_13);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  mediump vec3 viewDir_29;
					  viewDir_29 = worldViewDir_7;
					  lowp vec4 c_30;
					  highp float nh_31;
					  lowp float diff_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_32 = tmpvar_33;
					  mediump float tmpvar_34;
					  tmpvar_34 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_29)
					  )));
					  nh_31 = tmpvar_34;
					  mediump float y_35;
					  y_35 = (_Shininess * 128.0);
					  highp float tmpvar_36;
					  tmpvar_36 = (pow (nh_31, y_35) * tmpvar_14.w);
					  c_30.xyz = (((tmpvar_12 * tmpvar_1) * diff_32) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_36));
					  c_30.w = (tmpvar_14.w * _Color.w);
					  highp float tmpvar_37;
					  tmpvar_37 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_30.xyz * vec3(tmpvar_37));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19).xyz;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (tmpvar_20, tmpvar_20);
					  lowp float tmpvar_22;
					  tmpvar_22 = (texture2D (_LightTextureB0, vec2(tmpvar_21)).w * textureCube (_LightTexture0, tmpvar_20).w);
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_22);
					  mediump vec3 viewDir_23;
					  viewDir_23 = worldViewDir_5;
					  lowp vec4 c_24;
					  highp float nh_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_26 = tmpvar_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_23)
					  )));
					  nh_25 = tmpvar_28;
					  mediump float y_29;
					  y_29 = (_Shininess * 128.0);
					  highp float tmpvar_30;
					  tmpvar_30 = (pow (nh_25, y_29) * tmpvar_12.w);
					  c_24.xyz = (((tmpvar_10 * tmpvar_1) * diff_26) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_30));
					  c_24.w = (tmpvar_12.w * _Color.w);
					  highp float tmpvar_31;
					  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_24.xyz * vec3(tmpvar_31));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec2 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19).xy;
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2D (_LightTexture0, tmpvar_20).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_21);
					  mediump vec3 viewDir_22;
					  viewDir_22 = worldViewDir_5;
					  lowp vec4 c_23;
					  highp float nh_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_25 = tmpvar_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_22)
					  )));
					  nh_24 = tmpvar_27;
					  mediump float y_28;
					  y_28 = (_Shininess * 128.0);
					  highp float tmpvar_29;
					  tmpvar_29 = (pow (nh_24, y_28) * tmpvar_12.w);
					  c_23.xyz = (((tmpvar_10 * tmpvar_1) * diff_25) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_29));
					  c_23.w = (tmpvar_12.w * _Color.w);
					  highp float tmpvar_30;
					  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_23.xyz * vec3(tmpvar_30));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xyz;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (tmpvar_12, tmpvar_12);
					  lowp float tmpvar_14;
					  tmpvar_14 = texture2D (_LightTexture0, vec2(tmpvar_13)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_14);
					  lowp vec4 c_15;
					  lowp vec4 c_16;
					  lowp float diff_17;
					  mediump float tmpvar_18;
					  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_17 = tmpvar_18;
					  c_16.xyz = ((tmpvar_8 * tmpvar_1) * diff_17);
					  c_16.w = (tmpvar_9.w * _Color.w);
					  c_15.w = c_16.w;
					  c_15.xyz = c_16.xyz;
					  c_3.xyz = c_15.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_11;
					  lowp vec4 c_12;
					  lowp float diff_13;
					  mediump float tmpvar_14;
					  tmpvar_14 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_13 = tmpvar_14;
					  c_12.xyz = ((tmpvar_8 * tmpvar_1) * diff_13);
					  c_12.w = (tmpvar_9.w * _Color.w);
					  c_11.w = c_12.w;
					  c_11.xyz = c_12.xyz;
					  c_3.xyz = c_11.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_7 = tmpvar_9;
					  tmpvar_8 = xlv_COLOR0;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_8.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13);
					  lightCoord_5 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  mediump vec2 P_16;
					  P_16 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_15 = texture2D (_LightTexture0, P_16);
					  highp vec3 LightCoord_17;
					  LightCoord_17 = lightCoord_5.xyz;
					  highp float tmpvar_18;
					  tmpvar_18 = dot (LightCoord_17, LightCoord_17);
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_LightTextureB0, vec2(tmpvar_18));
					  mediump float tmpvar_20;
					  tmpvar_20 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_15.w) * tmpvar_19.w);
					  atten_4 = tmpvar_20;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  lowp vec4 c_21;
					  lowp vec4 c_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_23 = tmpvar_24;
					  c_22.xyz = ((tmpvar_10 * tmpvar_1) * diff_23);
					  c_22.w = (tmpvar_11.w * _Color.w);
					  c_21.w = c_22.w;
					  c_21.xyz = c_22.xyz;
					  c_3.xyz = c_21.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xyz;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (tmpvar_12, tmpvar_12);
					  lowp float tmpvar_14;
					  tmpvar_14 = (texture2D (_LightTextureB0, vec2(tmpvar_13)).w * textureCube (_LightTexture0, tmpvar_12).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_14);
					  lowp vec4 c_15;
					  lowp vec4 c_16;
					  lowp float diff_17;
					  mediump float tmpvar_18;
					  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_17 = tmpvar_18;
					  c_16.xyz = ((tmpvar_8 * tmpvar_1) * diff_17);
					  c_16.w = (tmpvar_9.w * _Color.w);
					  c_15.w = c_16.w;
					  c_15.xyz = c_16.xyz;
					  c_3.xyz = c_15.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xy;
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2D (_LightTexture0, tmpvar_12).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_13);
					  lowp vec4 c_14;
					  lowp vec4 c_15;
					  lowp float diff_16;
					  mediump float tmpvar_17;
					  tmpvar_17 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_16 = tmpvar_17;
					  c_15.xyz = ((tmpvar_8 * tmpvar_1) * diff_16);
					  c_15.w = (tmpvar_9.w * _Color.w);
					  c_14.w = c_15.w;
					  c_14.xyz = c_15.xyz;
					  c_3.xyz = c_14.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xyz;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (tmpvar_12, tmpvar_12);
					  lowp float tmpvar_14;
					  tmpvar_14 = texture2D (_LightTexture0, vec2(tmpvar_13)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_14);
					  lowp vec4 c_15;
					  lowp float diff_16;
					  mediump float tmpvar_17;
					  tmpvar_17 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_16 = tmpvar_17;
					  c_15.xyz = ((tmpvar_8 * tmpvar_1) * diff_16);
					  c_15.w = (tmpvar_9.w * _Color.w);
					  highp float tmpvar_18;
					  tmpvar_18 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_15.xyz * vec3(tmpvar_18));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_11;
					  lowp float diff_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_12 = tmpvar_13;
					  c_11.xyz = ((tmpvar_8 * tmpvar_1) * diff_12);
					  c_11.w = (tmpvar_9.w * _Color.w);
					  highp float tmpvar_14;
					  tmpvar_14 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_11.xyz * vec3(tmpvar_14));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_7 = tmpvar_9;
					  tmpvar_8 = xlv_COLOR0;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_8.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13);
					  lightCoord_5 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  mediump vec2 P_16;
					  P_16 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_15 = texture2D (_LightTexture0, P_16);
					  highp vec3 LightCoord_17;
					  LightCoord_17 = lightCoord_5.xyz;
					  highp float tmpvar_18;
					  tmpvar_18 = dot (LightCoord_17, LightCoord_17);
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_LightTextureB0, vec2(tmpvar_18));
					  mediump float tmpvar_20;
					  tmpvar_20 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_15.w) * tmpvar_19.w);
					  atten_4 = tmpvar_20;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  lowp vec4 c_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_22 = tmpvar_23;
					  c_21.xyz = ((tmpvar_10 * tmpvar_1) * diff_22);
					  c_21.w = (tmpvar_11.w * _Color.w);
					  highp float tmpvar_24;
					  tmpvar_24 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_21.xyz * vec3(tmpvar_24));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xyz;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (tmpvar_12, tmpvar_12);
					  lowp float tmpvar_14;
					  tmpvar_14 = (texture2D (_LightTextureB0, vec2(tmpvar_13)).w * textureCube (_LightTexture0, tmpvar_12).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_14);
					  lowp vec4 c_15;
					  lowp float diff_16;
					  mediump float tmpvar_17;
					  tmpvar_17 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_16 = tmpvar_17;
					  c_15.xyz = ((tmpvar_8 * tmpvar_1) * diff_16);
					  c_15.w = (tmpvar_9.w * _Color.w);
					  highp float tmpvar_18;
					  tmpvar_18 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_15.xyz * vec3(tmpvar_18));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_8 = (tmpvar_9.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_LightMatrix0 * tmpvar_11).xy;
					  lowp float tmpvar_13;
					  tmpvar_13 = texture2D (_LightTexture0, tmpvar_12).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_13);
					  lowp vec4 c_14;
					  lowp float diff_15;
					  mediump float tmpvar_16;
					  tmpvar_16 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_15 = tmpvar_16;
					  c_14.xyz = ((tmpvar_8 * tmpvar_1) * diff_15);
					  c_14.w = (tmpvar_9.w * _Color.w);
					  highp float tmpvar_17;
					  tmpvar_17 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_14.xyz * vec3(tmpvar_17));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13).xyz;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (tmpvar_14, tmpvar_14);
					  lowp float tmpvar_16;
					  tmpvar_16 = texture2D (_LightTexture0, vec2(tmpvar_15)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_16);
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  highp float nh_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_21 = tmpvar_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_20 = tmpvar_23;
					  mediump float y_24;
					  y_24 = (_Shininess * 128.0);
					  highp float tmpvar_25;
					  tmpvar_25 = (pow (nh_20, y_24) * tmpvar_11.w);
					  c_19.xyz = (((tmpvar_10 * tmpvar_1) * diff_21) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_25));
					  c_19.w = (tmpvar_11.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = c_19.xyz;
					  c_3.xyz = c_18.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_13;
					  viewDir_13 = worldViewDir_5;
					  lowp vec4 c_14;
					  lowp vec4 c_15;
					  highp float nh_16;
					  lowp float diff_17;
					  mediump float tmpvar_18;
					  tmpvar_18 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_17 = tmpvar_18;
					  mediump float tmpvar_19;
					  tmpvar_19 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_13)
					  )));
					  nh_16 = tmpvar_19;
					  mediump float y_20;
					  y_20 = (_Shininess * 128.0);
					  highp float tmpvar_21;
					  tmpvar_21 = (pow (nh_16, y_20) * tmpvar_11.w);
					  c_15.xyz = (((tmpvar_10 * tmpvar_1) * diff_17) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_21));
					  c_15.w = (tmpvar_11.w * _Color.w);
					  c_14.w = c_15.w;
					  c_14.xyz = c_15.xyz;
					  c_3.xyz = c_14.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec4 tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_8 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_7 = tmpvar_11;
					  tmpvar_9 = xlv_COLOR0;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  P_14 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_12 = (tmpvar_13.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_9.xyz);
					  highp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_16;
					  tmpvar_16 = (_LightMatrix0 * tmpvar_15);
					  lightCoord_5 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  mediump vec2 P_18;
					  P_18 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_17 = texture2D (_LightTexture0, P_18);
					  highp vec3 LightCoord_19;
					  LightCoord_19 = lightCoord_5.xyz;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (LightCoord_19, LightCoord_19);
					  lowp vec4 tmpvar_21;
					  tmpvar_21 = texture2D (_LightTextureB0, vec2(tmpvar_20));
					  mediump float tmpvar_22;
					  tmpvar_22 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_17.w) * tmpvar_21.w);
					  atten_4 = tmpvar_22;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  mediump vec3 viewDir_23;
					  viewDir_23 = worldViewDir_7;
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  highp float nh_26;
					  lowp float diff_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_27 = tmpvar_28;
					  mediump float tmpvar_29;
					  tmpvar_29 = max (0.0, dot (tmpvar_6, normalize(
					    (tmpvar_2 + viewDir_23)
					  )));
					  nh_26 = tmpvar_29;
					  mediump float y_30;
					  y_30 = (_Shininess * 128.0);
					  highp float tmpvar_31;
					  tmpvar_31 = (pow (nh_26, y_30) * tmpvar_13.w);
					  c_25.xyz = (((tmpvar_12 * tmpvar_1) * diff_27) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_31));
					  c_25.w = (tmpvar_13.w * _Color.w);
					  c_24.w = c_25.w;
					  c_24.xyz = c_25.xyz;
					  c_3.xyz = c_24.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13).xyz;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (tmpvar_14, tmpvar_14);
					  lowp float tmpvar_16;
					  tmpvar_16 = (texture2D (_LightTextureB0, vec2(tmpvar_15)).w * textureCube (_LightTexture0, tmpvar_14).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_16);
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  lowp vec4 c_19;
					  highp float nh_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_21 = tmpvar_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_20 = tmpvar_23;
					  mediump float y_24;
					  y_24 = (_Shininess * 128.0);
					  highp float tmpvar_25;
					  tmpvar_25 = (pow (nh_20, y_24) * tmpvar_11.w);
					  c_19.xyz = (((tmpvar_10 * tmpvar_1) * diff_21) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_25));
					  c_19.w = (tmpvar_11.w * _Color.w);
					  c_18.w = c_19.w;
					  c_18.xyz = c_19.xyz;
					  c_3.xyz = c_18.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13).xy;
					  lowp float tmpvar_15;
					  tmpvar_15 = texture2D (_LightTexture0, tmpvar_14).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_15);
					  mediump vec3 viewDir_16;
					  viewDir_16 = worldViewDir_5;
					  lowp vec4 c_17;
					  lowp vec4 c_18;
					  highp float nh_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_20 = tmpvar_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_16)
					  )));
					  nh_19 = tmpvar_22;
					  mediump float y_23;
					  y_23 = (_Shininess * 128.0);
					  highp float tmpvar_24;
					  tmpvar_24 = (pow (nh_19, y_23) * tmpvar_11.w);
					  c_18.xyz = (((tmpvar_10 * tmpvar_1) * diff_20) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_24));
					  c_18.w = (tmpvar_11.w * _Color.w);
					  c_17.w = c_18.w;
					  c_17.xyz = c_18.xyz;
					  c_3.xyz = c_17.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13).xyz;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (tmpvar_14, tmpvar_14);
					  lowp float tmpvar_16;
					  tmpvar_16 = texture2D (_LightTexture0, vec2(tmpvar_15)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_16);
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  highp float nh_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_20 = tmpvar_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_19 = tmpvar_22;
					  mediump float y_23;
					  y_23 = (_Shininess * 128.0);
					  highp float tmpvar_24;
					  tmpvar_24 = (pow (nh_19, y_23) * tmpvar_11.w);
					  c_18.xyz = (((tmpvar_10 * tmpvar_1) * diff_20) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_24));
					  c_18.w = (tmpvar_11.w * _Color.w);
					  highp float tmpvar_25;
					  tmpvar_25 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_18.xyz * vec3(tmpvar_25));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_13;
					  viewDir_13 = worldViewDir_5;
					  lowp vec4 c_14;
					  highp float nh_15;
					  lowp float diff_16;
					  mediump float tmpvar_17;
					  tmpvar_17 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_16 = tmpvar_17;
					  mediump float tmpvar_18;
					  tmpvar_18 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_13)
					  )));
					  nh_15 = tmpvar_18;
					  mediump float y_19;
					  y_19 = (_Shininess * 128.0);
					  highp float tmpvar_20;
					  tmpvar_20 = (pow (nh_15, y_19) * tmpvar_11.w);
					  c_14.xyz = (((tmpvar_10 * tmpvar_1) * diff_16) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_20));
					  c_14.w = (tmpvar_11.w * _Color.w);
					  highp float tmpvar_21;
					  tmpvar_21 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_14.xyz * vec3(tmpvar_21));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec4 tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_8 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_7 = tmpvar_11;
					  tmpvar_9 = xlv_COLOR0;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_12;
					  lowp vec4 tmpvar_13;
					  highp vec2 P_14;
					  P_14 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_13 = texture2D (_MainTex, P_14);
					  tmpvar_12 = (tmpvar_13.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_9.xyz);
					  highp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_16;
					  tmpvar_16 = (_LightMatrix0 * tmpvar_15);
					  lightCoord_5 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  mediump vec2 P_18;
					  P_18 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_17 = texture2D (_LightTexture0, P_18);
					  highp vec3 LightCoord_19;
					  LightCoord_19 = lightCoord_5.xyz;
					  highp float tmpvar_20;
					  tmpvar_20 = dot (LightCoord_19, LightCoord_19);
					  lowp vec4 tmpvar_21;
					  tmpvar_21 = texture2D (_LightTextureB0, vec2(tmpvar_20));
					  mediump float tmpvar_22;
					  tmpvar_22 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_17.w) * tmpvar_21.w);
					  atten_4 = tmpvar_22;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  mediump vec3 viewDir_23;
					  viewDir_23 = worldViewDir_7;
					  lowp vec4 c_24;
					  highp float nh_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_26 = tmpvar_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (tmpvar_6, normalize(
					    (tmpvar_2 + viewDir_23)
					  )));
					  nh_25 = tmpvar_28;
					  mediump float y_29;
					  y_29 = (_Shininess * 128.0);
					  highp float tmpvar_30;
					  tmpvar_30 = (pow (nh_25, y_29) * tmpvar_13.w);
					  c_24.xyz = (((tmpvar_12 * tmpvar_1) * diff_26) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_30));
					  c_24.w = (tmpvar_13.w * _Color.w);
					  highp float tmpvar_31;
					  tmpvar_31 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_24.xyz * vec3(tmpvar_31));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13).xyz;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (tmpvar_14, tmpvar_14);
					  lowp float tmpvar_16;
					  tmpvar_16 = (texture2D (_LightTextureB0, vec2(tmpvar_15)).w * textureCube (_LightTexture0, tmpvar_14).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_16);
					  mediump vec3 viewDir_17;
					  viewDir_17 = worldViewDir_5;
					  lowp vec4 c_18;
					  highp float nh_19;
					  lowp float diff_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_20 = tmpvar_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_17)
					  )));
					  nh_19 = tmpvar_22;
					  mediump float y_23;
					  y_23 = (_Shininess * 128.0);
					  highp float tmpvar_24;
					  tmpvar_24 = (pow (nh_19, y_23) * tmpvar_11.w);
					  c_18.xyz = (((tmpvar_10 * tmpvar_1) * diff_20) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_24));
					  c_18.w = (tmpvar_11.w * _Color.w);
					  highp float tmpvar_25;
					  tmpvar_25 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_18.xyz * vec3(tmpvar_25));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_10;
					  lowp vec4 tmpvar_11;
					  highp vec2 P_12;
					  P_12 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_11 = texture2D (_MainTex, P_12);
					  tmpvar_10 = (tmpvar_11.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_LightMatrix0 * tmpvar_13).xy;
					  lowp float tmpvar_15;
					  tmpvar_15 = texture2D (_LightTexture0, tmpvar_14).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_15);
					  mediump vec3 viewDir_16;
					  viewDir_16 = worldViewDir_5;
					  lowp vec4 c_17;
					  highp float nh_18;
					  lowp float diff_19;
					  mediump float tmpvar_20;
					  tmpvar_20 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_19 = tmpvar_20;
					  mediump float tmpvar_21;
					  tmpvar_21 = max (0.0, dot (tmpvar_4, normalize(
					    (tmpvar_2 + viewDir_16)
					  )));
					  nh_18 = tmpvar_21;
					  mediump float y_22;
					  y_22 = (_Shininess * 128.0);
					  highp float tmpvar_23;
					  tmpvar_23 = (pow (nh_18, y_22) * tmpvar_11.w);
					  c_17.xyz = (((tmpvar_10 * tmpvar_1) * diff_19) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_23));
					  c_17.w = (tmpvar_11.w * _Color.w);
					  highp float tmpvar_24;
					  tmpvar_24 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_17.xyz * vec3(tmpvar_24));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = texture2D (_LightTexture0, vec2(tmpvar_19)).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  lowp vec4 c_21;
					  lowp vec4 c_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_23 = tmpvar_24;
					  c_22.xyz = ((tmpvar_8 * tmpvar_1) * diff_23);
					  c_22.w = (tmpvar_10.w * _Color.w);
					  c_21.w = c_22.w;
					  c_21.xyz = c_22.xyz;
					  c_4.xyz = c_21.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_17;
					  lowp vec4 c_18;
					  lowp float diff_19;
					  mediump float tmpvar_20;
					  tmpvar_20 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_19 = tmpvar_20;
					  c_18.xyz = ((tmpvar_8 * tmpvar_1) * diff_19);
					  c_18.w = (tmpvar_10.w * _Color.w);
					  c_17.w = c_18.w;
					  c_17.xyz = c_18.xyz;
					  c_4.xyz = c_17.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  mediump vec4 lightCoord_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_7 = tmpvar_9;
					  tmpvar_8 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_8.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec4 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19);
					  lightCoord_6 = tmpvar_20;
					  lowp vec4 tmpvar_21;
					  mediump vec2 P_22;
					  P_22 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_21 = texture2D (_LightTexture0, P_22);
					  highp vec3 LightCoord_23;
					  LightCoord_23 = lightCoord_6.xyz;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (LightCoord_23, LightCoord_23);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_LightTextureB0, vec2(tmpvar_24));
					  mediump float tmpvar_26;
					  tmpvar_26 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_21.w) * tmpvar_25.w);
					  atten_5 = tmpvar_26;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  lowp vec4 c_27;
					  lowp vec4 c_28;
					  lowp float diff_29;
					  mediump float tmpvar_30;
					  tmpvar_30 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_29 = tmpvar_30;
					  c_28.xyz = ((tmpvar_10 * tmpvar_1) * diff_29);
					  c_28.w = (tmpvar_12.w * _Color.w);
					  c_27.w = c_28.w;
					  c_27.xyz = c_28.xyz;
					  c_4.xyz = c_27.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = (texture2D (_LightTextureB0, vec2(tmpvar_19)).w * textureCube (_LightTexture0, tmpvar_18).w);
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  lowp vec4 c_21;
					  lowp vec4 c_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_23 = tmpvar_24;
					  c_22.xyz = ((tmpvar_8 * tmpvar_1) * diff_23);
					  c_22.w = (tmpvar_10.w * _Color.w);
					  c_21.w = c_22.w;
					  c_21.xyz = c_22.xyz;
					  c_4.xyz = c_21.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec2 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xy;
					  lowp float tmpvar_19;
					  tmpvar_19 = texture2D (_LightTexture0, tmpvar_18).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_19);
					  lowp vec4 c_20;
					  lowp vec4 c_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_22 = tmpvar_23;
					  c_21.xyz = ((tmpvar_8 * tmpvar_1) * diff_22);
					  c_21.w = (tmpvar_10.w * _Color.w);
					  c_20.w = c_21.w;
					  c_20.xyz = c_21.xyz;
					  c_4.xyz = c_20.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = texture2D (_LightTexture0, vec2(tmpvar_19)).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  lowp vec4 c_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_22 = tmpvar_23;
					  c_21.xyz = ((tmpvar_8 * tmpvar_1) * diff_22);
					  c_21.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_24;
					  tmpvar_24 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_21.xyz * vec3(tmpvar_24));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  lowp vec4 c_17;
					  lowp float diff_18;
					  mediump float tmpvar_19;
					  tmpvar_19 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_18 = tmpvar_19;
					  c_17.xyz = ((tmpvar_8 * tmpvar_1) * diff_18);
					  c_17.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_20;
					  tmpvar_20 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_17.xyz * vec3(tmpvar_20));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  mediump vec4 lightCoord_6;
					  lowp vec3 lightDir_7;
					  highp vec4 tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_7 = tmpvar_9;
					  tmpvar_8 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_8.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec4 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19);
					  lightCoord_6 = tmpvar_20;
					  lowp vec4 tmpvar_21;
					  mediump vec2 P_22;
					  P_22 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_21 = texture2D (_LightTexture0, P_22);
					  highp vec3 LightCoord_23;
					  LightCoord_23 = lightCoord_6.xyz;
					  highp float tmpvar_24;
					  tmpvar_24 = dot (LightCoord_23, LightCoord_23);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_LightTextureB0, vec2(tmpvar_24));
					  mediump float tmpvar_26;
					  tmpvar_26 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_21.w) * tmpvar_25.w);
					  atten_5 = tmpvar_26;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  lowp vec4 c_27;
					  lowp float diff_28;
					  mediump float tmpvar_29;
					  tmpvar_29 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_28 = tmpvar_29;
					  c_27.xyz = ((tmpvar_10 * tmpvar_1) * diff_28);
					  c_27.w = (tmpvar_12.w * _Color.w);
					  highp float tmpvar_30;
					  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_27.xyz * vec3(tmpvar_30));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  tmpvar_7 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xyz;
					  highp float tmpvar_19;
					  tmpvar_19 = dot (tmpvar_18, tmpvar_18);
					  lowp float tmpvar_20;
					  tmpvar_20 = (texture2D (_LightTextureB0, vec2(tmpvar_19)).w * textureCube (_LightTexture0, tmpvar_18).w);
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_20);
					  lowp vec4 c_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_22 = tmpvar_23;
					  c_21.xyz = ((tmpvar_8 * tmpvar_1) * diff_22);
					  c_21.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_24;
					  tmpvar_24 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_21.xyz * vec3(tmpvar_24));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 lightDir_5;
					  highp vec4 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = _WorldSpaceLightPos0.xyz;
					  lightDir_5 = tmpvar_7;
					  tmpvar_6 = xlv_COLOR0;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  highp vec2 tmpvar_12;
					  tmpvar_12 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_11 = (xlv_TEXCOORD0 + tmpvar_12);
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  tmpvar_8 = (tmpvar_8 * tmpvar_6.xyz);
					  highp vec2 P_13;
					  P_13 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_12);
					  lowp vec3 normal_14;
					  normal_14.xy = ((texture2D (_V_CW_NormalMap, P_13).wy * 2.0) - 1.0);
					  normal_14.z = sqrt((1.0 - clamp (
					    dot (normal_14.xy, normal_14.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_15;
					  tmpvar_15.xy = (normal_14.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_15.z = normal_14.z;
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = normalize(tmpvar_15);
					  tmpvar_9 = tmpvar_16;
					  highp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = xlv_TEXCOORD4;
					  highp vec2 tmpvar_18;
					  tmpvar_18 = (_LightMatrix0 * tmpvar_17).xy;
					  lowp float tmpvar_19;
					  tmpvar_19 = texture2D (_LightTexture0, tmpvar_18).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_9);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_9);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_9);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_5;
					  tmpvar_1 = (tmpvar_1 * tmpvar_19);
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_8 * tmpvar_1) * diff_21);
					  c_20.w = (tmpvar_10.w * _Color.w);
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_20.xyz * vec3(tmpvar_23));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19).xyz;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (tmpvar_20, tmpvar_20);
					  lowp float tmpvar_22;
					  tmpvar_22 = texture2D (_LightTexture0, vec2(tmpvar_21)).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_22);
					  mediump vec3 viewDir_23;
					  viewDir_23 = worldViewDir_5;
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  highp float nh_26;
					  lowp float diff_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_27 = tmpvar_28;
					  mediump float tmpvar_29;
					  tmpvar_29 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_23)
					  )));
					  nh_26 = tmpvar_29;
					  mediump float y_30;
					  y_30 = (_Shininess * 128.0);
					  highp float tmpvar_31;
					  tmpvar_31 = (pow (nh_26, y_30) * tmpvar_12.w);
					  c_25.xyz = (((tmpvar_10 * tmpvar_1) * diff_27) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_31));
					  c_25.w = (tmpvar_12.w * _Color.w);
					  c_24.w = c_25.w;
					  c_24.xyz = c_25.xyz;
					  c_4.xyz = c_24.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_19;
					  viewDir_19 = worldViewDir_5;
					  lowp vec4 c_20;
					  lowp vec4 c_21;
					  highp float nh_22;
					  lowp float diff_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_23 = tmpvar_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_19)
					  )));
					  nh_22 = tmpvar_25;
					  mediump float y_26;
					  y_26 = (_Shininess * 128.0);
					  highp float tmpvar_27;
					  tmpvar_27 = (pow (nh_22, y_26) * tmpvar_12.w);
					  c_21.xyz = (((tmpvar_10 * tmpvar_1) * diff_23) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_27));
					  c_21.w = (tmpvar_12.w * _Color.w);
					  c_20.w = c_21.w;
					  c_20.xyz = c_21.xyz;
					  c_4.xyz = c_20.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  mediump vec4 lightCoord_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec4 tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_8 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_7 = tmpvar_11;
					  tmpvar_9 = xlv_COLOR0;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_12 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_9.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_13 = tmpvar_20;
					  highp vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = xlv_TEXCOORD4;
					  highp vec4 tmpvar_22;
					  tmpvar_22 = (_LightMatrix0 * tmpvar_21);
					  lightCoord_6 = tmpvar_22;
					  lowp vec4 tmpvar_23;
					  mediump vec2 P_24;
					  P_24 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_23 = texture2D (_LightTexture0, P_24);
					  highp vec3 LightCoord_25;
					  LightCoord_25 = lightCoord_6.xyz;
					  highp float tmpvar_26;
					  tmpvar_26 = dot (LightCoord_25, LightCoord_25);
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_LightTextureB0, vec2(tmpvar_26));
					  mediump float tmpvar_28;
					  tmpvar_28 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_23.w) * tmpvar_27.w);
					  atten_5 = tmpvar_28;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_13);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_13);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_13);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  mediump vec3 viewDir_29;
					  viewDir_29 = worldViewDir_7;
					  lowp vec4 c_30;
					  lowp vec4 c_31;
					  highp float nh_32;
					  lowp float diff_33;
					  mediump float tmpvar_34;
					  tmpvar_34 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_33 = tmpvar_34;
					  mediump float tmpvar_35;
					  tmpvar_35 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_29)
					  )));
					  nh_32 = tmpvar_35;
					  mediump float y_36;
					  y_36 = (_Shininess * 128.0);
					  highp float tmpvar_37;
					  tmpvar_37 = (pow (nh_32, y_36) * tmpvar_14.w);
					  c_31.xyz = (((tmpvar_12 * tmpvar_1) * diff_33) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_37));
					  c_31.w = (tmpvar_14.w * _Color.w);
					  c_30.w = c_31.w;
					  c_30.xyz = c_31.xyz;
					  c_4.xyz = c_30.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19).xyz;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (tmpvar_20, tmpvar_20);
					  lowp float tmpvar_22;
					  tmpvar_22 = (texture2D (_LightTextureB0, vec2(tmpvar_21)).w * textureCube (_LightTexture0, tmpvar_20).w);
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_22);
					  mediump vec3 viewDir_23;
					  viewDir_23 = worldViewDir_5;
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  highp float nh_26;
					  lowp float diff_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_27 = tmpvar_28;
					  mediump float tmpvar_29;
					  tmpvar_29 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_23)
					  )));
					  nh_26 = tmpvar_29;
					  mediump float y_30;
					  y_30 = (_Shininess * 128.0);
					  highp float tmpvar_31;
					  tmpvar_31 = (pow (nh_26, y_30) * tmpvar_12.w);
					  c_25.xyz = (((tmpvar_10 * tmpvar_1) * diff_27) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_31));
					  c_25.w = (tmpvar_12.w * _Color.w);
					  c_24.w = c_25.w;
					  c_24.xyz = c_25.xyz;
					  c_4.xyz = c_24.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_42;
					  highp mat3 tmpvar_43;
					  tmpvar_43[0] = _Object2World[0].xyz;
					  tmpvar_43[1] = _Object2World[1].xyz;
					  tmpvar_43[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize((tmpvar_43 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_45;
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_47;
					  tmpvar_47.x = worldTangent_2.x;
					  tmpvar_47.y = tmpvar_46.x;
					  tmpvar_47.z = worldNormal_3.x;
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.y;
					  tmpvar_48.y = tmpvar_46.y;
					  tmpvar_48.z = worldNormal_3.y;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.z;
					  tmpvar_49.y = tmpvar_46.z;
					  tmpvar_49.z = worldNormal_3.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_47;
					  xlv_TEXCOORD2 = tmpvar_48;
					  xlv_TEXCOORD3 = tmpvar_49;
					  xlv_TEXCOORD4 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec2 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19).xy;
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2D (_LightTexture0, tmpvar_20).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_21);
					  mediump vec3 viewDir_22;
					  viewDir_22 = worldViewDir_5;
					  lowp vec4 c_23;
					  lowp vec4 c_24;
					  highp float nh_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_26 = tmpvar_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_22)
					  )));
					  nh_25 = tmpvar_28;
					  mediump float y_29;
					  y_29 = (_Shininess * 128.0);
					  highp float tmpvar_30;
					  tmpvar_30 = (pow (nh_25, y_29) * tmpvar_12.w);
					  c_24.xyz = (((tmpvar_10 * tmpvar_1) * diff_26) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_30));
					  c_24.w = (tmpvar_12.w * _Color.w);
					  c_23.w = c_24.w;
					  c_23.xyz = c_24.xyz;
					  c_4.xyz = c_23.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19).xyz;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (tmpvar_20, tmpvar_20);
					  lowp float tmpvar_22;
					  tmpvar_22 = texture2D (_LightTexture0, vec2(tmpvar_21)).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_22);
					  mediump vec3 viewDir_23;
					  viewDir_23 = worldViewDir_5;
					  lowp vec4 c_24;
					  highp float nh_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_26 = tmpvar_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_23)
					  )));
					  nh_25 = tmpvar_28;
					  mediump float y_29;
					  y_29 = (_Shininess * 128.0);
					  highp float tmpvar_30;
					  tmpvar_30 = (pow (nh_25, y_29) * tmpvar_12.w);
					  c_24.xyz = (((tmpvar_10 * tmpvar_1) * diff_26) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_30));
					  c_24.w = (tmpvar_12.w * _Color.w);
					  highp float tmpvar_31;
					  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_24.xyz * vec3(tmpvar_31));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  mediump vec3 viewDir_19;
					  viewDir_19 = worldViewDir_5;
					  lowp vec4 c_20;
					  highp float nh_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_22 = tmpvar_23;
					  mediump float tmpvar_24;
					  tmpvar_24 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_19)
					  )));
					  nh_21 = tmpvar_24;
					  mediump float y_25;
					  y_25 = (_Shininess * 128.0);
					  highp float tmpvar_26;
					  tmpvar_26 = (pow (nh_21, y_25) * tmpvar_12.w);
					  c_20.xyz = (((tmpvar_10 * tmpvar_1) * diff_22) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_26));
					  c_20.w = (tmpvar_12.w * _Color.w);
					  highp float tmpvar_27;
					  tmpvar_27 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_20.xyz * vec3(tmpvar_27));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  mediump vec4 lightCoord_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec4 tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_8 = tmpvar_10;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_7 = tmpvar_11;
					  tmpvar_9 = xlv_COLOR0;
					  lowp vec3 tmpvar_12;
					  lowp vec3 tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  highp vec2 tmpvar_16;
					  tmpvar_16 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_15 = (xlv_TEXCOORD0 + tmpvar_16);
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_12 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_12 = (tmpvar_12 * tmpvar_9.xyz);
					  highp vec2 P_17;
					  P_17 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_16);
					  lowp vec3 normal_18;
					  normal_18.xy = ((texture2D (_V_CW_NormalMap, P_17).wy * 2.0) - 1.0);
					  normal_18.z = sqrt((1.0 - clamp (
					    dot (normal_18.xy, normal_18.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_19;
					  tmpvar_19.xy = (normal_18.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_19.z = normal_18.z;
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = normalize(tmpvar_19);
					  tmpvar_13 = tmpvar_20;
					  highp vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = xlv_TEXCOORD4;
					  highp vec4 tmpvar_22;
					  tmpvar_22 = (_LightMatrix0 * tmpvar_21);
					  lightCoord_6 = tmpvar_22;
					  lowp vec4 tmpvar_23;
					  mediump vec2 P_24;
					  P_24 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_23 = texture2D (_LightTexture0, P_24);
					  highp vec3 LightCoord_25;
					  LightCoord_25 = lightCoord_6.xyz;
					  highp float tmpvar_26;
					  tmpvar_26 = dot (LightCoord_25, LightCoord_25);
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_LightTextureB0, vec2(tmpvar_26));
					  mediump float tmpvar_28;
					  tmpvar_28 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_23.w) * tmpvar_27.w);
					  atten_5 = tmpvar_28;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_13);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_13);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_13);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  mediump vec3 viewDir_29;
					  viewDir_29 = worldViewDir_7;
					  lowp vec4 c_30;
					  highp float nh_31;
					  lowp float diff_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_32 = tmpvar_33;
					  mediump float tmpvar_34;
					  tmpvar_34 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_29)
					  )));
					  nh_31 = tmpvar_34;
					  mediump float y_35;
					  y_35 = (_Shininess * 128.0);
					  highp float tmpvar_36;
					  tmpvar_36 = (pow (nh_31, y_35) * tmpvar_14.w);
					  c_30.xyz = (((tmpvar_12 * tmpvar_1) * diff_32) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_36));
					  c_30.w = (tmpvar_14.w * _Color.w);
					  highp float tmpvar_37;
					  tmpvar_37 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_30.xyz * vec3(tmpvar_37));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19).xyz;
					  highp float tmpvar_21;
					  tmpvar_21 = dot (tmpvar_20, tmpvar_20);
					  lowp float tmpvar_22;
					  tmpvar_22 = (texture2D (_LightTextureB0, vec2(tmpvar_21)).w * textureCube (_LightTexture0, tmpvar_20).w);
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_22);
					  mediump vec3 viewDir_23;
					  viewDir_23 = worldViewDir_5;
					  lowp vec4 c_24;
					  highp float nh_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_26 = tmpvar_27;
					  mediump float tmpvar_28;
					  tmpvar_28 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_23)
					  )));
					  nh_25 = tmpvar_28;
					  mediump float y_29;
					  y_29 = (_Shininess * 128.0);
					  highp float tmpvar_30;
					  tmpvar_30 = (pow (nh_25, y_29) * tmpvar_12.w);
					  c_24.xyz = (((tmpvar_10 * tmpvar_1) * diff_26) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_30));
					  c_24.w = (tmpvar_12.w * _Color.w);
					  highp float tmpvar_31;
					  tmpvar_31 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_24.xyz * vec3(tmpvar_31));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  tmpvar_4 = (glstate_matrix_mvp * vertex_23);
					  highp vec4 v_40;
					  v_40.x = tmpvar_6;
					  v_40.y = tmpvar_7;
					  v_40.z = tmpvar_8;
					  v_40.w = tmpvar_9;
					  highp vec4 v_41;
					  v_41.x = tmpvar_11;
					  v_41.y = tmpvar_12;
					  v_41.z = tmpvar_13;
					  v_41.w = tmpvar_14;
					  highp vec4 v_42;
					  v_42.x = tmpvar_16;
					  v_42.y = tmpvar_17;
					  v_42.z = tmpvar_18;
					  v_42.w = tmpvar_19;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_39.x)
					   + 
					    (v_41.xyz * tmpvar_39.y)
					  ) + (v_42.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  lowp vec3 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  lowp vec3 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					  xlv_TEXCOORD4 = (_Object2World * vertex_23).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD6 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec3 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying lowp vec4 xlv_COLOR0;
					varying highp float xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec4 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD4));
					  worldViewDir_5 = tmpvar_9;
					  tmpvar_7 = xlv_COLOR0;
					  lowp vec3 tmpvar_10;
					  lowp vec3 tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  highp vec2 tmpvar_14;
					  tmpvar_14 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_13 = (xlv_TEXCOORD0 + tmpvar_14);
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_10 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_10 = (tmpvar_10 * tmpvar_7.xyz);
					  highp vec2 P_15;
					  P_15 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_14);
					  lowp vec3 normal_16;
					  normal_16.xy = ((texture2D (_V_CW_NormalMap, P_15).wy * 2.0) - 1.0);
					  normal_16.z = sqrt((1.0 - clamp (
					    dot (normal_16.xy, normal_16.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_17;
					  tmpvar_17.xy = (normal_16.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_17.z = normal_16.z;
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = normalize(tmpvar_17);
					  tmpvar_11 = tmpvar_18;
					  highp vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = xlv_TEXCOORD4;
					  highp vec2 tmpvar_20;
					  tmpvar_20 = (_LightMatrix0 * tmpvar_19).xy;
					  lowp float tmpvar_21;
					  tmpvar_21 = texture2D (_LightTexture0, tmpvar_20).w;
					  worldN_3.x = dot (xlv_TEXCOORD1, tmpvar_11);
					  worldN_3.y = dot (xlv_TEXCOORD2, tmpvar_11);
					  worldN_3.z = dot (xlv_TEXCOORD3, tmpvar_11);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_21);
					  mediump vec3 viewDir_22;
					  viewDir_22 = worldViewDir_5;
					  lowp vec4 c_23;
					  highp float nh_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (worldN_3, tmpvar_2));
					  diff_25 = tmpvar_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (worldN_3, normalize(
					    (tmpvar_2 + viewDir_22)
					  )));
					  nh_24 = tmpvar_27;
					  mediump float y_28;
					  y_28 = (_Shininess * 128.0);
					  highp float tmpvar_29;
					  tmpvar_29 = (pow (nh_24, y_28) * tmpvar_12.w);
					  c_23.xyz = (((tmpvar_10 * tmpvar_1) * diff_25) + ((tmpvar_1 * _SpecColor.xyz) * tmpvar_29));
					  c_23.w = (tmpvar_12.w * _Color.w);
					  highp float tmpvar_30;
					  tmpvar_30 = clamp (xlv_TEXCOORD6, 0.0, 1.0);
					  c_4.xyz = (c_23.xyz * vec3(tmpvar_30));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = 1.0;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = worldViewDir_5;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  P_15 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_13 = (tmpvar_14.w * _Color.w);
					  mediump vec3 inVec_16;
					  inVec_16 = tmpvar_7;
					  tmpvar_12 = ((textureCube (_V_CW_Cube, tmpvar_8).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_13 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_17;
					  tmpvar_17 = pow ((1.0 - max (0.0, 
					    dot ((inVec_16 * inversesqrt(max (0.001, 
					      dot (inVec_16, inVec_16)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_12 = tmpvar_18;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_11, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_11 = tmpvar_19;
					  highp vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = (_LightMatrix0 * tmpvar_20).xyz;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (tmpvar_21, tmpvar_21);
					  lowp float tmpvar_23;
					  tmpvar_23 = texture2D (_LightTexture0, vec2(tmpvar_22)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_23);
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_26 = tmpvar_27;
					  c_25.xyz = ((tmpvar_11 * tmpvar_1) * diff_26);
					  c_25.w = tmpvar_13;
					  c_24.w = c_25.w;
					  c_24.xyz = c_25.xyz;
					  c_3.xyz = c_24.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = 1.0;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = worldViewDir_5;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  P_15 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_13 = (tmpvar_14.w * _Color.w);
					  mediump vec3 inVec_16;
					  inVec_16 = tmpvar_7;
					  tmpvar_12 = ((textureCube (_V_CW_Cube, tmpvar_8).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_13 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_17;
					  tmpvar_17 = pow ((1.0 - max (0.0, 
					    dot ((inVec_16 * inversesqrt(max (0.001, 
					      dot (inVec_16, inVec_16)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_12 = tmpvar_18;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_11, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_11 = tmpvar_19;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  lowp vec4 c_20;
					  lowp vec4 c_21;
					  lowp float diff_22;
					  mediump float tmpvar_23;
					  tmpvar_23 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_22 = tmpvar_23;
					  c_21.xyz = ((tmpvar_11 * tmpvar_1) * diff_22);
					  c_21.w = tmpvar_13;
					  c_20.w = c_21.w;
					  c_20.xyz = c_21.xyz;
					  c_3.xyz = c_20.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = 1.0;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_8 = tmpvar_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_7 = tmpvar_12;
					  tmpvar_9 = worldViewDir_7;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_13;
					  lowp vec3 tmpvar_14;
					  lowp float tmpvar_15;
					  lowp vec4 tmpvar_16;
					  highp vec2 P_17;
					  P_17 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_16 = texture2D (_MainTex, P_17);
					  tmpvar_13 = (tmpvar_16.xyz * _Color.xyz);
					  tmpvar_15 = (tmpvar_16.w * _Color.w);
					  mediump vec3 inVec_18;
					  inVec_18 = tmpvar_9;
					  tmpvar_14 = ((textureCube (_V_CW_Cube, tmpvar_10).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_15 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_19;
					  tmpvar_19 = pow ((1.0 - max (0.0, 
					    dot ((inVec_18 * inversesqrt(max (0.001, 
					      dot (inVec_18, inVec_18)
					    ))), tmpvar_6)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = mix (tmpvar_14, _V_CW_Rim_Color.xyz, vec3(tmpvar_19));
					  tmpvar_14 = tmpvar_20;
					  mediump vec3 tmpvar_21;
					  tmpvar_21 = mix (tmpvar_13, _V_CW_Rim_Color.xyz, vec3(tmpvar_19));
					  tmpvar_13 = tmpvar_21;
					  highp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_23;
					  tmpvar_23 = (_LightMatrix0 * tmpvar_22);
					  lightCoord_5 = tmpvar_23;
					  lowp vec4 tmpvar_24;
					  mediump vec2 P_25;
					  P_25 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_24 = texture2D (_LightTexture0, P_25);
					  highp vec3 LightCoord_26;
					  LightCoord_26 = lightCoord_5.xyz;
					  highp float tmpvar_27;
					  tmpvar_27 = dot (LightCoord_26, LightCoord_26);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_LightTextureB0, vec2(tmpvar_27));
					  mediump float tmpvar_29;
					  tmpvar_29 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_24.w) * tmpvar_28.w);
					  atten_4 = tmpvar_29;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  lowp vec4 c_30;
					  lowp vec4 c_31;
					  lowp float diff_32;
					  mediump float tmpvar_33;
					  tmpvar_33 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_32 = tmpvar_33;
					  c_31.xyz = ((tmpvar_13 * tmpvar_1) * diff_32);
					  c_31.w = tmpvar_15;
					  c_30.w = c_31.w;
					  c_30.xyz = c_31.xyz;
					  c_3.xyz = c_30.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = 1.0;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = worldViewDir_5;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  P_15 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_13 = (tmpvar_14.w * _Color.w);
					  mediump vec3 inVec_16;
					  inVec_16 = tmpvar_7;
					  tmpvar_12 = ((textureCube (_V_CW_Cube, tmpvar_8).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_13 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_17;
					  tmpvar_17 = pow ((1.0 - max (0.0, 
					    dot ((inVec_16 * inversesqrt(max (0.001, 
					      dot (inVec_16, inVec_16)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_12 = tmpvar_18;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_11, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_11 = tmpvar_19;
					  highp vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = (_LightMatrix0 * tmpvar_20).xyz;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (tmpvar_21, tmpvar_21);
					  lowp float tmpvar_23;
					  tmpvar_23 = (texture2D (_LightTextureB0, vec2(tmpvar_22)).w * textureCube (_LightTexture0, tmpvar_21).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_23);
					  lowp vec4 c_24;
					  lowp vec4 c_25;
					  lowp float diff_26;
					  mediump float tmpvar_27;
					  tmpvar_27 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_26 = tmpvar_27;
					  c_25.xyz = ((tmpvar_11 * tmpvar_1) * diff_26);
					  c_25.w = tmpvar_13;
					  c_24.w = c_25.w;
					  c_24.xyz = c_25.xyz;
					  c_3.xyz = c_24.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = 1.0;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = worldViewDir_5;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  P_15 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_13 = (tmpvar_14.w * _Color.w);
					  mediump vec3 inVec_16;
					  inVec_16 = tmpvar_7;
					  tmpvar_12 = ((textureCube (_V_CW_Cube, tmpvar_8).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_13 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_17;
					  tmpvar_17 = pow ((1.0 - max (0.0, 
					    dot ((inVec_16 * inversesqrt(max (0.001, 
					      dot (inVec_16, inVec_16)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_12 = tmpvar_18;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_11, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_11 = tmpvar_19;
					  highp vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_21;
					  tmpvar_21 = (_LightMatrix0 * tmpvar_20).xy;
					  lowp float tmpvar_22;
					  tmpvar_22 = texture2D (_LightTexture0, tmpvar_21).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_22);
					  lowp vec4 c_23;
					  lowp vec4 c_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_25 = tmpvar_26;
					  c_24.xyz = ((tmpvar_11 * tmpvar_1) * diff_25);
					  c_24.w = tmpvar_13;
					  c_23.w = c_24.w;
					  c_23.xyz = c_24.xyz;
					  c_3.xyz = c_23.xyz;
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = 1.0;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = worldViewDir_5;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  P_15 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_13 = (tmpvar_14.w * _Color.w);
					  mediump vec3 inVec_16;
					  inVec_16 = tmpvar_7;
					  tmpvar_12 = ((textureCube (_V_CW_Cube, tmpvar_8).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_13 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_17;
					  tmpvar_17 = pow ((1.0 - max (0.0, 
					    dot ((inVec_16 * inversesqrt(max (0.001, 
					      dot (inVec_16, inVec_16)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_12 = tmpvar_18;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_11, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_11 = tmpvar_19;
					  highp vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = (_LightMatrix0 * tmpvar_20).xyz;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (tmpvar_21, tmpvar_21);
					  lowp float tmpvar_23;
					  tmpvar_23 = texture2D (_LightTexture0, vec2(tmpvar_22)).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_23);
					  lowp vec4 c_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_25 = tmpvar_26;
					  c_24.xyz = ((tmpvar_11 * tmpvar_1) * diff_25);
					  c_24.w = tmpvar_13;
					  highp float tmpvar_27;
					  tmpvar_27 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_24.xyz * vec3(tmpvar_27));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = 1.0;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = worldViewDir_5;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  P_15 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_13 = (tmpvar_14.w * _Color.w);
					  mediump vec3 inVec_16;
					  inVec_16 = tmpvar_7;
					  tmpvar_12 = ((textureCube (_V_CW_Cube, tmpvar_8).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_13 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_17;
					  tmpvar_17 = pow ((1.0 - max (0.0, 
					    dot ((inVec_16 * inversesqrt(max (0.001, 
					      dot (inVec_16, inVec_16)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_12 = tmpvar_18;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_11, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_11 = tmpvar_19;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  lowp vec4 c_20;
					  lowp float diff_21;
					  mediump float tmpvar_22;
					  tmpvar_22 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_21 = tmpvar_22;
					  c_20.xyz = ((tmpvar_11 * tmpvar_1) * diff_21);
					  c_20.w = tmpvar_13;
					  highp float tmpvar_23;
					  tmpvar_23 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_20.xyz * vec3(tmpvar_23));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp float atten_4;
					  mediump vec4 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 worldViewDir_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = 1.0;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_8 = tmpvar_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_7 = tmpvar_12;
					  tmpvar_9 = worldViewDir_7;
					  tmpvar_6 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_13;
					  lowp vec3 tmpvar_14;
					  lowp float tmpvar_15;
					  lowp vec4 tmpvar_16;
					  highp vec2 P_17;
					  P_17 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_16 = texture2D (_MainTex, P_17);
					  tmpvar_13 = (tmpvar_16.xyz * _Color.xyz);
					  tmpvar_15 = (tmpvar_16.w * _Color.w);
					  mediump vec3 inVec_18;
					  inVec_18 = tmpvar_9;
					  tmpvar_14 = ((textureCube (_V_CW_Cube, tmpvar_10).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_15 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_19;
					  tmpvar_19 = pow ((1.0 - max (0.0, 
					    dot ((inVec_18 * inversesqrt(max (0.001, 
					      dot (inVec_18, inVec_18)
					    ))), tmpvar_6)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_20;
					  tmpvar_20 = mix (tmpvar_14, _V_CW_Rim_Color.xyz, vec3(tmpvar_19));
					  tmpvar_14 = tmpvar_20;
					  mediump vec3 tmpvar_21;
					  tmpvar_21 = mix (tmpvar_13, _V_CW_Rim_Color.xyz, vec3(tmpvar_19));
					  tmpvar_13 = tmpvar_21;
					  highp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = xlv_TEXCOORD2;
					  highp vec4 tmpvar_23;
					  tmpvar_23 = (_LightMatrix0 * tmpvar_22);
					  lightCoord_5 = tmpvar_23;
					  lowp vec4 tmpvar_24;
					  mediump vec2 P_25;
					  P_25 = ((lightCoord_5.xy / lightCoord_5.w) + 0.5);
					  tmpvar_24 = texture2D (_LightTexture0, P_25);
					  highp vec3 LightCoord_26;
					  LightCoord_26 = lightCoord_5.xyz;
					  highp float tmpvar_27;
					  tmpvar_27 = dot (LightCoord_26, LightCoord_26);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_LightTextureB0, vec2(tmpvar_27));
					  mediump float tmpvar_29;
					  tmpvar_29 = ((float(
					    (lightCoord_5.z > 0.0)
					  ) * tmpvar_24.w) * tmpvar_28.w);
					  atten_4 = tmpvar_29;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * atten_4);
					  lowp vec4 c_30;
					  lowp float diff_31;
					  mediump float tmpvar_32;
					  tmpvar_32 = max (0.0, dot (tmpvar_6, tmpvar_2));
					  diff_31 = tmpvar_32;
					  c_30.xyz = ((tmpvar_13 * tmpvar_1) * diff_31);
					  c_30.w = tmpvar_15;
					  highp float tmpvar_33;
					  tmpvar_33 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_30.xyz * vec3(tmpvar_33));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = 1.0;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD2));
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = worldViewDir_5;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  P_15 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_13 = (tmpvar_14.w * _Color.w);
					  mediump vec3 inVec_16;
					  inVec_16 = tmpvar_7;
					  tmpvar_12 = ((textureCube (_V_CW_Cube, tmpvar_8).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_13 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_17;
					  tmpvar_17 = pow ((1.0 - max (0.0, 
					    dot ((inVec_16 * inversesqrt(max (0.001, 
					      dot (inVec_16, inVec_16)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_12 = tmpvar_18;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_11, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_11 = tmpvar_19;
					  highp vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = xlv_TEXCOORD2;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = (_LightMatrix0 * tmpvar_20).xyz;
					  highp float tmpvar_22;
					  tmpvar_22 = dot (tmpvar_21, tmpvar_21);
					  lowp float tmpvar_23;
					  tmpvar_23 = (texture2D (_LightTextureB0, vec2(tmpvar_22)).w * textureCube (_LightTexture0, tmpvar_21).w);
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_23);
					  lowp vec4 c_24;
					  lowp float diff_25;
					  mediump float tmpvar_26;
					  tmpvar_26 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_25 = tmpvar_26;
					  c_24.xyz = ((tmpvar_11 * tmpvar_1) * diff_25);
					  c_24.w = tmpvar_13;
					  highp float tmpvar_27;
					  tmpvar_27 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_24.xyz * vec3(tmpvar_27));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_3 = worldNormal_1;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD4 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform mediump mat4 _LightMatrix0;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp float xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec4 c_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 worldViewDir_5;
					  lowp vec3 lightDir_6;
					  highp vec3 tmpvar_7;
					  highp vec3 tmpvar_8;
					  tmpvar_8.x = 1.0;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_6 = tmpvar_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD2));
					  worldViewDir_5 = tmpvar_10;
					  tmpvar_7 = worldViewDir_5;
					  tmpvar_4 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_11;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  lowp vec4 tmpvar_14;
					  highp vec2 P_15;
					  P_15 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_14 = texture2D (_MainTex, P_15);
					  tmpvar_11 = (tmpvar_14.xyz * _Color.xyz);
					  tmpvar_13 = (tmpvar_14.w * _Color.w);
					  mediump vec3 inVec_16;
					  inVec_16 = tmpvar_7;
					  tmpvar_12 = ((textureCube (_V_CW_Cube, tmpvar_8).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_13 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_17;
					  tmpvar_17 = pow ((1.0 - max (0.0, 
					    dot ((inVec_16 * inversesqrt(max (0.001, 
					      dot (inVec_16, inVec_16)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_18;
					  tmpvar_18 = mix (tmpvar_12, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_12 = tmpvar_18;
					  mediump vec3 tmpvar_19;
					  tmpvar_19 = mix (tmpvar_11, _V_CW_Rim_Color.xyz, vec3(tmpvar_17));
					  tmpvar_11 = tmpvar_19;
					  highp vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = xlv_TEXCOORD2;
					  highp vec2 tmpvar_21;
					  tmpvar_21 = (_LightMatrix0 * tmpvar_20).xy;
					  lowp float tmpvar_22;
					  tmpvar_22 = texture2D (_LightTexture0, tmpvar_21).w;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_6;
					  tmpvar_1 = (tmpvar_1 * tmpvar_22);
					  lowp vec4 c_23;
					  lowp float diff_24;
					  mediump float tmpvar_25;
					  tmpvar_25 = max (0.0, dot (tmpvar_4, tmpvar_2));
					  diff_24 = tmpvar_25;
					  c_23.xyz = ((tmpvar_11 * tmpvar_1) * diff_24);
					  c_23.w = tmpvar_13;
					  highp float tmpvar_26;
					  tmpvar_26 = clamp (xlv_TEXCOORD4, 0.0, 1.0);
					  c_3.xyz = (c_23.xyz * vec3(tmpvar_26));
					  c_3.w = 1.0;
					  gl_FragData[0] = c_3;
					}
					
					
					#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "POINT" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SPOT" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
}
 }
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PrePassBase" "RenderType"="CurvedWorld_Opaque" "CurvedWorldTag"="Legacy Shader/Opaque/Diffuse" "CurvedWorldNoneRemoveableKeywords"="" "CurvedWorldAvailableOptions"="V_CW_REFLECTIVE;V_CW_VERTEX_COLOR;_EMISSION;V_CW_RIM;_NORMALMAP;V_CW_SPECULAR_HD;" }
  GpuProgramID 142226
Program "vp" {
SubProgram "gles " {
Keywords { "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying mediump vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					varying mediump vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 tmpvar_2;
					  tmpvar_2 = xlv_TEXCOORD0;
					  res_1.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  res_1.w = 0.0;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying mediump vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump float _Shininess;
					varying mediump vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 tmpvar_2;
					  tmpvar_2 = xlv_TEXCOORD0;
					  res_1.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  res_1.w = _Shininess;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  tmpvar_48.w = tmpvar_39.x;
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  tmpvar_49.w = tmpvar_39.y;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  tmpvar_50.w = tmpvar_39.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  highp vec2 P_4;
					  P_4 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + (_V_CW_MainTex_Scroll * _Time.x));
					  lowp vec3 normal_5;
					  normal_5.xy = ((texture2D (_V_CW_NormalMap, P_4).wy * 2.0) - 1.0);
					  normal_5.z = sqrt((1.0 - clamp (
					    dot (normal_5.xy, normal_5.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_6;
					  tmpvar_6.xy = (normal_5.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_6.z = normal_5.z;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = normalize(tmpvar_6);
					  tmpvar_3 = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = dot (xlv_TEXCOORD1.xyz, tmpvar_3);
					  worldN_2.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = dot (xlv_TEXCOORD2.xyz, tmpvar_3);
					  worldN_2.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD3.xyz, tmpvar_3);
					  worldN_2.z = tmpvar_10;
					  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
					  res_1.w = _Shininess;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  tmpvar_48.w = tmpvar_39.x;
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  tmpvar_49.w = tmpvar_39.y;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  tmpvar_50.w = tmpvar_39.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  highp vec2 P_4;
					  P_4 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + (_V_CW_MainTex_Scroll * _Time.x));
					  lowp vec3 normal_5;
					  normal_5.xy = ((texture2D (_V_CW_NormalMap, P_4).wy * 2.0) - 1.0);
					  normal_5.z = sqrt((1.0 - clamp (
					    dot (normal_5.xy, normal_5.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_6;
					  tmpvar_6.xy = (normal_5.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_6.z = normal_5.z;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = normalize(tmpvar_6);
					  tmpvar_3 = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = dot (xlv_TEXCOORD1.xyz, tmpvar_3);
					  worldN_2.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = dot (xlv_TEXCOORD2.xyz, tmpvar_3);
					  worldN_2.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD3.xyz, tmpvar_3);
					  worldN_2.z = tmpvar_10;
					  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
					  res_1.w = _Shininess;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying mediump vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					varying mediump vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 tmpvar_2;
					  tmpvar_2 = xlv_TEXCOORD0;
					  res_1.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  res_1.w = 0.0;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying mediump vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump float _Shininess;
					varying mediump vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 tmpvar_2;
					  tmpvar_2 = xlv_TEXCOORD0;
					  res_1.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  res_1.w = _Shininess;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  tmpvar_48.w = tmpvar_39.x;
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  tmpvar_49.w = tmpvar_39.y;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  tmpvar_50.w = tmpvar_39.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  highp vec2 P_4;
					  P_4 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + (_V_CW_MainTex_Scroll * _Time.x));
					  lowp vec3 normal_5;
					  normal_5.xy = ((texture2D (_V_CW_NormalMap, P_4).wy * 2.0) - 1.0);
					  normal_5.z = sqrt((1.0 - clamp (
					    dot (normal_5.xy, normal_5.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_6;
					  tmpvar_6.xy = (normal_5.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_6.z = normal_5.z;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = normalize(tmpvar_6);
					  tmpvar_3 = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = dot (xlv_TEXCOORD1.xyz, tmpvar_3);
					  worldN_2.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = dot (xlv_TEXCOORD2.xyz, tmpvar_3);
					  worldN_2.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD3.xyz, tmpvar_3);
					  worldN_2.z = tmpvar_10;
					  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
					  res_1.w = 0.0;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  tmpvar_48.w = tmpvar_39.x;
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  tmpvar_49.w = tmpvar_39.y;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  tmpvar_50.w = tmpvar_39.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  highp vec2 P_4;
					  P_4 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + (_V_CW_MainTex_Scroll * _Time.x));
					  lowp vec3 normal_5;
					  normal_5.xy = ((texture2D (_V_CW_NormalMap, P_4).wy * 2.0) - 1.0);
					  normal_5.z = sqrt((1.0 - clamp (
					    dot (normal_5.xy, normal_5.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_6;
					  tmpvar_6.xy = (normal_5.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_6.z = normal_5.z;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = normalize(tmpvar_6);
					  tmpvar_3 = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = dot (xlv_TEXCOORD1.xyz, tmpvar_3);
					  worldN_2.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = dot (xlv_TEXCOORD2.xyz, tmpvar_3);
					  worldN_2.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD3.xyz, tmpvar_3);
					  worldN_2.z = tmpvar_10;
					  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
					  res_1.w = _Shininess;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying mediump vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					varying mediump vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 tmpvar_2;
					  tmpvar_2 = xlv_TEXCOORD0;
					  res_1.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  res_1.w = 0.0;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying mediump vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump float _Shininess;
					varying mediump vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 tmpvar_2;
					  tmpvar_2 = xlv_TEXCOORD0;
					  res_1.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  res_1.w = _Shininess;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  tmpvar_48.w = tmpvar_39.x;
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  tmpvar_49.w = tmpvar_39.y;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  tmpvar_50.w = tmpvar_39.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  highp vec2 P_4;
					  P_4 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + (_V_CW_MainTex_Scroll * _Time.x));
					  lowp vec3 normal_5;
					  normal_5.xy = ((texture2D (_V_CW_NormalMap, P_4).wy * 2.0) - 1.0);
					  normal_5.z = sqrt((1.0 - clamp (
					    dot (normal_5.xy, normal_5.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_6;
					  tmpvar_6.xy = (normal_5.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_6.z = normal_5.z;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = normalize(tmpvar_6);
					  tmpvar_3 = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = dot (xlv_TEXCOORD1.xyz, tmpvar_3);
					  worldN_2.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = dot (xlv_TEXCOORD2.xyz, tmpvar_3);
					  worldN_2.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD3.xyz, tmpvar_3);
					  worldN_2.z = tmpvar_10;
					  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
					  res_1.w = 0.0;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec3 tmpvar_39;
					  tmpvar_39 = (_Object2World * vertex_22).xyz;
					  highp vec4 v_40;
					  v_40.x = tmpvar_5;
					  v_40.y = tmpvar_6;
					  v_40.z = tmpvar_7;
					  v_40.w = tmpvar_8;
					  highp vec4 v_41;
					  v_41.x = tmpvar_10;
					  v_41.y = tmpvar_11;
					  v_41.z = tmpvar_12;
					  v_41.w = tmpvar_13;
					  highp vec4 v_42;
					  v_42.x = tmpvar_15;
					  v_42.y = tmpvar_16;
					  v_42.z = tmpvar_17;
					  v_42.w = tmpvar_18;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = normalize(((
					    (v_40.xyz * tmpvar_38.x)
					   + 
					    (v_41.xyz * tmpvar_38.y)
					  ) + (v_42.xyz * tmpvar_38.z)));
					  worldNormal_3 = tmpvar_43;
					  highp mat3 tmpvar_44;
					  tmpvar_44[0] = _Object2World[0].xyz;
					  tmpvar_44[1] = _Object2World[1].xyz;
					  tmpvar_44[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize((tmpvar_44 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_45;
					  highp float tmpvar_46;
					  tmpvar_46 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_46;
					  lowp vec3 tmpvar_47;
					  tmpvar_47 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_48;
					  tmpvar_48.x = worldTangent_2.x;
					  tmpvar_48.y = tmpvar_47.x;
					  tmpvar_48.z = worldNormal_3.x;
					  tmpvar_48.w = tmpvar_39.x;
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.y;
					  tmpvar_49.y = tmpvar_47.y;
					  tmpvar_49.z = worldNormal_3.y;
					  tmpvar_49.w = tmpvar_39.y;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.z;
					  tmpvar_50.y = tmpvar_47.z;
					  tmpvar_50.z = worldNormal_3.z;
					  tmpvar_50.w = tmpvar_39.z;
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_48;
					  xlv_TEXCOORD2 = tmpvar_49;
					  xlv_TEXCOORD3 = tmpvar_50;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  highp vec2 P_4;
					  P_4 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + (_V_CW_MainTex_Scroll * _Time.x));
					  lowp vec3 normal_5;
					  normal_5.xy = ((texture2D (_V_CW_NormalMap, P_4).wy * 2.0) - 1.0);
					  normal_5.z = sqrt((1.0 - clamp (
					    dot (normal_5.xy, normal_5.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_6;
					  tmpvar_6.xy = (normal_5.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_6.z = normal_5.z;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = normalize(tmpvar_6);
					  tmpvar_3 = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = dot (xlv_TEXCOORD1.xyz, tmpvar_3);
					  worldN_2.x = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = dot (xlv_TEXCOORD2.xyz, tmpvar_3);
					  worldN_2.y = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = dot (xlv_TEXCOORD3.xyz, tmpvar_3);
					  worldN_2.z = tmpvar_10;
					  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
					  res_1.w = _Shininess;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying mediump vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 v_3;
					  highp float tmpvar_4;
					  tmpvar_4 = _World2Object[0].x;
					  v_3.x = tmpvar_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[1].x;
					  v_3.y = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[2].x;
					  v_3.z = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[3].x;
					  v_3.w = tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].y;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].y;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].y;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].y;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].z;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].z;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].z;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].z;
					  v_13.w = tmpvar_17;
					  highp vec3 tmpvar_18;
					  tmpvar_18 = normalize(((
					    (v_3.xyz * _glesNormal.x)
					   + 
					    (v_8.xyz * _glesNormal.y)
					  ) + (v_13.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _Object2World[0].xyz;
					  tmpvar_19[1] = _Object2World[1].xyz;
					  tmpvar_19[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize((tmpvar_19 * _glesTANGENT.xyz));
					  highp vec4 vertex_21;
					  vertex_21.w = _glesVertex.w;
					  highp vec2 xzOff_22;
					  highp vec3 v2_23;
					  highp vec3 v1_24;
					  highp vec3 v0_25;
					  highp vec3 tmpvar_26;
					  tmpvar_26 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_27;
					  tmpvar_27 = (tmpvar_26 + tmpvar_20);
					  v1_24.xz = tmpvar_27.xz;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_26 - ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx)));
					  v2_23.xz = tmpvar_28.xz;
					  highp vec2 tmpvar_29;
					  tmpvar_29.x = float((tmpvar_26.z >= 0.0));
					  tmpvar_29.y = float((tmpvar_26.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_26.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_29 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  highp vec3 tmpvar_30;
					  tmpvar_30.xz = vec2(0.0, 0.0);
					  tmpvar_30.y = (((_V_CW_Bend.x * xzOff_22.x) + (_V_CW_Bend.z * xzOff_22.y)) * 0.001);
					  v0_25 = (tmpvar_26 + tmpvar_30);
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_27.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v1_24.y = (tmpvar_27.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_22 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_22 = (xzOff_22 * xzOff_22);
					  v2_23.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_22.x)
					   + 
					    (_V_CW_Bend.z * xzOff_22.y)
					  ) * 0.001));
					  highp mat3 tmpvar_33;
					  tmpvar_33[0] = _World2Object[0].xyz;
					  tmpvar_33[1] = _World2Object[1].xyz;
					  tmpvar_33[2] = _World2Object[2].xyz;
					  vertex_21.xyz = (_glesVertex.xyz + (tmpvar_33 * tmpvar_30));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  highp vec3 a_35;
					  a_35 = (v2_23 - v0_25);
					  highp vec3 b_36;
					  b_36 = (v1_24 - v0_25);
					  highp vec3 tmpvar_37;
					  tmpvar_37 = normalize((tmpvar_34 * normalize(
					    ((a_35.yzx * b_36.zxy) - (a_35.zxy * b_36.yzx))
					  )));
					  highp vec4 v_38;
					  v_38.x = tmpvar_4;
					  v_38.y = tmpvar_5;
					  v_38.z = tmpvar_6;
					  v_38.w = tmpvar_7;
					  highp vec4 v_39;
					  v_39.x = tmpvar_9;
					  v_39.y = tmpvar_10;
					  v_39.z = tmpvar_11;
					  v_39.w = tmpvar_12;
					  highp vec4 v_40;
					  v_40.x = tmpvar_14;
					  v_40.y = tmpvar_15;
					  v_40.z = tmpvar_16;
					  v_40.w = tmpvar_17;
					  highp vec3 tmpvar_41;
					  tmpvar_41 = normalize(((
					    (v_38.xyz * tmpvar_37.x)
					   + 
					    (v_39.xyz * tmpvar_37.y)
					  ) + (v_40.xyz * tmpvar_37.z)));
					  worldNormal_1 = tmpvar_41;
					  tmpvar_2 = worldNormal_1;
					  gl_Position = (glstate_matrix_mvp * vertex_21);
					  xlv_TEXCOORD0 = tmpvar_2;
					  xlv_TEXCOORD1 = (_Object2World * vertex_21).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying mediump vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 tmpvar_2;
					  highp vec2 tmpvar_3;
					  highp vec3 tmpvar_4;
					  highp vec3 tmpvar_5;
					  tmpvar_3.x = 1.0;
					  tmpvar_4.x = 1.0;
					  tmpvar_5.x = 1.0;
					  tmpvar_2 = xlv_TEXCOORD0;
					  lowp vec3 tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  highp vec2 P_9;
					  P_9 = (tmpvar_3 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_8 = texture2D (_MainTex, P_9);
					  tmpvar_6 = (tmpvar_8.xyz * _Color.xyz);
					  mediump vec3 inVec_10;
					  inVec_10 = tmpvar_4;
					  tmpvar_7 = ((textureCube (_V_CW_Cube, tmpvar_5).xyz * _V_CW_ReflectColor.xyz) * clamp ((
					    (tmpvar_8.w * _Color.w)
					   + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_11;
					  tmpvar_11 = pow ((1.0 - max (0.0, 
					    dot ((inVec_10 * inversesqrt(max (0.001, 
					      dot (inVec_10, inVec_10)
					    ))), tmpvar_2)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_12;
					  tmpvar_12 = mix (tmpvar_7, _V_CW_Rim_Color.xyz, vec3(tmpvar_11));
					  tmpvar_7 = tmpvar_12;
					  mediump vec3 tmpvar_13;
					  tmpvar_13 = mix (tmpvar_6, _V_CW_Rim_Color.xyz, vec3(tmpvar_11));
					  tmpvar_6 = tmpvar_13;
					  res_1.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  res_1.w = 0.0;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
}
 }
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PrePassFinal" "RenderType"="CurvedWorld_Opaque" "CurvedWorldTag"="Legacy Shader/Opaque/Diffuse" "CurvedWorldNoneRemoveableKeywords"="" "CurvedWorldAvailableOptions"="V_CW_REFLECTIVE;V_CW_VERTEX_COLOR;_EMISSION;V_CW_RIM;_NORMALMAP;V_CW_SPECULAR_HD;" }
  ZWrite Off
  GpuProgramID 260559
Program "vp" {
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = texture2D (_MainTex, P_5);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_6;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  c_7.xyz = ((tmpvar_4.xyz * _Color.xyz) * light_3.xyz);
					  c_7.w = (tmpvar_4.w * _Color.w);
					  c_2.xyz = c_7.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = texture2D (_MainTex, P_5);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_7.w;
					  light_3.xyz = (tmpvar_7.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_8;
					  c_8.xyz = ((tmpvar_4.xyz * _Color.xyz) * light_3.xyz);
					  c_8.w = (tmpvar_4.w * _Color.w);
					  c_2.xyz = c_8.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = texture2D (_MainTex, P_5);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_6;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  c_7.xyz = ((tmpvar_4.xyz * _Color.xyz) * light_3.xyz);
					  c_7.w = (tmpvar_4.w * _Color.w);
					  c_2 = c_7;
					  highp float tmpvar_8;
					  tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = texture2D (_MainTex, P_5);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_7.w;
					  light_3.xyz = (tmpvar_7.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_8;
					  c_8.xyz = ((tmpvar_4.xyz * _Color.xyz) * light_3.xyz);
					  c_8.w = (tmpvar_4.w * _Color.w);
					  c_2 = c_8;
					  highp float tmpvar_9;
					  tmpvar_9 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_9));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = texture2D (_MainTex, P_5);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_6;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  lowp float spec_8;
					  mediump float tmpvar_9;
					  tmpvar_9 = (light_3.w * tmpvar_4.w);
					  spec_8 = tmpvar_9;
					  c_7.xyz = (((tmpvar_4.xyz * _Color.xyz) * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_8));
					  c_7.w = (tmpvar_4.w * _Color.w);
					  c_2.xyz = c_7.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = texture2D (_MainTex, P_5);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_7.w;
					  light_3.xyz = (tmpvar_7.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_8;
					  lowp float spec_9;
					  mediump float tmpvar_10;
					  tmpvar_10 = (tmpvar_7.w * tmpvar_4.w);
					  spec_9 = tmpvar_10;
					  c_8.xyz = (((tmpvar_4.xyz * _Color.xyz) * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_9));
					  c_8.w = (tmpvar_4.w * _Color.w);
					  c_2.xyz = c_8.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = texture2D (_MainTex, P_5);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_6;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  lowp float spec_8;
					  mediump float tmpvar_9;
					  tmpvar_9 = (light_3.w * tmpvar_4.w);
					  spec_8 = tmpvar_9;
					  c_7.xyz = (((tmpvar_4.xyz * _Color.xyz) * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_8));
					  c_7.w = (tmpvar_4.w * _Color.w);
					  c_2 = c_7;
					  highp float tmpvar_10;
					  tmpvar_10 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = texture2D (_MainTex, P_5);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_7.w;
					  light_3.xyz = (tmpvar_7.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_8;
					  lowp float spec_9;
					  mediump float tmpvar_10;
					  tmpvar_10 = (tmpvar_7.w * tmpvar_4.w);
					  spec_9 = tmpvar_10;
					  c_8.xyz = (((tmpvar_4.xyz * _Color.xyz) * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_9));
					  c_8.w = (tmpvar_4.w * _Color.w);
					  c_2 = c_8;
					  highp float tmpvar_11;
					  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = texture2D (_MainTex, P_5);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_6;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  lowp float spec_8;
					  mediump float tmpvar_9;
					  tmpvar_9 = (light_3.w * tmpvar_4.w);
					  spec_8 = tmpvar_9;
					  c_7.xyz = (((tmpvar_4.xyz * _Color.xyz) * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_8));
					  c_7.w = (tmpvar_4.w * _Color.w);
					  c_2.xyz = c_7.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = texture2D (_MainTex, P_5);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_7.w;
					  light_3.xyz = (tmpvar_7.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_8;
					  lowp float spec_9;
					  mediump float tmpvar_10;
					  tmpvar_10 = (tmpvar_7.w * tmpvar_4.w);
					  spec_9 = tmpvar_10;
					  c_8.xyz = (((tmpvar_4.xyz * _Color.xyz) * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_9));
					  c_8.w = (tmpvar_4.w * _Color.w);
					  c_2.xyz = c_8.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = texture2D (_MainTex, P_5);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_6;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_7;
					  lowp float spec_8;
					  mediump float tmpvar_9;
					  tmpvar_9 = (light_3.w * tmpvar_4.w);
					  spec_8 = tmpvar_9;
					  c_7.xyz = (((tmpvar_4.xyz * _Color.xyz) * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_8));
					  c_7.w = (tmpvar_4.w * _Color.w);
					  c_2 = c_7;
					  highp float tmpvar_10;
					  tmpvar_10 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec4 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = texture2D (_MainTex, P_5);
					  lowp vec4 tmpvar_6;
					  tmpvar_6 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_6;
					  mediump vec4 tmpvar_7;
					  tmpvar_7 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_7.w;
					  light_3.xyz = (tmpvar_7.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_8;
					  lowp float spec_9;
					  mediump float tmpvar_10;
					  tmpvar_10 = (tmpvar_7.w * tmpvar_4.w);
					  spec_9 = tmpvar_10;
					  c_8.xyz = (((tmpvar_4.xyz * _Color.xyz) * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_9));
					  c_8.w = (tmpvar_4.w * _Color.w);
					  c_2 = c_8;
					  highp float tmpvar_11;
					  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp vec4 tmpvar_5;
					  highp vec2 P_6;
					  P_6 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_5 = texture2D (_MainTex, P_6);
					  tmpvar_4 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_7;
					  tmpvar_7 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_7;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_8;
					  lowp float spec_9;
					  mediump float tmpvar_10;
					  tmpvar_10 = (light_3.w * tmpvar_5.w);
					  spec_9 = tmpvar_10;
					  c_8.xyz = (((tmpvar_5.xyz * _Color.xyz) * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_9));
					  c_8.w = (tmpvar_5.w * _Color.w);
					  c_2 = c_8;
					  c_2.xyz = (c_2.xyz + tmpvar_4);
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp vec4 tmpvar_5;
					  highp vec2 P_6;
					  P_6 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_5 = texture2D (_MainTex, P_6);
					  tmpvar_4 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_7;
					  tmpvar_7 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_7;
					  mediump vec4 tmpvar_8;
					  tmpvar_8 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_8.w;
					  light_3.xyz = (tmpvar_8.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_9;
					  lowp float spec_10;
					  mediump float tmpvar_11;
					  tmpvar_11 = (tmpvar_8.w * tmpvar_5.w);
					  spec_10 = tmpvar_11;
					  c_9.xyz = (((tmpvar_5.xyz * _Color.xyz) * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_10));
					  c_9.w = (tmpvar_5.w * _Color.w);
					  c_2 = c_9;
					  c_2.xyz = (c_2.xyz + tmpvar_4);
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp vec4 tmpvar_5;
					  highp vec2 P_6;
					  P_6 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_5 = texture2D (_MainTex, P_6);
					  tmpvar_4 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_7;
					  tmpvar_7 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_7;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_8;
					  lowp float spec_9;
					  mediump float tmpvar_10;
					  tmpvar_10 = (light_3.w * tmpvar_5.w);
					  spec_9 = tmpvar_10;
					  c_8.xyz = (((tmpvar_5.xyz * _Color.xyz) * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_9));
					  c_8.w = (tmpvar_5.w * _Color.w);
					  c_2 = c_8;
					  c_2.xyz = (c_2.xyz + tmpvar_4);
					  highp float tmpvar_11;
					  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp vec4 tmpvar_5;
					  highp vec2 P_6;
					  P_6 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_5 = texture2D (_MainTex, P_6);
					  tmpvar_4 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_7;
					  tmpvar_7 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_7;
					  mediump vec4 tmpvar_8;
					  tmpvar_8 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_8.w;
					  light_3.xyz = (tmpvar_8.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_9;
					  lowp float spec_10;
					  mediump float tmpvar_11;
					  tmpvar_11 = (tmpvar_8.w * tmpvar_5.w);
					  spec_10 = tmpvar_11;
					  c_9.xyz = (((tmpvar_5.xyz * _Color.xyz) * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_10));
					  c_9.w = (tmpvar_5.w * _Color.w);
					  c_2 = c_9;
					  c_2.xyz = (c_2.xyz + tmpvar_4);
					  highp float tmpvar_12;
					  tmpvar_12 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_12));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_9;
					  c_9.xyz = (tmpvar_5 * light_3.xyz);
					  c_9.w = (tmpvar_6.w * _Color.w);
					  c_2.xyz = c_9.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  mediump vec4 tmpvar_9;
					  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_9.w;
					  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  c_10.xyz = (tmpvar_5 * light_3.xyz);
					  c_10.w = (tmpvar_6.w * _Color.w);
					  c_2.xyz = c_10.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_9;
					  c_9.xyz = (tmpvar_5 * light_3.xyz);
					  c_9.w = (tmpvar_6.w * _Color.w);
					  c_2 = c_9;
					  highp float tmpvar_10;
					  tmpvar_10 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  mediump vec4 tmpvar_9;
					  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_9.w;
					  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  c_10.xyz = (tmpvar_5 * light_3.xyz);
					  c_10.w = (tmpvar_6.w * _Color.w);
					  c_2 = c_10;
					  highp float tmpvar_11;
					  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_9;
					  lowp float spec_10;
					  mediump float tmpvar_11;
					  tmpvar_11 = (light_3.w * tmpvar_6.w);
					  spec_10 = tmpvar_11;
					  c_9.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_10));
					  c_9.w = (tmpvar_6.w * _Color.w);
					  c_2.xyz = c_9.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  mediump vec4 tmpvar_9;
					  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_9.w;
					  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  lowp float spec_11;
					  mediump float tmpvar_12;
					  tmpvar_12 = (tmpvar_9.w * tmpvar_6.w);
					  spec_11 = tmpvar_12;
					  c_10.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_11));
					  c_10.w = (tmpvar_6.w * _Color.w);
					  c_2.xyz = c_10.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_9;
					  lowp float spec_10;
					  mediump float tmpvar_11;
					  tmpvar_11 = (light_3.w * tmpvar_6.w);
					  spec_10 = tmpvar_11;
					  c_9.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_10));
					  c_9.w = (tmpvar_6.w * _Color.w);
					  c_2 = c_9;
					  highp float tmpvar_12;
					  tmpvar_12 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_12));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  mediump vec4 tmpvar_9;
					  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_9.w;
					  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  lowp float spec_11;
					  mediump float tmpvar_12;
					  tmpvar_12 = (tmpvar_9.w * tmpvar_6.w);
					  spec_11 = tmpvar_12;
					  c_10.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_11));
					  c_10.w = (tmpvar_6.w * _Color.w);
					  c_2 = c_10;
					  highp float tmpvar_13;
					  tmpvar_13 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_13));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_9;
					  c_9.xyz = (tmpvar_5 * light_3.xyz);
					  c_9.w = (tmpvar_6.w * _Color.w);
					  c_2.xyz = c_9.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  mediump vec4 tmpvar_9;
					  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_9.w;
					  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  c_10.xyz = (tmpvar_5 * light_3.xyz);
					  c_10.w = (tmpvar_6.w * _Color.w);
					  c_2.xyz = c_10.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_9;
					  c_9.xyz = (tmpvar_5 * light_3.xyz);
					  c_9.w = (tmpvar_6.w * _Color.w);
					  c_2 = c_9;
					  highp float tmpvar_10;
					  tmpvar_10 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_10));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  mediump vec4 tmpvar_9;
					  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_9.w;
					  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  c_10.xyz = (tmpvar_5 * light_3.xyz);
					  c_10.w = (tmpvar_6.w * _Color.w);
					  c_2 = c_10;
					  highp float tmpvar_11;
					  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_9;
					  lowp float spec_10;
					  mediump float tmpvar_11;
					  tmpvar_11 = (light_3.w * tmpvar_6.w);
					  spec_10 = tmpvar_11;
					  c_9.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_10));
					  c_9.w = (tmpvar_6.w * _Color.w);
					  c_2.xyz = c_9.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  mediump vec4 tmpvar_9;
					  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_9.w;
					  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  lowp float spec_11;
					  mediump float tmpvar_12;
					  tmpvar_12 = (tmpvar_9.w * tmpvar_6.w);
					  spec_11 = tmpvar_12;
					  c_10.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_11));
					  c_10.w = (tmpvar_6.w * _Color.w);
					  c_2.xyz = c_10.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_9;
					  lowp float spec_10;
					  mediump float tmpvar_11;
					  tmpvar_11 = (light_3.w * tmpvar_6.w);
					  spec_10 = tmpvar_11;
					  c_9.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_10));
					  c_9.w = (tmpvar_6.w * _Color.w);
					  c_2 = c_9;
					  highp float tmpvar_12;
					  tmpvar_12 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_12));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec4 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_6 = texture2D (_MainTex, P_7);
					  tmpvar_5 = (tmpvar_6.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  lowp vec4 tmpvar_8;
					  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_8;
					  mediump vec4 tmpvar_9;
					  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_9.w;
					  light_3.xyz = (tmpvar_9.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  lowp float spec_11;
					  mediump float tmpvar_12;
					  tmpvar_12 = (tmpvar_9.w * tmpvar_6.w);
					  spec_11 = tmpvar_12;
					  c_10.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_11));
					  c_10.w = (tmpvar_6.w * _Color.w);
					  c_2 = c_10;
					  highp float tmpvar_13;
					  tmpvar_13 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_13));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  c_10.xyz = (tmpvar_5 * light_3.xyz);
					  c_10.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_10;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  mediump vec4 tmpvar_10;
					  tmpvar_10 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_10.w;
					  light_3.xyz = (tmpvar_10.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_11;
					  c_11.xyz = (tmpvar_5 * light_3.xyz);
					  c_11.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_11;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  c_10.xyz = (tmpvar_5 * light_3.xyz);
					  c_10.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_10;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  highp float tmpvar_11;
					  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  mediump vec4 tmpvar_10;
					  tmpvar_10 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_10.w;
					  light_3.xyz = (tmpvar_10.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_11;
					  c_11.xyz = (tmpvar_5 * light_3.xyz);
					  c_11.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_11;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  highp float tmpvar_12;
					  tmpvar_12 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_12));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  lowp float spec_11;
					  mediump float tmpvar_12;
					  tmpvar_12 = (light_3.w * tmpvar_7.w);
					  spec_11 = tmpvar_12;
					  c_10.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_11));
					  c_10.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_10;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  mediump vec4 tmpvar_10;
					  tmpvar_10 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_10.w;
					  light_3.xyz = (tmpvar_10.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_11;
					  lowp float spec_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = (tmpvar_10.w * tmpvar_7.w);
					  spec_12 = tmpvar_13;
					  c_11.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_12));
					  c_11.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_11;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  lowp float spec_11;
					  mediump float tmpvar_12;
					  tmpvar_12 = (light_3.w * tmpvar_7.w);
					  spec_11 = tmpvar_12;
					  c_10.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_11));
					  c_10.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_10;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  highp float tmpvar_13;
					  tmpvar_13 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_13));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  mediump vec4 tmpvar_10;
					  tmpvar_10 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_10.w;
					  light_3.xyz = (tmpvar_10.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_11;
					  lowp float spec_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = (tmpvar_10.w * tmpvar_7.w);
					  spec_12 = tmpvar_13;
					  c_11.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_12));
					  c_11.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_11;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  highp float tmpvar_14;
					  tmpvar_14 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  c_10.xyz = (tmpvar_5 * light_3.xyz);
					  c_10.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_10;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  mediump vec4 tmpvar_10;
					  tmpvar_10 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_10.w;
					  light_3.xyz = (tmpvar_10.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_11;
					  c_11.xyz = (tmpvar_5 * light_3.xyz);
					  c_11.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_11;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  c_10.xyz = (tmpvar_5 * light_3.xyz);
					  c_10.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_10;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  highp float tmpvar_11;
					  tmpvar_11 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_11));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  mediump vec4 tmpvar_10;
					  tmpvar_10 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_10.w;
					  light_3.xyz = (tmpvar_10.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_11;
					  c_11.xyz = (tmpvar_5 * light_3.xyz);
					  c_11.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_11;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  highp float tmpvar_12;
					  tmpvar_12 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_12));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  lowp float spec_11;
					  mediump float tmpvar_12;
					  tmpvar_12 = (light_3.w * tmpvar_7.w);
					  spec_11 = tmpvar_12;
					  c_10.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_11));
					  c_10.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_10;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  mediump vec4 tmpvar_10;
					  tmpvar_10 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_10.w;
					  light_3.xyz = (tmpvar_10.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_11;
					  lowp float spec_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = (tmpvar_10.w * tmpvar_7.w);
					  spec_12 = tmpvar_13;
					  c_11.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_12));
					  c_11.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_11;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_10;
					  lowp float spec_11;
					  mediump float tmpvar_12;
					  tmpvar_12 = (light_3.w * tmpvar_7.w);
					  spec_11 = tmpvar_12;
					  c_10.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_11));
					  c_10.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_10;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  highp float tmpvar_13;
					  tmpvar_13 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_13));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  tmpvar_1 = (glstate_matrix_mvp * vertex_22);
					  highp vec4 o_39;
					  highp vec4 tmpvar_40;
					  tmpvar_40 = (tmpvar_1 * 0.5);
					  highp vec2 tmpvar_41;
					  tmpvar_41.x = tmpvar_40.x;
					  tmpvar_41.y = (tmpvar_40.y * _ProjectionParams.x);
					  o_39.xy = (tmpvar_41 + tmpvar_40.w);
					  o_39.zw = tmpvar_1.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp vec4 v_42;
					  v_42.x = tmpvar_5;
					  v_42.y = tmpvar_6;
					  v_42.z = tmpvar_7;
					  v_42.w = tmpvar_8;
					  highp vec4 v_43;
					  v_43.x = tmpvar_10;
					  v_43.y = tmpvar_11;
					  v_43.z = tmpvar_12;
					  v_43.w = tmpvar_13;
					  highp vec4 v_44;
					  v_44.x = tmpvar_15;
					  v_44.y = tmpvar_16;
					  v_44.z = tmpvar_17;
					  v_44.w = tmpvar_18;
					  highp vec4 tmpvar_45;
					  tmpvar_45.w = 1.0;
					  tmpvar_45.xyz = normalize(((
					    (v_42.xyz * tmpvar_38.x)
					   + 
					    (v_43.xyz * tmpvar_38.y)
					  ) + (v_44.xyz * tmpvar_38.z)));
					  mediump vec4 normal_46;
					  normal_46 = tmpvar_45;
					  mediump vec3 res_47;
					  mediump vec3 x_48;
					  x_48.x = dot (unity_SHAr, normal_46);
					  x_48.y = dot (unity_SHAg, normal_46);
					  x_48.z = dot (unity_SHAb, normal_46);
					  mediump vec3 x1_49;
					  mediump vec4 tmpvar_50;
					  tmpvar_50 = (normal_46.xyzz * normal_46.yzzx);
					  x1_49.x = dot (unity_SHBr, tmpvar_50);
					  x1_49.y = dot (unity_SHBg, tmpvar_50);
					  x1_49.z = dot (unity_SHBb, tmpvar_50);
					  res_47 = (x_48 + (x1_49 + (unity_SHC.xyz * 
					    ((normal_46.x * normal_46.x) - (normal_46.y * normal_46.y))
					  )));
					  res_47 = max (((1.055 * 
					    pow (max (res_47, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_3 = res_47;
					  gl_Position = tmpvar_1;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD2 = o_39;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_1.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  lowp vec4 tmpvar_9;
					  tmpvar_9 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_9;
					  mediump vec4 tmpvar_10;
					  tmpvar_10 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_10.w;
					  light_3.xyz = (tmpvar_10.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_11;
					  lowp float spec_12;
					  mediump float tmpvar_13;
					  tmpvar_13 = (tmpvar_10.w * tmpvar_7.w);
					  spec_12 = tmpvar_13;
					  c_11.xyz = ((tmpvar_5 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_12));
					  c_11.w = (tmpvar_7.w * _Color.w);
					  c_2 = c_11;
					  c_2.xyz = (c_2.xyz + tmpvar_6);
					  highp float tmpvar_14;
					  tmpvar_14 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_14));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec3 xlv_TEXCOORD7;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].x;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].x;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].x;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].x;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].y;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].y;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].y;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].y;
					  v_13.w = tmpvar_17;
					  highp vec4 v_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[0].z;
					  v_18.x = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[1].z;
					  v_18.y = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[2].z;
					  v_18.z = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = _World2Object[3].z;
					  v_18.w = tmpvar_22;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_13.xyz * _glesNormal.y)
					  ) + (v_18.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_24;
					  tmpvar_24[0] = _Object2World[0].xyz;
					  tmpvar_24[1] = _Object2World[1].xyz;
					  tmpvar_24[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_25;
					  tmpvar_25 = normalize((tmpvar_24 * _glesTANGENT.xyz));
					  highp vec4 vertex_26;
					  vertex_26.w = _glesVertex.w;
					  highp vec2 xzOff_27;
					  highp vec3 v2_28;
					  highp vec3 v1_29;
					  highp vec3 v0_30;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_31 + tmpvar_25);
					  v1_29.xz = tmpvar_32.xz;
					  highp vec3 tmpvar_33;
					  tmpvar_33 = (tmpvar_31 - ((tmpvar_23.yzx * tmpvar_25.zxy) - (tmpvar_23.zxy * tmpvar_25.yzx)));
					  v2_28.xz = tmpvar_33.xz;
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_31.x >= 0.0));
					  xzOff_27 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_27 = (xzOff_27 * xzOff_27);
					  highp vec3 tmpvar_35;
					  tmpvar_35.xz = vec2(0.0, 0.0);
					  tmpvar_35.y = (((_V_CW_Bend.x * xzOff_27.x) + (_V_CW_Bend.z * xzOff_27.y)) * 0.001);
					  v0_30 = (tmpvar_31 + tmpvar_35);
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_27 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_27 = (xzOff_27 * xzOff_27);
					  v1_29.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_27.x)
					   + 
					    (_V_CW_Bend.z * xzOff_27.y)
					  ) * 0.001));
					  highp vec2 tmpvar_37;
					  tmpvar_37.x = float((tmpvar_33.z >= 0.0));
					  tmpvar_37.y = float((tmpvar_33.x >= 0.0));
					  xzOff_27 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_33.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_37 * 2.0) - 1.0));
					  xzOff_27 = (xzOff_27 * xzOff_27);
					  v2_28.y = (tmpvar_33.y + ((
					    (_V_CW_Bend.x * xzOff_27.x)
					   + 
					    (_V_CW_Bend.z * xzOff_27.y)
					  ) * 0.001));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  vertex_26.xyz = (_glesVertex.xyz + (tmpvar_38 * tmpvar_35));
					  highp mat3 tmpvar_39;
					  tmpvar_39[0] = _World2Object[0].xyz;
					  tmpvar_39[1] = _World2Object[1].xyz;
					  tmpvar_39[2] = _World2Object[2].xyz;
					  highp vec3 a_40;
					  a_40 = (v2_28 - v0_30);
					  highp vec3 b_41;
					  b_41 = (v1_29 - v0_30);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize((tmpvar_39 * normalize(
					    ((a_40.yzx * b_41.zxy) - (a_40.zxy * b_41.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_26);
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (_Object2World * vertex_26).xyz;
					  highp vec4 v_44;
					  v_44.x = tmpvar_9;
					  v_44.y = tmpvar_10;
					  v_44.z = tmpvar_11;
					  v_44.w = tmpvar_12;
					  highp vec4 v_45;
					  v_45.x = tmpvar_14;
					  v_45.y = tmpvar_15;
					  v_45.z = tmpvar_16;
					  v_45.w = tmpvar_17;
					  highp vec4 v_46;
					  v_46.x = tmpvar_19;
					  v_46.y = tmpvar_20;
					  v_46.z = tmpvar_21;
					  v_46.w = tmpvar_22;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize(((
					    (v_44.xyz * tmpvar_42.x)
					   + 
					    (v_45.xyz * tmpvar_42.y)
					  ) + (v_46.xyz * tmpvar_42.z)));
					  worldNormal_1 = tmpvar_47;
					  tmpvar_4 = worldNormal_1;
					  highp vec3 tmpvar_48;
					  highp vec3 I_49;
					  I_49 = (tmpvar_43 - _WorldSpaceCameraPos);
					  tmpvar_48 = (I_49 - (2.0 * (
					    dot (worldNormal_1, I_49)
					   * worldNormal_1)));
					  tmpvar_3 = tmpvar_48;
					  highp vec3 tmpvar_50;
					  tmpvar_50 = (_WorldSpaceCameraPos - tmpvar_43);
					  tmpvar_5 = tmpvar_50;
					  highp vec4 o_51;
					  highp vec4 tmpvar_52;
					  tmpvar_52 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_53;
					  tmpvar_53.x = tmpvar_52.x;
					  tmpvar_53.y = (tmpvar_52.y * _ProjectionParams.x);
					  o_51.xy = (tmpvar_53 + tmpvar_52.w);
					  o_51.zw = tmpvar_2.zw;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = vec2(0.0, 0.0);
					  highp vec4 v_54;
					  v_54.x = tmpvar_9;
					  v_54.y = tmpvar_10;
					  v_54.z = tmpvar_11;
					  v_54.w = tmpvar_12;
					  highp vec4 v_55;
					  v_55.x = tmpvar_14;
					  v_55.y = tmpvar_15;
					  v_55.z = tmpvar_16;
					  v_55.w = tmpvar_17;
					  highp vec4 v_56;
					  v_56.x = tmpvar_19;
					  v_56.y = tmpvar_20;
					  v_56.z = tmpvar_21;
					  v_56.w = tmpvar_22;
					  highp vec4 tmpvar_57;
					  tmpvar_57.w = 1.0;
					  tmpvar_57.xyz = normalize(((
					    (v_54.xyz * tmpvar_42.x)
					   + 
					    (v_55.xyz * tmpvar_42.y)
					  ) + (v_56.xyz * tmpvar_42.z)));
					  mediump vec4 normal_58;
					  normal_58 = tmpvar_57;
					  mediump vec3 res_59;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, normal_58);
					  x_60.y = dot (unity_SHAg, normal_58);
					  x_60.z = dot (unity_SHAb, normal_58);
					  mediump vec3 x1_61;
					  mediump vec4 tmpvar_62;
					  tmpvar_62 = (normal_58.xyzz * normal_58.yzzx);
					  x1_61.x = dot (unity_SHBr, tmpvar_62);
					  x1_61.y = dot (unity_SHBg, tmpvar_62);
					  x1_61.z = dot (unity_SHBb, tmpvar_62);
					  res_59 = (x_60 + (x1_61 + (unity_SHC.xyz * 
					    ((normal_58.x * normal_58.x) - (normal_58.y * normal_58.y))
					  )));
					  res_59 = max (((1.055 * 
					    pow (max (res_59, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_7 = res_59;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_4;
					  xlv_TEXCOORD3 = tmpvar_43;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = o_51;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD7 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp vec3 xlv_TEXCOORD7;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 viewDir_5;
					  highp vec3 tmpvar_6;
					  highp vec3 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = normalize(xlv_TEXCOORD4);
					  viewDir_5 = tmpvar_8;
					  tmpvar_7 = xlv_TEXCOORD1;
					  tmpvar_6 = viewDir_5;
					  tmpvar_4 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  P_13 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_9 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_12.w * _Color.w);
					  mediump vec3 inVec_14;
					  inVec_14 = tmpvar_6;
					  tmpvar_10 = ((textureCube (_V_CW_Cube, tmpvar_7).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_11 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_15;
					  tmpvar_15 = pow ((1.0 - max (0.0, 
					    dot ((inVec_14 * inversesqrt(max (0.001, 
					      dot (inVec_14, inVec_14)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = mix (tmpvar_10, _V_CW_Rim_Color.xyz, vec3(tmpvar_15));
					  tmpvar_10 = tmpvar_16;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = mix (tmpvar_9, _V_CW_Rim_Color.xyz, vec3(tmpvar_15));
					  tmpvar_9 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2DProj (_LightBuffer, xlv_TEXCOORD5);
					  light_3 = tmpvar_18;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD7);
					  lowp vec4 c_19;
					  c_19.xyz = (tmpvar_9 * light_3.xyz);
					  c_19.w = tmpvar_11;
					  c_2 = c_19;
					  c_2.xyz = (c_2.xyz + tmpvar_10);
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec3 xlv_TEXCOORD7;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].x;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].x;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].x;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].x;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].y;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].y;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].y;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].y;
					  v_13.w = tmpvar_17;
					  highp vec4 v_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[0].z;
					  v_18.x = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[1].z;
					  v_18.y = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[2].z;
					  v_18.z = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = _World2Object[3].z;
					  v_18.w = tmpvar_22;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_13.xyz * _glesNormal.y)
					  ) + (v_18.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_24;
					  tmpvar_24[0] = _Object2World[0].xyz;
					  tmpvar_24[1] = _Object2World[1].xyz;
					  tmpvar_24[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_25;
					  tmpvar_25 = normalize((tmpvar_24 * _glesTANGENT.xyz));
					  highp vec4 vertex_26;
					  vertex_26.w = _glesVertex.w;
					  highp vec2 xzOff_27;
					  highp vec3 v2_28;
					  highp vec3 v1_29;
					  highp vec3 v0_30;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_31 + tmpvar_25);
					  v1_29.xz = tmpvar_32.xz;
					  highp vec3 tmpvar_33;
					  tmpvar_33 = (tmpvar_31 - ((tmpvar_23.yzx * tmpvar_25.zxy) - (tmpvar_23.zxy * tmpvar_25.yzx)));
					  v2_28.xz = tmpvar_33.xz;
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_31.x >= 0.0));
					  xzOff_27 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_27 = (xzOff_27 * xzOff_27);
					  highp vec3 tmpvar_35;
					  tmpvar_35.xz = vec2(0.0, 0.0);
					  tmpvar_35.y = (((_V_CW_Bend.x * xzOff_27.x) + (_V_CW_Bend.z * xzOff_27.y)) * 0.001);
					  v0_30 = (tmpvar_31 + tmpvar_35);
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_27 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_27 = (xzOff_27 * xzOff_27);
					  v1_29.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_27.x)
					   + 
					    (_V_CW_Bend.z * xzOff_27.y)
					  ) * 0.001));
					  highp vec2 tmpvar_37;
					  tmpvar_37.x = float((tmpvar_33.z >= 0.0));
					  tmpvar_37.y = float((tmpvar_33.x >= 0.0));
					  xzOff_27 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_33.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_37 * 2.0) - 1.0));
					  xzOff_27 = (xzOff_27 * xzOff_27);
					  v2_28.y = (tmpvar_33.y + ((
					    (_V_CW_Bend.x * xzOff_27.x)
					   + 
					    (_V_CW_Bend.z * xzOff_27.y)
					  ) * 0.001));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  vertex_26.xyz = (_glesVertex.xyz + (tmpvar_38 * tmpvar_35));
					  highp mat3 tmpvar_39;
					  tmpvar_39[0] = _World2Object[0].xyz;
					  tmpvar_39[1] = _World2Object[1].xyz;
					  tmpvar_39[2] = _World2Object[2].xyz;
					  highp vec3 a_40;
					  a_40 = (v2_28 - v0_30);
					  highp vec3 b_41;
					  b_41 = (v1_29 - v0_30);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize((tmpvar_39 * normalize(
					    ((a_40.yzx * b_41.zxy) - (a_40.zxy * b_41.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_26);
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (_Object2World * vertex_26).xyz;
					  highp vec4 v_44;
					  v_44.x = tmpvar_9;
					  v_44.y = tmpvar_10;
					  v_44.z = tmpvar_11;
					  v_44.w = tmpvar_12;
					  highp vec4 v_45;
					  v_45.x = tmpvar_14;
					  v_45.y = tmpvar_15;
					  v_45.z = tmpvar_16;
					  v_45.w = tmpvar_17;
					  highp vec4 v_46;
					  v_46.x = tmpvar_19;
					  v_46.y = tmpvar_20;
					  v_46.z = tmpvar_21;
					  v_46.w = tmpvar_22;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize(((
					    (v_44.xyz * tmpvar_42.x)
					   + 
					    (v_45.xyz * tmpvar_42.y)
					  ) + (v_46.xyz * tmpvar_42.z)));
					  worldNormal_1 = tmpvar_47;
					  tmpvar_4 = worldNormal_1;
					  highp vec3 tmpvar_48;
					  highp vec3 I_49;
					  I_49 = (tmpvar_43 - _WorldSpaceCameraPos);
					  tmpvar_48 = (I_49 - (2.0 * (
					    dot (worldNormal_1, I_49)
					   * worldNormal_1)));
					  tmpvar_3 = tmpvar_48;
					  highp vec3 tmpvar_50;
					  tmpvar_50 = (_WorldSpaceCameraPos - tmpvar_43);
					  tmpvar_5 = tmpvar_50;
					  highp vec4 o_51;
					  highp vec4 tmpvar_52;
					  tmpvar_52 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_53;
					  tmpvar_53.x = tmpvar_52.x;
					  tmpvar_53.y = (tmpvar_52.y * _ProjectionParams.x);
					  o_51.xy = (tmpvar_53 + tmpvar_52.w);
					  o_51.zw = tmpvar_2.zw;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = vec2(0.0, 0.0);
					  highp vec4 v_54;
					  v_54.x = tmpvar_9;
					  v_54.y = tmpvar_10;
					  v_54.z = tmpvar_11;
					  v_54.w = tmpvar_12;
					  highp vec4 v_55;
					  v_55.x = tmpvar_14;
					  v_55.y = tmpvar_15;
					  v_55.z = tmpvar_16;
					  v_55.w = tmpvar_17;
					  highp vec4 v_56;
					  v_56.x = tmpvar_19;
					  v_56.y = tmpvar_20;
					  v_56.z = tmpvar_21;
					  v_56.w = tmpvar_22;
					  highp vec4 tmpvar_57;
					  tmpvar_57.w = 1.0;
					  tmpvar_57.xyz = normalize(((
					    (v_54.xyz * tmpvar_42.x)
					   + 
					    (v_55.xyz * tmpvar_42.y)
					  ) + (v_56.xyz * tmpvar_42.z)));
					  mediump vec4 normal_58;
					  normal_58 = tmpvar_57;
					  mediump vec3 res_59;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, normal_58);
					  x_60.y = dot (unity_SHAg, normal_58);
					  x_60.z = dot (unity_SHAb, normal_58);
					  mediump vec3 x1_61;
					  mediump vec4 tmpvar_62;
					  tmpvar_62 = (normal_58.xyzz * normal_58.yzzx);
					  x1_61.x = dot (unity_SHBr, tmpvar_62);
					  x1_61.y = dot (unity_SHBg, tmpvar_62);
					  x1_61.z = dot (unity_SHBb, tmpvar_62);
					  res_59 = (x_60 + (x1_61 + (unity_SHC.xyz * 
					    ((normal_58.x * normal_58.x) - (normal_58.y * normal_58.y))
					  )));
					  res_59 = max (((1.055 * 
					    pow (max (res_59, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_7 = res_59;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_4;
					  xlv_TEXCOORD3 = tmpvar_43;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = o_51;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD7 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp vec3 xlv_TEXCOORD7;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 viewDir_5;
					  highp vec3 tmpvar_6;
					  highp vec3 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = normalize(xlv_TEXCOORD4);
					  viewDir_5 = tmpvar_8;
					  tmpvar_7 = xlv_TEXCOORD1;
					  tmpvar_6 = viewDir_5;
					  tmpvar_4 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  P_13 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_9 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_12.w * _Color.w);
					  mediump vec3 inVec_14;
					  inVec_14 = tmpvar_6;
					  tmpvar_10 = ((textureCube (_V_CW_Cube, tmpvar_7).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_11 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_15;
					  tmpvar_15 = pow ((1.0 - max (0.0, 
					    dot ((inVec_14 * inversesqrt(max (0.001, 
					      dot (inVec_14, inVec_14)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = mix (tmpvar_10, _V_CW_Rim_Color.xyz, vec3(tmpvar_15));
					  tmpvar_10 = tmpvar_16;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = mix (tmpvar_9, _V_CW_Rim_Color.xyz, vec3(tmpvar_15));
					  tmpvar_9 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2DProj (_LightBuffer, xlv_TEXCOORD5);
					  light_3 = tmpvar_18;
					  mediump vec4 tmpvar_19;
					  tmpvar_19 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_19.w;
					  light_3.xyz = (tmpvar_19.xyz + xlv_TEXCOORD7);
					  lowp vec4 c_20;
					  c_20.xyz = (tmpvar_9 * light_3.xyz);
					  c_20.w = tmpvar_11;
					  c_2 = c_20;
					  c_2.xyz = (c_2.xyz + tmpvar_10);
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec3 xlv_TEXCOORD7;
					varying highp float xlv_TEXCOORD8;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].x;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].x;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].x;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].x;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].y;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].y;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].y;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].y;
					  v_13.w = tmpvar_17;
					  highp vec4 v_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[0].z;
					  v_18.x = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[1].z;
					  v_18.y = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[2].z;
					  v_18.z = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = _World2Object[3].z;
					  v_18.w = tmpvar_22;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_13.xyz * _glesNormal.y)
					  ) + (v_18.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_24;
					  tmpvar_24[0] = _Object2World[0].xyz;
					  tmpvar_24[1] = _Object2World[1].xyz;
					  tmpvar_24[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_25;
					  tmpvar_25 = normalize((tmpvar_24 * _glesTANGENT.xyz));
					  highp vec4 vertex_26;
					  vertex_26.w = _glesVertex.w;
					  highp vec2 xzOff_27;
					  highp vec3 v2_28;
					  highp vec3 v1_29;
					  highp vec3 v0_30;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_31 + tmpvar_25);
					  v1_29.xz = tmpvar_32.xz;
					  highp vec3 tmpvar_33;
					  tmpvar_33 = (tmpvar_31 - ((tmpvar_23.yzx * tmpvar_25.zxy) - (tmpvar_23.zxy * tmpvar_25.yzx)));
					  v2_28.xz = tmpvar_33.xz;
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_31.x >= 0.0));
					  xzOff_27 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_27 = (xzOff_27 * xzOff_27);
					  highp vec3 tmpvar_35;
					  tmpvar_35.xz = vec2(0.0, 0.0);
					  tmpvar_35.y = (((_V_CW_Bend.x * xzOff_27.x) + (_V_CW_Bend.z * xzOff_27.y)) * 0.001);
					  v0_30 = (tmpvar_31 + tmpvar_35);
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_27 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_27 = (xzOff_27 * xzOff_27);
					  v1_29.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_27.x)
					   + 
					    (_V_CW_Bend.z * xzOff_27.y)
					  ) * 0.001));
					  highp vec2 tmpvar_37;
					  tmpvar_37.x = float((tmpvar_33.z >= 0.0));
					  tmpvar_37.y = float((tmpvar_33.x >= 0.0));
					  xzOff_27 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_33.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_37 * 2.0) - 1.0));
					  xzOff_27 = (xzOff_27 * xzOff_27);
					  v2_28.y = (tmpvar_33.y + ((
					    (_V_CW_Bend.x * xzOff_27.x)
					   + 
					    (_V_CW_Bend.z * xzOff_27.y)
					  ) * 0.001));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  vertex_26.xyz = (_glesVertex.xyz + (tmpvar_38 * tmpvar_35));
					  highp mat3 tmpvar_39;
					  tmpvar_39[0] = _World2Object[0].xyz;
					  tmpvar_39[1] = _World2Object[1].xyz;
					  tmpvar_39[2] = _World2Object[2].xyz;
					  highp vec3 a_40;
					  a_40 = (v2_28 - v0_30);
					  highp vec3 b_41;
					  b_41 = (v1_29 - v0_30);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize((tmpvar_39 * normalize(
					    ((a_40.yzx * b_41.zxy) - (a_40.zxy * b_41.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_26);
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (_Object2World * vertex_26).xyz;
					  highp vec4 v_44;
					  v_44.x = tmpvar_9;
					  v_44.y = tmpvar_10;
					  v_44.z = tmpvar_11;
					  v_44.w = tmpvar_12;
					  highp vec4 v_45;
					  v_45.x = tmpvar_14;
					  v_45.y = tmpvar_15;
					  v_45.z = tmpvar_16;
					  v_45.w = tmpvar_17;
					  highp vec4 v_46;
					  v_46.x = tmpvar_19;
					  v_46.y = tmpvar_20;
					  v_46.z = tmpvar_21;
					  v_46.w = tmpvar_22;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize(((
					    (v_44.xyz * tmpvar_42.x)
					   + 
					    (v_45.xyz * tmpvar_42.y)
					  ) + (v_46.xyz * tmpvar_42.z)));
					  worldNormal_1 = tmpvar_47;
					  tmpvar_4 = worldNormal_1;
					  highp vec3 tmpvar_48;
					  highp vec3 I_49;
					  I_49 = (tmpvar_43 - _WorldSpaceCameraPos);
					  tmpvar_48 = (I_49 - (2.0 * (
					    dot (worldNormal_1, I_49)
					   * worldNormal_1)));
					  tmpvar_3 = tmpvar_48;
					  highp vec3 tmpvar_50;
					  tmpvar_50 = (_WorldSpaceCameraPos - tmpvar_43);
					  tmpvar_5 = tmpvar_50;
					  highp vec4 o_51;
					  highp vec4 tmpvar_52;
					  tmpvar_52 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_53;
					  tmpvar_53.x = tmpvar_52.x;
					  tmpvar_53.y = (tmpvar_52.y * _ProjectionParams.x);
					  o_51.xy = (tmpvar_53 + tmpvar_52.w);
					  o_51.zw = tmpvar_2.zw;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = vec2(0.0, 0.0);
					  highp vec4 v_54;
					  v_54.x = tmpvar_9;
					  v_54.y = tmpvar_10;
					  v_54.z = tmpvar_11;
					  v_54.w = tmpvar_12;
					  highp vec4 v_55;
					  v_55.x = tmpvar_14;
					  v_55.y = tmpvar_15;
					  v_55.z = tmpvar_16;
					  v_55.w = tmpvar_17;
					  highp vec4 v_56;
					  v_56.x = tmpvar_19;
					  v_56.y = tmpvar_20;
					  v_56.z = tmpvar_21;
					  v_56.w = tmpvar_22;
					  highp vec4 tmpvar_57;
					  tmpvar_57.w = 1.0;
					  tmpvar_57.xyz = normalize(((
					    (v_54.xyz * tmpvar_42.x)
					   + 
					    (v_55.xyz * tmpvar_42.y)
					  ) + (v_56.xyz * tmpvar_42.z)));
					  mediump vec4 normal_58;
					  normal_58 = tmpvar_57;
					  mediump vec3 res_59;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, normal_58);
					  x_60.y = dot (unity_SHAg, normal_58);
					  x_60.z = dot (unity_SHAb, normal_58);
					  mediump vec3 x1_61;
					  mediump vec4 tmpvar_62;
					  tmpvar_62 = (normal_58.xyzz * normal_58.yzzx);
					  x1_61.x = dot (unity_SHBr, tmpvar_62);
					  x1_61.y = dot (unity_SHBg, tmpvar_62);
					  x1_61.z = dot (unity_SHBb, tmpvar_62);
					  res_59 = (x_60 + (x1_61 + (unity_SHC.xyz * 
					    ((normal_58.x * normal_58.x) - (normal_58.y * normal_58.y))
					  )));
					  res_59 = max (((1.055 * 
					    pow (max (res_59, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_7 = res_59;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_4;
					  xlv_TEXCOORD3 = tmpvar_43;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = o_51;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD7 = tmpvar_7;
					  xlv_TEXCOORD8 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp vec3 xlv_TEXCOORD7;
					varying highp float xlv_TEXCOORD8;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 viewDir_5;
					  highp vec3 tmpvar_6;
					  highp vec3 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = normalize(xlv_TEXCOORD4);
					  viewDir_5 = tmpvar_8;
					  tmpvar_7 = xlv_TEXCOORD1;
					  tmpvar_6 = viewDir_5;
					  tmpvar_4 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  P_13 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_9 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_12.w * _Color.w);
					  mediump vec3 inVec_14;
					  inVec_14 = tmpvar_6;
					  tmpvar_10 = ((textureCube (_V_CW_Cube, tmpvar_7).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_11 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_15;
					  tmpvar_15 = pow ((1.0 - max (0.0, 
					    dot ((inVec_14 * inversesqrt(max (0.001, 
					      dot (inVec_14, inVec_14)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = mix (tmpvar_10, _V_CW_Rim_Color.xyz, vec3(tmpvar_15));
					  tmpvar_10 = tmpvar_16;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = mix (tmpvar_9, _V_CW_Rim_Color.xyz, vec3(tmpvar_15));
					  tmpvar_9 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2DProj (_LightBuffer, xlv_TEXCOORD5);
					  light_3 = tmpvar_18;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD7);
					  lowp vec4 c_19;
					  c_19.xyz = (tmpvar_9 * light_3.xyz);
					  c_19.w = tmpvar_11;
					  c_2 = c_19;
					  c_2.xyz = (c_2.xyz + tmpvar_10);
					  highp float tmpvar_20;
					  tmpvar_20 = clamp (xlv_TEXCOORD8, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_20));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_FogParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec3 xlv_TEXCOORD7;
					varying highp float xlv_TEXCOORD8;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  highp vec4 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  mediump vec3 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec3 tmpvar_7;
					  highp vec4 v_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[0].x;
					  v_8.x = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[1].x;
					  v_8.y = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[2].x;
					  v_8.z = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[3].x;
					  v_8.w = tmpvar_12;
					  highp vec4 v_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[0].y;
					  v_13.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[1].y;
					  v_13.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[2].y;
					  v_13.z = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[3].y;
					  v_13.w = tmpvar_17;
					  highp vec4 v_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[0].z;
					  v_18.x = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[1].z;
					  v_18.y = tmpvar_20;
					  highp float tmpvar_21;
					  tmpvar_21 = _World2Object[2].z;
					  v_18.z = tmpvar_21;
					  highp float tmpvar_22;
					  tmpvar_22 = _World2Object[3].z;
					  v_18.w = tmpvar_22;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize(((
					    (v_8.xyz * _glesNormal.x)
					   + 
					    (v_13.xyz * _glesNormal.y)
					  ) + (v_18.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_24;
					  tmpvar_24[0] = _Object2World[0].xyz;
					  tmpvar_24[1] = _Object2World[1].xyz;
					  tmpvar_24[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_25;
					  tmpvar_25 = normalize((tmpvar_24 * _glesTANGENT.xyz));
					  highp vec4 vertex_26;
					  vertex_26.w = _glesVertex.w;
					  highp vec2 xzOff_27;
					  highp vec3 v2_28;
					  highp vec3 v1_29;
					  highp vec3 v0_30;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_32;
					  tmpvar_32 = (tmpvar_31 + tmpvar_25);
					  v1_29.xz = tmpvar_32.xz;
					  highp vec3 tmpvar_33;
					  tmpvar_33 = (tmpvar_31 - ((tmpvar_23.yzx * tmpvar_25.zxy) - (tmpvar_23.zxy * tmpvar_25.yzx)));
					  v2_28.xz = tmpvar_33.xz;
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_31.x >= 0.0));
					  xzOff_27 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_27 = (xzOff_27 * xzOff_27);
					  highp vec3 tmpvar_35;
					  tmpvar_35.xz = vec2(0.0, 0.0);
					  tmpvar_35.y = (((_V_CW_Bend.x * xzOff_27.x) + (_V_CW_Bend.z * xzOff_27.y)) * 0.001);
					  v0_30 = (tmpvar_31 + tmpvar_35);
					  highp vec2 tmpvar_36;
					  tmpvar_36.x = float((tmpvar_32.z >= 0.0));
					  tmpvar_36.y = float((tmpvar_32.x >= 0.0));
					  xzOff_27 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_32.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_36 * 2.0) - 1.0));
					  xzOff_27 = (xzOff_27 * xzOff_27);
					  v1_29.y = (tmpvar_32.y + ((
					    (_V_CW_Bend.x * xzOff_27.x)
					   + 
					    (_V_CW_Bend.z * xzOff_27.y)
					  ) * 0.001));
					  highp vec2 tmpvar_37;
					  tmpvar_37.x = float((tmpvar_33.z >= 0.0));
					  tmpvar_37.y = float((tmpvar_33.x >= 0.0));
					  xzOff_27 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_33.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_37 * 2.0) - 1.0));
					  xzOff_27 = (xzOff_27 * xzOff_27);
					  v2_28.y = (tmpvar_33.y + ((
					    (_V_CW_Bend.x * xzOff_27.x)
					   + 
					    (_V_CW_Bend.z * xzOff_27.y)
					  ) * 0.001));
					  highp mat3 tmpvar_38;
					  tmpvar_38[0] = _World2Object[0].xyz;
					  tmpvar_38[1] = _World2Object[1].xyz;
					  tmpvar_38[2] = _World2Object[2].xyz;
					  vertex_26.xyz = (_glesVertex.xyz + (tmpvar_38 * tmpvar_35));
					  highp mat3 tmpvar_39;
					  tmpvar_39[0] = _World2Object[0].xyz;
					  tmpvar_39[1] = _World2Object[1].xyz;
					  tmpvar_39[2] = _World2Object[2].xyz;
					  highp vec3 a_40;
					  a_40 = (v2_28 - v0_30);
					  highp vec3 b_41;
					  b_41 = (v1_29 - v0_30);
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize((tmpvar_39 * normalize(
					    ((a_40.yzx * b_41.zxy) - (a_40.zxy * b_41.yzx))
					  )));
					  tmpvar_2 = (glstate_matrix_mvp * vertex_26);
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (_Object2World * vertex_26).xyz;
					  highp vec4 v_44;
					  v_44.x = tmpvar_9;
					  v_44.y = tmpvar_10;
					  v_44.z = tmpvar_11;
					  v_44.w = tmpvar_12;
					  highp vec4 v_45;
					  v_45.x = tmpvar_14;
					  v_45.y = tmpvar_15;
					  v_45.z = tmpvar_16;
					  v_45.w = tmpvar_17;
					  highp vec4 v_46;
					  v_46.x = tmpvar_19;
					  v_46.y = tmpvar_20;
					  v_46.z = tmpvar_21;
					  v_46.w = tmpvar_22;
					  highp vec3 tmpvar_47;
					  tmpvar_47 = normalize(((
					    (v_44.xyz * tmpvar_42.x)
					   + 
					    (v_45.xyz * tmpvar_42.y)
					  ) + (v_46.xyz * tmpvar_42.z)));
					  worldNormal_1 = tmpvar_47;
					  tmpvar_4 = worldNormal_1;
					  highp vec3 tmpvar_48;
					  highp vec3 I_49;
					  I_49 = (tmpvar_43 - _WorldSpaceCameraPos);
					  tmpvar_48 = (I_49 - (2.0 * (
					    dot (worldNormal_1, I_49)
					   * worldNormal_1)));
					  tmpvar_3 = tmpvar_48;
					  highp vec3 tmpvar_50;
					  tmpvar_50 = (_WorldSpaceCameraPos - tmpvar_43);
					  tmpvar_5 = tmpvar_50;
					  highp vec4 o_51;
					  highp vec4 tmpvar_52;
					  tmpvar_52 = (tmpvar_2 * 0.5);
					  highp vec2 tmpvar_53;
					  tmpvar_53.x = tmpvar_52.x;
					  tmpvar_53.y = (tmpvar_52.y * _ProjectionParams.x);
					  o_51.xy = (tmpvar_53 + tmpvar_52.w);
					  o_51.zw = tmpvar_2.zw;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = vec2(0.0, 0.0);
					  highp vec4 v_54;
					  v_54.x = tmpvar_9;
					  v_54.y = tmpvar_10;
					  v_54.z = tmpvar_11;
					  v_54.w = tmpvar_12;
					  highp vec4 v_55;
					  v_55.x = tmpvar_14;
					  v_55.y = tmpvar_15;
					  v_55.z = tmpvar_16;
					  v_55.w = tmpvar_17;
					  highp vec4 v_56;
					  v_56.x = tmpvar_19;
					  v_56.y = tmpvar_20;
					  v_56.z = tmpvar_21;
					  v_56.w = tmpvar_22;
					  highp vec4 tmpvar_57;
					  tmpvar_57.w = 1.0;
					  tmpvar_57.xyz = normalize(((
					    (v_54.xyz * tmpvar_42.x)
					   + 
					    (v_55.xyz * tmpvar_42.y)
					  ) + (v_56.xyz * tmpvar_42.z)));
					  mediump vec4 normal_58;
					  normal_58 = tmpvar_57;
					  mediump vec3 res_59;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, normal_58);
					  x_60.y = dot (unity_SHAg, normal_58);
					  x_60.z = dot (unity_SHAb, normal_58);
					  mediump vec3 x1_61;
					  mediump vec4 tmpvar_62;
					  tmpvar_62 = (normal_58.xyzz * normal_58.yzzx);
					  x1_61.x = dot (unity_SHBr, tmpvar_62);
					  x1_61.y = dot (unity_SHBg, tmpvar_62);
					  x1_61.z = dot (unity_SHBb, tmpvar_62);
					  res_59 = (x_60 + (x1_61 + (unity_SHC.xyz * 
					    ((normal_58.x * normal_58.x) - (normal_58.y * normal_58.y))
					  )));
					  res_59 = max (((1.055 * 
					    pow (max (res_59, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_7 = res_59;
					  gl_Position = tmpvar_2;
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_3;
					  xlv_TEXCOORD2 = tmpvar_4;
					  xlv_TEXCOORD3 = tmpvar_43;
					  xlv_TEXCOORD4 = tmpvar_5;
					  xlv_TEXCOORD5 = o_51;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD7 = tmpvar_7;
					  xlv_TEXCOORD8 = ((tmpvar_2.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					uniform sampler2D _LightBuffer;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying highp vec3 xlv_TEXCOORD7;
					varying highp float xlv_TEXCOORD8;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 viewDir_5;
					  highp vec3 tmpvar_6;
					  highp vec3 tmpvar_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = normalize(xlv_TEXCOORD4);
					  viewDir_5 = tmpvar_8;
					  tmpvar_7 = xlv_TEXCOORD1;
					  tmpvar_6 = viewDir_5;
					  tmpvar_4 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_9;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  lowp vec4 tmpvar_12;
					  highp vec2 P_13;
					  P_13 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_12 = texture2D (_MainTex, P_13);
					  tmpvar_9 = (tmpvar_12.xyz * _Color.xyz);
					  tmpvar_11 = (tmpvar_12.w * _Color.w);
					  mediump vec3 inVec_14;
					  inVec_14 = tmpvar_6;
					  tmpvar_10 = ((textureCube (_V_CW_Cube, tmpvar_7).xyz * _V_CW_ReflectColor.xyz) * clamp ((tmpvar_11 + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_15;
					  tmpvar_15 = pow ((1.0 - max (0.0, 
					    dot ((inVec_14 * inversesqrt(max (0.001, 
					      dot (inVec_14, inVec_14)
					    ))), tmpvar_4)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = mix (tmpvar_10, _V_CW_Rim_Color.xyz, vec3(tmpvar_15));
					  tmpvar_10 = tmpvar_16;
					  mediump vec3 tmpvar_17;
					  tmpvar_17 = mix (tmpvar_9, _V_CW_Rim_Color.xyz, vec3(tmpvar_15));
					  tmpvar_9 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2DProj (_LightBuffer, xlv_TEXCOORD5);
					  light_3 = tmpvar_18;
					  mediump vec4 tmpvar_19;
					  tmpvar_19 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_19.w;
					  light_3.xyz = (tmpvar_19.xyz + xlv_TEXCOORD7);
					  lowp vec4 c_20;
					  c_20.xyz = (tmpvar_9 * light_3.xyz);
					  c_20.w = tmpvar_11;
					  c_2 = c_20;
					  c_2.xyz = (c_2.xyz + tmpvar_10);
					  highp float tmpvar_21;
					  tmpvar_21 = clamp (xlv_TEXCOORD8, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_21));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
}
 }
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="Deferred" "RenderType"="CurvedWorld_Opaque" "CurvedWorldTag"="Legacy Shader/Opaque/Diffuse" "CurvedWorldNoneRemoveableKeywords"="" "CurvedWorldAvailableOptions"="V_CW_REFLECTIVE;V_CW_VERTEX_COLOR;_EMISSION;V_CW_RIM;_NORMALMAP;V_CW_SPECULAR_HD;" }
  GpuProgramID 323557
Program "vp" {
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_2 = worldNormal_1;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 tmpvar_3;
					  tmpvar_3 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = (texture2D (_MainTex, P_5).xyz * _Color.xyz);
					  mediump vec3 normalWorld_6;
					  normalWorld_6 = tmpvar_3;
					  mediump vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = normalWorld_6;
					  mediump vec3 x_8;
					  x_8.x = dot (unity_SHAr, tmpvar_7);
					  x_8.y = dot (unity_SHAg, tmpvar_7);
					  x_8.z = dot (unity_SHAb, tmpvar_7);
					  mediump vec4 outDiffuseOcclusion_9;
					  mediump vec4 outNormal_10;
					  mediump vec4 emission_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = tmpvar_4;
					  outDiffuseOcclusion_9 = tmpvar_12;
					  mediump vec4 tmpvar_13;
					  tmpvar_13.xyz = _SpecColor.xyz;
					  tmpvar_13.w = 0.0;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = ((tmpvar_3 * 0.5) + 0.5);
					  outNormal_10 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = vec3(0.0, 0.0, 0.0);
					  emission_11 = tmpvar_15;
					  emission_11.xyz = (emission_11.xyz + (tmpvar_4 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD4 + x_8)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_9.xyz;
					  outEmission_2.w = emission_11.w;
					  outEmission_2.xyz = exp2(-(emission_11.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_13;
					  gl_FragData[2] = outNormal_10;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_2 = worldNormal_1;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 tmpvar_2;
					  tmpvar_2 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_3;
					  highp vec2 P_4;
					  P_4 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_3 = (texture2D (_MainTex, P_4).xyz * _Color.xyz);
					  mediump vec3 normalWorld_5;
					  normalWorld_5 = tmpvar_2;
					  mediump vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = normalWorld_5;
					  mediump vec3 x_7;
					  x_7.x = dot (unity_SHAr, tmpvar_6);
					  x_7.y = dot (unity_SHAg, tmpvar_6);
					  x_7.z = dot (unity_SHAb, tmpvar_6);
					  mediump vec4 outDiffuseOcclusion_8;
					  mediump vec4 outNormal_9;
					  mediump vec4 emission_10;
					  lowp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_3;
					  outDiffuseOcclusion_8 = tmpvar_11;
					  mediump vec4 tmpvar_12;
					  tmpvar_12.xyz = _SpecColor.xyz;
					  tmpvar_12.w = 0.0;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  outNormal_9 = tmpvar_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = vec3(0.0, 0.0, 0.0);
					  emission_10 = tmpvar_14;
					  emission_10.xyz = (emission_10.xyz + (tmpvar_3 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD4 + x_7)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_8.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_12;
					  gl_FragData[2] = outNormal_9;
					  gl_FragData[3] = emission_10;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_2 = worldNormal_1;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 tmpvar_3;
					  tmpvar_3 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = (texture2D (_MainTex, P_5).xyz * _Color.xyz);
					  mediump vec3 normalWorld_6;
					  normalWorld_6 = tmpvar_3;
					  mediump vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = normalWorld_6;
					  mediump vec3 x_8;
					  x_8.x = dot (unity_SHAr, tmpvar_7);
					  x_8.y = dot (unity_SHAg, tmpvar_7);
					  x_8.z = dot (unity_SHAb, tmpvar_7);
					  mediump vec4 outDiffuseOcclusion_9;
					  mediump vec4 outNormal_10;
					  mediump vec4 emission_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = tmpvar_4;
					  outDiffuseOcclusion_9 = tmpvar_12;
					  mediump vec4 tmpvar_13;
					  tmpvar_13.xyz = _SpecColor.xyz;
					  tmpvar_13.w = _Shininess;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = ((tmpvar_3 * 0.5) + 0.5);
					  outNormal_10 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = vec3(0.0, 0.0, 0.0);
					  emission_11 = tmpvar_15;
					  emission_11.xyz = (emission_11.xyz + (tmpvar_4 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD4 + x_8)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_9.xyz;
					  outEmission_2.w = emission_11.w;
					  outEmission_2.xyz = exp2(-(emission_11.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_13;
					  gl_FragData[2] = outNormal_10;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_2 = worldNormal_1;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 tmpvar_2;
					  tmpvar_2 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_3;
					  highp vec2 P_4;
					  P_4 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_3 = (texture2D (_MainTex, P_4).xyz * _Color.xyz);
					  mediump vec3 normalWorld_5;
					  normalWorld_5 = tmpvar_2;
					  mediump vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = normalWorld_5;
					  mediump vec3 x_7;
					  x_7.x = dot (unity_SHAr, tmpvar_6);
					  x_7.y = dot (unity_SHAg, tmpvar_6);
					  x_7.z = dot (unity_SHAb, tmpvar_6);
					  mediump vec4 outDiffuseOcclusion_8;
					  mediump vec4 outNormal_9;
					  mediump vec4 emission_10;
					  lowp vec4 tmpvar_11;
					  tmpvar_11.w = 1.0;
					  tmpvar_11.xyz = tmpvar_3;
					  outDiffuseOcclusion_8 = tmpvar_11;
					  mediump vec4 tmpvar_12;
					  tmpvar_12.xyz = _SpecColor.xyz;
					  tmpvar_12.w = _Shininess;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  outNormal_9 = tmpvar_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = vec3(0.0, 0.0, 0.0);
					  emission_10 = tmpvar_14;
					  emission_10.xyz = (emission_10.xyz + (tmpvar_3 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD4 + x_7)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_8.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_12;
					  gl_FragData[2] = outNormal_9;
					  gl_FragData[3] = emission_10;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  tmpvar_4.zw = vec2(0.0, 0.0);
					  tmpvar_4.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 worldN_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 tmpvar_5;
					  highp vec2 P_6;
					  highp vec2 tmpvar_7;
					  tmpvar_7 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_6 = (xlv_TEXCOORD0 + tmpvar_7);
					  tmpvar_4 = (texture2D (_MainTex, P_6).xyz * _Color.xyz);
					  highp vec2 P_8;
					  P_8 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_7);
					  lowp vec3 normal_9;
					  normal_9.xy = ((texture2D (_V_CW_NormalMap, P_8).wy * 2.0) - 1.0);
					  normal_9.z = sqrt((1.0 - clamp (
					    dot (normal_9.xy, normal_9.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_10;
					  tmpvar_10.xy = (normal_9.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_10.z = normal_9.z;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = normalize(tmpvar_10);
					  tmpvar_5 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_3.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_3.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_3.z = tmpvar_14;
					  mediump vec3 normalWorld_15;
					  normalWorld_15 = worldN_3;
					  mediump vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = normalWorld_15;
					  mediump vec3 x_17;
					  x_17.x = dot (unity_SHAr, tmpvar_16);
					  x_17.y = dot (unity_SHAg, tmpvar_16);
					  x_17.z = dot (unity_SHAb, tmpvar_16);
					  mediump vec4 outDiffuseOcclusion_18;
					  mediump vec4 outNormal_19;
					  mediump vec4 emission_20;
					  lowp vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = tmpvar_4;
					  outDiffuseOcclusion_18 = tmpvar_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22.xyz = _SpecColor.xyz;
					  tmpvar_22.w = _Shininess;
					  lowp vec4 tmpvar_23;
					  tmpvar_23.w = 1.0;
					  tmpvar_23.xyz = ((worldN_3 * 0.5) + 0.5);
					  outNormal_19 = tmpvar_23;
					  lowp vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = vec3(0.0, 0.0, 0.0);
					  emission_20 = tmpvar_24;
					  emission_20.xyz = (emission_20.xyz + (tmpvar_4 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD5 + x_17)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_18.xyz;
					  outEmission_2.w = emission_20.w;
					  outEmission_2.xyz = exp2(-(emission_20.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_22;
					  gl_FragData[2] = outNormal_19;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  tmpvar_4.zw = vec2(0.0, 0.0);
					  tmpvar_4.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  lowp vec3 tmpvar_4;
					  highp vec2 P_5;
					  highp vec2 tmpvar_6;
					  tmpvar_6 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_5 = (xlv_TEXCOORD0 + tmpvar_6);
					  tmpvar_3 = (texture2D (_MainTex, P_5).xyz * _Color.xyz);
					  highp vec2 P_7;
					  P_7 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_6);
					  lowp vec3 normal_8;
					  normal_8.xy = ((texture2D (_V_CW_NormalMap, P_7).wy * 2.0) - 1.0);
					  normal_8.z = sqrt((1.0 - clamp (
					    dot (normal_8.xy, normal_8.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_9;
					  tmpvar_9.xy = (normal_8.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_9.z = normal_8.z;
					  mediump vec3 tmpvar_10;
					  tmpvar_10 = normalize(tmpvar_9);
					  tmpvar_4 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = dot (xlv_TEXCOORD1.xyz, tmpvar_4);
					  worldN_2.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD2.xyz, tmpvar_4);
					  worldN_2.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (xlv_TEXCOORD3.xyz, tmpvar_4);
					  worldN_2.z = tmpvar_13;
					  mediump vec3 normalWorld_14;
					  normalWorld_14 = worldN_2;
					  mediump vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = normalWorld_14;
					  mediump vec3 x_16;
					  x_16.x = dot (unity_SHAr, tmpvar_15);
					  x_16.y = dot (unity_SHAg, tmpvar_15);
					  x_16.z = dot (unity_SHAb, tmpvar_15);
					  mediump vec4 outDiffuseOcclusion_17;
					  mediump vec4 outNormal_18;
					  mediump vec4 emission_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20.w = 1.0;
					  tmpvar_20.xyz = tmpvar_3;
					  outDiffuseOcclusion_17 = tmpvar_20;
					  mediump vec4 tmpvar_21;
					  tmpvar_21.xyz = _SpecColor.xyz;
					  tmpvar_21.w = _Shininess;
					  lowp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = ((worldN_2 * 0.5) + 0.5);
					  outNormal_18 = tmpvar_22;
					  lowp vec4 tmpvar_23;
					  tmpvar_23.w = 1.0;
					  tmpvar_23.xyz = vec3(0.0, 0.0, 0.0);
					  emission_19 = tmpvar_23;
					  emission_19.xyz = (emission_19.xyz + (tmpvar_3 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD5 + x_16)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_17.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_21;
					  gl_FragData[2] = outNormal_18;
					  gl_FragData[3] = emission_19;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  tmpvar_4.zw = vec2(0.0, 0.0);
					  tmpvar_4.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 worldN_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  highp vec2 P_7;
					  highp vec2 tmpvar_8;
					  tmpvar_8 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_7 = (xlv_TEXCOORD0 + tmpvar_8);
					  tmpvar_4 = (texture2D (_MainTex, P_7).xyz * _Color.xyz);
					  highp vec2 P_9;
					  P_9 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_8);
					  lowp vec3 normal_10;
					  normal_10.xy = ((texture2D (_V_CW_NormalMap, P_9).wy * 2.0) - 1.0);
					  normal_10.z = sqrt((1.0 - clamp (
					    dot (normal_10.xy, normal_10.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_11;
					  tmpvar_11.xy = (normal_10.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_11.z = normal_10.z;
					  mediump vec3 tmpvar_12;
					  tmpvar_12 = normalize(tmpvar_11);
					  tmpvar_5 = tmpvar_12;
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_13;
					  tmpvar_13 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_3.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_3.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_3.z = tmpvar_15;
					  mediump vec3 normalWorld_16;
					  normalWorld_16 = worldN_3;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_16;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  mediump vec4 outDiffuseOcclusion_19;
					  mediump vec4 outNormal_20;
					  mediump vec4 emission_21;
					  lowp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = tmpvar_4;
					  outDiffuseOcclusion_19 = tmpvar_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23.xyz = _SpecColor.xyz;
					  tmpvar_23.w = _Shininess;
					  lowp vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = ((worldN_3 * 0.5) + 0.5);
					  outNormal_20 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = tmpvar_6;
					  emission_21 = tmpvar_25;
					  emission_21.xyz = (emission_21.xyz + (tmpvar_4 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD5 + x_18)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_19.xyz;
					  outEmission_2.w = emission_21.w;
					  outEmission_2.xyz = exp2(-(emission_21.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_23;
					  gl_FragData[2] = outNormal_20;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  tmpvar_4.zw = vec2(0.0, 0.0);
					  tmpvar_4.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  lowp vec3 tmpvar_4;
					  lowp vec3 tmpvar_5;
					  highp vec2 P_6;
					  highp vec2 tmpvar_7;
					  tmpvar_7 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_6 = (xlv_TEXCOORD0 + tmpvar_7);
					  tmpvar_3 = (texture2D (_MainTex, P_6).xyz * _Color.xyz);
					  highp vec2 P_8;
					  P_8 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_7);
					  lowp vec3 normal_9;
					  normal_9.xy = ((texture2D (_V_CW_NormalMap, P_8).wy * 2.0) - 1.0);
					  normal_9.z = sqrt((1.0 - clamp (
					    dot (normal_9.xy, normal_9.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_10;
					  tmpvar_10.xy = (normal_9.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_10.z = normal_9.z;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = normalize(tmpvar_10);
					  tmpvar_4 = tmpvar_11;
					  tmpvar_5 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD1.xyz, tmpvar_4);
					  worldN_2.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (xlv_TEXCOORD2.xyz, tmpvar_4);
					  worldN_2.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = dot (xlv_TEXCOORD3.xyz, tmpvar_4);
					  worldN_2.z = tmpvar_14;
					  mediump vec3 normalWorld_15;
					  normalWorld_15 = worldN_2;
					  mediump vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = normalWorld_15;
					  mediump vec3 x_17;
					  x_17.x = dot (unity_SHAr, tmpvar_16);
					  x_17.y = dot (unity_SHAg, tmpvar_16);
					  x_17.z = dot (unity_SHAb, tmpvar_16);
					  mediump vec4 outDiffuseOcclusion_18;
					  mediump vec4 outNormal_19;
					  mediump vec4 emission_20;
					  lowp vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = tmpvar_3;
					  outDiffuseOcclusion_18 = tmpvar_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22.xyz = _SpecColor.xyz;
					  tmpvar_22.w = _Shininess;
					  lowp vec4 tmpvar_23;
					  tmpvar_23.w = 1.0;
					  tmpvar_23.xyz = ((worldN_2 * 0.5) + 0.5);
					  outNormal_19 = tmpvar_23;
					  lowp vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = tmpvar_5;
					  emission_20 = tmpvar_24;
					  emission_20.xyz = (emission_20.xyz + (tmpvar_3 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD5 + x_17)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_18.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_22;
					  gl_FragData[2] = outNormal_19;
					  gl_FragData[3] = emission_20;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_2 = worldNormal_1;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  tmpvar_3 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_5;
					  highp vec2 P_6;
					  P_6 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_5 = (texture2D (_MainTex, P_6).xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  mediump vec3 normalWorld_7;
					  normalWorld_7 = tmpvar_3;
					  mediump vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = normalWorld_7;
					  mediump vec3 x_9;
					  x_9.x = dot (unity_SHAr, tmpvar_8);
					  x_9.y = dot (unity_SHAg, tmpvar_8);
					  x_9.z = dot (unity_SHAb, tmpvar_8);
					  mediump vec4 outDiffuseOcclusion_10;
					  mediump vec4 outNormal_11;
					  mediump vec4 emission_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = tmpvar_5;
					  outDiffuseOcclusion_10 = tmpvar_13;
					  mediump vec4 tmpvar_14;
					  tmpvar_14.xyz = _SpecColor.xyz;
					  tmpvar_14.w = 0.0;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = ((tmpvar_3 * 0.5) + 0.5);
					  outNormal_11 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = vec3(0.0, 0.0, 0.0);
					  emission_12 = tmpvar_16;
					  emission_12.xyz = (emission_12.xyz + (tmpvar_5 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD4 + x_9)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_10.xyz;
					  outEmission_2.w = emission_12.w;
					  outEmission_2.xyz = exp2(-(emission_12.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_14;
					  gl_FragData[2] = outNormal_11;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_2 = worldNormal_1;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = xlv_COLOR0;
					  tmpvar_2 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = (texture2D (_MainTex, P_5).xyz * _Color.xyz);
					  tmpvar_4 = (tmpvar_4 * tmpvar_3.xyz);
					  mediump vec3 normalWorld_6;
					  normalWorld_6 = tmpvar_2;
					  mediump vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = normalWorld_6;
					  mediump vec3 x_8;
					  x_8.x = dot (unity_SHAr, tmpvar_7);
					  x_8.y = dot (unity_SHAg, tmpvar_7);
					  x_8.z = dot (unity_SHAb, tmpvar_7);
					  mediump vec4 outDiffuseOcclusion_9;
					  mediump vec4 outNormal_10;
					  mediump vec4 emission_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = tmpvar_4;
					  outDiffuseOcclusion_9 = tmpvar_12;
					  mediump vec4 tmpvar_13;
					  tmpvar_13.xyz = _SpecColor.xyz;
					  tmpvar_13.w = 0.0;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  outNormal_10 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = vec3(0.0, 0.0, 0.0);
					  emission_11 = tmpvar_15;
					  emission_11.xyz = (emission_11.xyz + (tmpvar_4 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD4 + x_8)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_9.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_13;
					  gl_FragData[2] = outNormal_10;
					  gl_FragData[3] = emission_11;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_2 = worldNormal_1;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  tmpvar_3 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_5;
					  highp vec2 P_6;
					  P_6 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_5 = (texture2D (_MainTex, P_6).xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  mediump vec3 normalWorld_7;
					  normalWorld_7 = tmpvar_3;
					  mediump vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = normalWorld_7;
					  mediump vec3 x_9;
					  x_9.x = dot (unity_SHAr, tmpvar_8);
					  x_9.y = dot (unity_SHAg, tmpvar_8);
					  x_9.z = dot (unity_SHAb, tmpvar_8);
					  mediump vec4 outDiffuseOcclusion_10;
					  mediump vec4 outNormal_11;
					  mediump vec4 emission_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = tmpvar_5;
					  outDiffuseOcclusion_10 = tmpvar_13;
					  mediump vec4 tmpvar_14;
					  tmpvar_14.xyz = _SpecColor.xyz;
					  tmpvar_14.w = _Shininess;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = ((tmpvar_3 * 0.5) + 0.5);
					  outNormal_11 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = vec3(0.0, 0.0, 0.0);
					  emission_12 = tmpvar_16;
					  emission_12.xyz = (emission_12.xyz + (tmpvar_5 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD4 + x_9)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_10.xyz;
					  outEmission_2.w = emission_12.w;
					  outEmission_2.xyz = exp2(-(emission_12.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_14;
					  gl_FragData[2] = outNormal_11;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_2 = worldNormal_1;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = xlv_COLOR0;
					  tmpvar_2 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_4;
					  highp vec2 P_5;
					  P_5 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = (texture2D (_MainTex, P_5).xyz * _Color.xyz);
					  tmpvar_4 = (tmpvar_4 * tmpvar_3.xyz);
					  mediump vec3 normalWorld_6;
					  normalWorld_6 = tmpvar_2;
					  mediump vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = normalWorld_6;
					  mediump vec3 x_8;
					  x_8.x = dot (unity_SHAr, tmpvar_7);
					  x_8.y = dot (unity_SHAg, tmpvar_7);
					  x_8.z = dot (unity_SHAb, tmpvar_7);
					  mediump vec4 outDiffuseOcclusion_9;
					  mediump vec4 outNormal_10;
					  mediump vec4 emission_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12.w = 1.0;
					  tmpvar_12.xyz = tmpvar_4;
					  outDiffuseOcclusion_9 = tmpvar_12;
					  mediump vec4 tmpvar_13;
					  tmpvar_13.xyz = _SpecColor.xyz;
					  tmpvar_13.w = _Shininess;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  outNormal_10 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = vec3(0.0, 0.0, 0.0);
					  emission_11 = tmpvar_15;
					  emission_11.xyz = (emission_11.xyz + (tmpvar_4 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD4 + x_8)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_9.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_13;
					  gl_FragData[2] = outNormal_10;
					  gl_FragData[3] = emission_11;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  tmpvar_4.zw = vec2(0.0, 0.0);
					  tmpvar_4.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 worldN_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  highp vec2 P_7;
					  highp vec2 tmpvar_8;
					  tmpvar_8 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_7 = (xlv_TEXCOORD0 + tmpvar_8);
					  tmpvar_5 = (texture2D (_MainTex, P_7).xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  highp vec2 P_9;
					  P_9 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_8);
					  lowp vec3 normal_10;
					  normal_10.xy = ((texture2D (_V_CW_NormalMap, P_9).wy * 2.0) - 1.0);
					  normal_10.z = sqrt((1.0 - clamp (
					    dot (normal_10.xy, normal_10.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_11;
					  tmpvar_11.xy = (normal_10.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_11.z = normal_10.z;
					  mediump vec3 tmpvar_12;
					  tmpvar_12 = normalize(tmpvar_11);
					  tmpvar_6 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (xlv_TEXCOORD1.xyz, tmpvar_6);
					  worldN_3.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = dot (xlv_TEXCOORD2.xyz, tmpvar_6);
					  worldN_3.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD3.xyz, tmpvar_6);
					  worldN_3.z = tmpvar_15;
					  mediump vec3 normalWorld_16;
					  normalWorld_16 = worldN_3;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_16;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  mediump vec4 outDiffuseOcclusion_19;
					  mediump vec4 outNormal_20;
					  mediump vec4 emission_21;
					  lowp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = tmpvar_5;
					  outDiffuseOcclusion_19 = tmpvar_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23.xyz = _SpecColor.xyz;
					  tmpvar_23.w = 0.0;
					  lowp vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = ((worldN_3 * 0.5) + 0.5);
					  outNormal_20 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = vec3(0.0, 0.0, 0.0);
					  emission_21 = tmpvar_25;
					  emission_21.xyz = (emission_21.xyz + (tmpvar_5 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD5 + x_18)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_19.xyz;
					  outEmission_2.w = emission_21.w;
					  outEmission_2.xyz = exp2(-(emission_21.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_23;
					  gl_FragData[2] = outNormal_20;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  tmpvar_4.zw = vec2(0.0, 0.0);
					  tmpvar_4.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 worldN_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = xlv_COLOR0;
					  lowp vec3 tmpvar_4;
					  lowp vec3 tmpvar_5;
					  highp vec2 P_6;
					  highp vec2 tmpvar_7;
					  tmpvar_7 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_6 = (xlv_TEXCOORD0 + tmpvar_7);
					  tmpvar_4 = (texture2D (_MainTex, P_6).xyz * _Color.xyz);
					  tmpvar_4 = (tmpvar_4 * tmpvar_3.xyz);
					  highp vec2 P_8;
					  P_8 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_7);
					  lowp vec3 normal_9;
					  normal_9.xy = ((texture2D (_V_CW_NormalMap, P_8).wy * 2.0) - 1.0);
					  normal_9.z = sqrt((1.0 - clamp (
					    dot (normal_9.xy, normal_9.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_10;
					  tmpvar_10.xy = (normal_9.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_10.z = normal_9.z;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = normalize(tmpvar_10);
					  tmpvar_5 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_2.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_2.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_2.z = tmpvar_14;
					  mediump vec3 normalWorld_15;
					  normalWorld_15 = worldN_2;
					  mediump vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = normalWorld_15;
					  mediump vec3 x_17;
					  x_17.x = dot (unity_SHAr, tmpvar_16);
					  x_17.y = dot (unity_SHAg, tmpvar_16);
					  x_17.z = dot (unity_SHAb, tmpvar_16);
					  mediump vec4 outDiffuseOcclusion_18;
					  mediump vec4 outNormal_19;
					  mediump vec4 emission_20;
					  lowp vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = tmpvar_4;
					  outDiffuseOcclusion_18 = tmpvar_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22.xyz = _SpecColor.xyz;
					  tmpvar_22.w = 0.0;
					  lowp vec4 tmpvar_23;
					  tmpvar_23.w = 1.0;
					  tmpvar_23.xyz = ((worldN_2 * 0.5) + 0.5);
					  outNormal_19 = tmpvar_23;
					  lowp vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = vec3(0.0, 0.0, 0.0);
					  emission_20 = tmpvar_24;
					  emission_20.xyz = (emission_20.xyz + (tmpvar_4 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD5 + x_17)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_18.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_22;
					  gl_FragData[2] = outNormal_19;
					  gl_FragData[3] = emission_20;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  tmpvar_4.zw = vec2(0.0, 0.0);
					  tmpvar_4.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 worldN_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  highp vec2 P_7;
					  highp vec2 tmpvar_8;
					  tmpvar_8 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_7 = (xlv_TEXCOORD0 + tmpvar_8);
					  tmpvar_5 = (texture2D (_MainTex, P_7).xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  highp vec2 P_9;
					  P_9 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_8);
					  lowp vec3 normal_10;
					  normal_10.xy = ((texture2D (_V_CW_NormalMap, P_9).wy * 2.0) - 1.0);
					  normal_10.z = sqrt((1.0 - clamp (
					    dot (normal_10.xy, normal_10.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_11;
					  tmpvar_11.xy = (normal_10.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_11.z = normal_10.z;
					  mediump vec3 tmpvar_12;
					  tmpvar_12 = normalize(tmpvar_11);
					  tmpvar_6 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (xlv_TEXCOORD1.xyz, tmpvar_6);
					  worldN_3.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = dot (xlv_TEXCOORD2.xyz, tmpvar_6);
					  worldN_3.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD3.xyz, tmpvar_6);
					  worldN_3.z = tmpvar_15;
					  mediump vec3 normalWorld_16;
					  normalWorld_16 = worldN_3;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_16;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  mediump vec4 outDiffuseOcclusion_19;
					  mediump vec4 outNormal_20;
					  mediump vec4 emission_21;
					  lowp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = tmpvar_5;
					  outDiffuseOcclusion_19 = tmpvar_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23.xyz = _SpecColor.xyz;
					  tmpvar_23.w = _Shininess;
					  lowp vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = ((worldN_3 * 0.5) + 0.5);
					  outNormal_20 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = vec3(0.0, 0.0, 0.0);
					  emission_21 = tmpvar_25;
					  emission_21.xyz = (emission_21.xyz + (tmpvar_5 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD5 + x_18)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_19.xyz;
					  outEmission_2.w = emission_21.w;
					  outEmission_2.xyz = exp2(-(emission_21.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_23;
					  gl_FragData[2] = outNormal_20;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  tmpvar_4.zw = vec2(0.0, 0.0);
					  tmpvar_4.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 worldN_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = xlv_COLOR0;
					  lowp vec3 tmpvar_4;
					  lowp vec3 tmpvar_5;
					  highp vec2 P_6;
					  highp vec2 tmpvar_7;
					  tmpvar_7 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_6 = (xlv_TEXCOORD0 + tmpvar_7);
					  tmpvar_4 = (texture2D (_MainTex, P_6).xyz * _Color.xyz);
					  tmpvar_4 = (tmpvar_4 * tmpvar_3.xyz);
					  highp vec2 P_8;
					  P_8 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_7);
					  lowp vec3 normal_9;
					  normal_9.xy = ((texture2D (_V_CW_NormalMap, P_8).wy * 2.0) - 1.0);
					  normal_9.z = sqrt((1.0 - clamp (
					    dot (normal_9.xy, normal_9.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_10;
					  tmpvar_10.xy = (normal_9.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_10.z = normal_9.z;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = normalize(tmpvar_10);
					  tmpvar_5 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_2.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_2.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_2.z = tmpvar_14;
					  mediump vec3 normalWorld_15;
					  normalWorld_15 = worldN_2;
					  mediump vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = normalWorld_15;
					  mediump vec3 x_17;
					  x_17.x = dot (unity_SHAr, tmpvar_16);
					  x_17.y = dot (unity_SHAg, tmpvar_16);
					  x_17.z = dot (unity_SHAb, tmpvar_16);
					  mediump vec4 outDiffuseOcclusion_18;
					  mediump vec4 outNormal_19;
					  mediump vec4 emission_20;
					  lowp vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = tmpvar_4;
					  outDiffuseOcclusion_18 = tmpvar_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22.xyz = _SpecColor.xyz;
					  tmpvar_22.w = _Shininess;
					  lowp vec4 tmpvar_23;
					  tmpvar_23.w = 1.0;
					  tmpvar_23.xyz = ((worldN_2 * 0.5) + 0.5);
					  outNormal_19 = tmpvar_23;
					  lowp vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = vec3(0.0, 0.0, 0.0);
					  emission_20 = tmpvar_24;
					  emission_20.xyz = (emission_20.xyz + (tmpvar_4 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD5 + x_17)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_18.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_22;
					  gl_FragData[2] = outNormal_19;
					  gl_FragData[3] = emission_20;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_2 = worldNormal_1;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  tmpvar_3 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_5 = (texture2D (_MainTex, P_7).xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  mediump vec3 normalWorld_8;
					  normalWorld_8 = tmpvar_3;
					  mediump vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = normalWorld_8;
					  mediump vec3 x_10;
					  x_10.x = dot (unity_SHAr, tmpvar_9);
					  x_10.y = dot (unity_SHAg, tmpvar_9);
					  x_10.z = dot (unity_SHAb, tmpvar_9);
					  mediump vec4 outDiffuseOcclusion_11;
					  mediump vec4 outNormal_12;
					  mediump vec4 emission_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = tmpvar_5;
					  outDiffuseOcclusion_11 = tmpvar_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15.xyz = _SpecColor.xyz;
					  tmpvar_15.w = 0.0;
					  lowp vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = ((tmpvar_3 * 0.5) + 0.5);
					  outNormal_12 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = tmpvar_6;
					  emission_13 = tmpvar_17;
					  emission_13.xyz = (emission_13.xyz + (tmpvar_5 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD4 + x_10)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_11.xyz;
					  outEmission_2.w = emission_13.w;
					  outEmission_2.xyz = exp2(-(emission_13.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_15;
					  gl_FragData[2] = outNormal_12;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_2 = worldNormal_1;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = xlv_COLOR0;
					  tmpvar_2 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_4;
					  lowp vec3 tmpvar_5;
					  highp vec2 P_6;
					  P_6 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = (texture2D (_MainTex, P_6).xyz * _Color.xyz);
					  tmpvar_4 = (tmpvar_4 * tmpvar_3.xyz);
					  tmpvar_5 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  mediump vec3 normalWorld_7;
					  normalWorld_7 = tmpvar_2;
					  mediump vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = normalWorld_7;
					  mediump vec3 x_9;
					  x_9.x = dot (unity_SHAr, tmpvar_8);
					  x_9.y = dot (unity_SHAg, tmpvar_8);
					  x_9.z = dot (unity_SHAb, tmpvar_8);
					  mediump vec4 outDiffuseOcclusion_10;
					  mediump vec4 outNormal_11;
					  mediump vec4 emission_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = tmpvar_4;
					  outDiffuseOcclusion_10 = tmpvar_13;
					  mediump vec4 tmpvar_14;
					  tmpvar_14.xyz = _SpecColor.xyz;
					  tmpvar_14.w = 0.0;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  outNormal_11 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = tmpvar_5;
					  emission_12 = tmpvar_16;
					  emission_12.xyz = (emission_12.xyz + (tmpvar_4 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD4 + x_9)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_10.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_14;
					  gl_FragData[2] = outNormal_11;
					  gl_FragData[3] = emission_12;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_2 = worldNormal_1;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  tmpvar_3 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  highp vec2 P_7;
					  P_7 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_5 = (texture2D (_MainTex, P_7).xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  mediump vec3 normalWorld_8;
					  normalWorld_8 = tmpvar_3;
					  mediump vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = normalWorld_8;
					  mediump vec3 x_10;
					  x_10.x = dot (unity_SHAr, tmpvar_9);
					  x_10.y = dot (unity_SHAg, tmpvar_9);
					  x_10.z = dot (unity_SHAb, tmpvar_9);
					  mediump vec4 outDiffuseOcclusion_11;
					  mediump vec4 outNormal_12;
					  mediump vec4 emission_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14.w = 1.0;
					  tmpvar_14.xyz = tmpvar_5;
					  outDiffuseOcclusion_11 = tmpvar_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15.xyz = _SpecColor.xyz;
					  tmpvar_15.w = _Shininess;
					  lowp vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = ((tmpvar_3 * 0.5) + 0.5);
					  outNormal_12 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = tmpvar_6;
					  emission_13 = tmpvar_17;
					  emission_13.xyz = (emission_13.xyz + (tmpvar_5 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD4 + x_10)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_11.xyz;
					  outEmission_2.w = emission_13.w;
					  outEmission_2.xyz = exp2(-(emission_13.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_15;
					  gl_FragData[2] = outNormal_12;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying highp vec3 xlv_TEXCOORD2;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  highp vec4 v_4;
					  highp float tmpvar_5;
					  tmpvar_5 = _World2Object[0].x;
					  v_4.x = tmpvar_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[1].x;
					  v_4.y = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[2].x;
					  v_4.z = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[3].x;
					  v_4.w = tmpvar_8;
					  highp vec4 v_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[0].y;
					  v_9.x = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[1].y;
					  v_9.y = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[2].y;
					  v_9.z = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[3].y;
					  v_9.w = tmpvar_13;
					  highp vec4 v_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[0].z;
					  v_14.x = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[1].z;
					  v_14.y = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[2].z;
					  v_14.z = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[3].z;
					  v_14.w = tmpvar_18;
					  highp vec3 tmpvar_19;
					  tmpvar_19 = normalize(((
					    (v_4.xyz * _glesNormal.x)
					   + 
					    (v_9.xyz * _glesNormal.y)
					  ) + (v_14.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _Object2World[0].xyz;
					  tmpvar_20[1] = _Object2World[1].xyz;
					  tmpvar_20[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize((tmpvar_20 * _glesTANGENT.xyz));
					  highp vec4 vertex_22;
					  vertex_22.w = _glesVertex.w;
					  highp vec2 xzOff_23;
					  highp vec3 v2_24;
					  highp vec3 v1_25;
					  highp vec3 v0_26;
					  highp vec3 tmpvar_27;
					  tmpvar_27 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_28;
					  tmpvar_28 = (tmpvar_27 + tmpvar_21);
					  v1_25.xz = tmpvar_28.xz;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_27 - ((tmpvar_19.yzx * tmpvar_21.zxy) - (tmpvar_19.zxy * tmpvar_21.yzx)));
					  v2_24.xz = tmpvar_29.xz;
					  highp vec2 tmpvar_30;
					  tmpvar_30.x = float((tmpvar_27.z >= 0.0));
					  tmpvar_30.y = float((tmpvar_27.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_27.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_30 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  highp vec3 tmpvar_31;
					  tmpvar_31.xz = vec2(0.0, 0.0);
					  tmpvar_31.y = (((_V_CW_Bend.x * xzOff_23.x) + (_V_CW_Bend.z * xzOff_23.y)) * 0.001);
					  v0_26 = (tmpvar_27 + tmpvar_31);
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_28.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v1_25.y = (tmpvar_28.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_23 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_23 = (xzOff_23 * xzOff_23);
					  v2_24.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_23.x)
					   + 
					    (_V_CW_Bend.z * xzOff_23.y)
					  ) * 0.001));
					  highp mat3 tmpvar_34;
					  tmpvar_34[0] = _World2Object[0].xyz;
					  tmpvar_34[1] = _World2Object[1].xyz;
					  tmpvar_34[2] = _World2Object[2].xyz;
					  vertex_22.xyz = (_glesVertex.xyz + (tmpvar_34 * tmpvar_31));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  highp vec3 a_36;
					  a_36 = (v2_24 - v0_26);
					  highp vec3 b_37;
					  b_37 = (v1_25 - v0_26);
					  highp vec3 tmpvar_38;
					  tmpvar_38 = normalize((tmpvar_35 * normalize(
					    ((a_36.yzx * b_37.zxy) - (a_36.zxy * b_37.yzx))
					  )));
					  highp vec4 v_39;
					  v_39.x = tmpvar_5;
					  v_39.y = tmpvar_6;
					  v_39.z = tmpvar_7;
					  v_39.w = tmpvar_8;
					  highp vec4 v_40;
					  v_40.x = tmpvar_10;
					  v_40.y = tmpvar_11;
					  v_40.z = tmpvar_12;
					  v_40.w = tmpvar_13;
					  highp vec4 v_41;
					  v_41.x = tmpvar_15;
					  v_41.y = tmpvar_16;
					  v_41.z = tmpvar_17;
					  v_41.w = tmpvar_18;
					  highp vec3 tmpvar_42;
					  tmpvar_42 = normalize(((
					    (v_39.xyz * tmpvar_38.x)
					   + 
					    (v_40.xyz * tmpvar_38.y)
					  ) + (v_41.xyz * tmpvar_38.z)));
					  worldNormal_1 = tmpvar_42;
					  tmpvar_2 = worldNormal_1;
					  tmpvar_3.zw = vec2(0.0, 0.0);
					  tmpvar_3.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_43;
					  normal_43 = worldNormal_1;
					  mediump vec3 x1_44;
					  mediump vec4 tmpvar_45;
					  tmpvar_45 = (normal_43.xyzz * normal_43.yzzx);
					  x1_44.x = dot (unity_SHBr, tmpvar_45);
					  x1_44.y = dot (unity_SHBg, tmpvar_45);
					  x1_44.z = dot (unity_SHBb, tmpvar_45);
					  gl_Position = (glstate_matrix_mvp * vertex_22);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = (_Object2World * vertex_22).xyz;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD3 = tmpvar_3;
					  xlv_TEXCOORD4 = (x1_44 + (unity_SHC.xyz * (
					    (normal_43.x * normal_43.x)
					   - 
					    (normal_43.y * normal_43.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 tmpvar_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = xlv_COLOR0;
					  tmpvar_2 = xlv_TEXCOORD1;
					  lowp vec3 tmpvar_4;
					  lowp vec3 tmpvar_5;
					  highp vec2 P_6;
					  P_6 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_4 = (texture2D (_MainTex, P_6).xyz * _Color.xyz);
					  tmpvar_4 = (tmpvar_4 * tmpvar_3.xyz);
					  tmpvar_5 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  mediump vec3 normalWorld_7;
					  normalWorld_7 = tmpvar_2;
					  mediump vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = normalWorld_7;
					  mediump vec3 x_9;
					  x_9.x = dot (unity_SHAr, tmpvar_8);
					  x_9.y = dot (unity_SHAg, tmpvar_8);
					  x_9.z = dot (unity_SHAb, tmpvar_8);
					  mediump vec4 outDiffuseOcclusion_10;
					  mediump vec4 outNormal_11;
					  mediump vec4 emission_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13.w = 1.0;
					  tmpvar_13.xyz = tmpvar_4;
					  outDiffuseOcclusion_10 = tmpvar_13;
					  mediump vec4 tmpvar_14;
					  tmpvar_14.xyz = _SpecColor.xyz;
					  tmpvar_14.w = _Shininess;
					  lowp vec4 tmpvar_15;
					  tmpvar_15.w = 1.0;
					  tmpvar_15.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  outNormal_11 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = tmpvar_5;
					  emission_12 = tmpvar_16;
					  emission_12.xyz = (emission_12.xyz + (tmpvar_4 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD4 + x_9)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_10.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_14;
					  gl_FragData[2] = outNormal_11;
					  gl_FragData[3] = emission_12;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  tmpvar_4.zw = vec2(0.0, 0.0);
					  tmpvar_4.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 worldN_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 tmpvar_7;
					  highp vec2 P_8;
					  highp vec2 tmpvar_9;
					  tmpvar_9 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_8 = (xlv_TEXCOORD0 + tmpvar_9);
					  tmpvar_5 = (texture2D (_MainTex, P_8).xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  highp vec2 P_10;
					  P_10 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_9);
					  lowp vec3 normal_11;
					  normal_11.xy = ((texture2D (_V_CW_NormalMap, P_10).wy * 2.0) - 1.0);
					  normal_11.z = sqrt((1.0 - clamp (
					    dot (normal_11.xy, normal_11.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_12;
					  tmpvar_12.xy = (normal_11.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_12.z = normal_11.z;
					  mediump vec3 tmpvar_13;
					  tmpvar_13 = normalize(tmpvar_12);
					  tmpvar_6 = tmpvar_13;
					  tmpvar_7 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_14;
					  tmpvar_14 = dot (xlv_TEXCOORD1.xyz, tmpvar_6);
					  worldN_3.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD2.xyz, tmpvar_6);
					  worldN_3.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD3.xyz, tmpvar_6);
					  worldN_3.z = tmpvar_16;
					  mediump vec3 normalWorld_17;
					  normalWorld_17 = worldN_3;
					  mediump vec4 tmpvar_18;
					  tmpvar_18.w = 1.0;
					  tmpvar_18.xyz = normalWorld_17;
					  mediump vec3 x_19;
					  x_19.x = dot (unity_SHAr, tmpvar_18);
					  x_19.y = dot (unity_SHAg, tmpvar_18);
					  x_19.z = dot (unity_SHAb, tmpvar_18);
					  mediump vec4 outDiffuseOcclusion_20;
					  mediump vec4 outNormal_21;
					  mediump vec4 emission_22;
					  lowp vec4 tmpvar_23;
					  tmpvar_23.w = 1.0;
					  tmpvar_23.xyz = tmpvar_5;
					  outDiffuseOcclusion_20 = tmpvar_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24.xyz = _SpecColor.xyz;
					  tmpvar_24.w = 0.0;
					  lowp vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = ((worldN_3 * 0.5) + 0.5);
					  outNormal_21 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26.w = 1.0;
					  tmpvar_26.xyz = tmpvar_7;
					  emission_22 = tmpvar_26;
					  emission_22.xyz = (emission_22.xyz + (tmpvar_5 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD5 + x_19)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_20.xyz;
					  outEmission_2.w = emission_22.w;
					  outEmission_2.xyz = exp2(-(emission_22.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_24;
					  gl_FragData[2] = outNormal_21;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  tmpvar_4.zw = vec2(0.0, 0.0);
					  tmpvar_4.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 worldN_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = xlv_COLOR0;
					  lowp vec3 tmpvar_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  highp vec2 P_7;
					  highp vec2 tmpvar_8;
					  tmpvar_8 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_7 = (xlv_TEXCOORD0 + tmpvar_8);
					  tmpvar_4 = (texture2D (_MainTex, P_7).xyz * _Color.xyz);
					  tmpvar_4 = (tmpvar_4 * tmpvar_3.xyz);
					  highp vec2 P_9;
					  P_9 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_8);
					  lowp vec3 normal_10;
					  normal_10.xy = ((texture2D (_V_CW_NormalMap, P_9).wy * 2.0) - 1.0);
					  normal_10.z = sqrt((1.0 - clamp (
					    dot (normal_10.xy, normal_10.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_11;
					  tmpvar_11.xy = (normal_10.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_11.z = normal_10.z;
					  mediump vec3 tmpvar_12;
					  tmpvar_12 = normalize(tmpvar_11);
					  tmpvar_5 = tmpvar_12;
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_13;
					  tmpvar_13 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_2.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_2.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_2.z = tmpvar_15;
					  mediump vec3 normalWorld_16;
					  normalWorld_16 = worldN_2;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_16;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  mediump vec4 outDiffuseOcclusion_19;
					  mediump vec4 outNormal_20;
					  mediump vec4 emission_21;
					  lowp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = tmpvar_4;
					  outDiffuseOcclusion_19 = tmpvar_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23.xyz = _SpecColor.xyz;
					  tmpvar_23.w = 0.0;
					  lowp vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = ((worldN_2 * 0.5) + 0.5);
					  outNormal_20 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = tmpvar_6;
					  emission_21 = tmpvar_25;
					  emission_21.xyz = (emission_21.xyz + (tmpvar_4 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD5 + x_18)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_19.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_23;
					  gl_FragData[2] = outNormal_20;
					  gl_FragData[3] = emission_21;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  tmpvar_4.zw = vec2(0.0, 0.0);
					  tmpvar_4.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 worldN_3;
					  highp vec4 tmpvar_4;
					  tmpvar_4 = xlv_COLOR0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec3 tmpvar_7;
					  highp vec2 P_8;
					  highp vec2 tmpvar_9;
					  tmpvar_9 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_8 = (xlv_TEXCOORD0 + tmpvar_9);
					  tmpvar_5 = (texture2D (_MainTex, P_8).xyz * _Color.xyz);
					  tmpvar_5 = (tmpvar_5 * tmpvar_4.xyz);
					  highp vec2 P_10;
					  P_10 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_9);
					  lowp vec3 normal_11;
					  normal_11.xy = ((texture2D (_V_CW_NormalMap, P_10).wy * 2.0) - 1.0);
					  normal_11.z = sqrt((1.0 - clamp (
					    dot (normal_11.xy, normal_11.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_12;
					  tmpvar_12.xy = (normal_11.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_12.z = normal_11.z;
					  mediump vec3 tmpvar_13;
					  tmpvar_13 = normalize(tmpvar_12);
					  tmpvar_6 = tmpvar_13;
					  tmpvar_7 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_14;
					  tmpvar_14 = dot (xlv_TEXCOORD1.xyz, tmpvar_6);
					  worldN_3.x = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD2.xyz, tmpvar_6);
					  worldN_3.y = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = dot (xlv_TEXCOORD3.xyz, tmpvar_6);
					  worldN_3.z = tmpvar_16;
					  mediump vec3 normalWorld_17;
					  normalWorld_17 = worldN_3;
					  mediump vec4 tmpvar_18;
					  tmpvar_18.w = 1.0;
					  tmpvar_18.xyz = normalWorld_17;
					  mediump vec3 x_19;
					  x_19.x = dot (unity_SHAr, tmpvar_18);
					  x_19.y = dot (unity_SHAg, tmpvar_18);
					  x_19.z = dot (unity_SHAb, tmpvar_18);
					  mediump vec4 outDiffuseOcclusion_20;
					  mediump vec4 outNormal_21;
					  mediump vec4 emission_22;
					  lowp vec4 tmpvar_23;
					  tmpvar_23.w = 1.0;
					  tmpvar_23.xyz = tmpvar_5;
					  outDiffuseOcclusion_20 = tmpvar_23;
					  mediump vec4 tmpvar_24;
					  tmpvar_24.xyz = _SpecColor.xyz;
					  tmpvar_24.w = _Shininess;
					  lowp vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = ((worldN_3 * 0.5) + 0.5);
					  outNormal_21 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26.w = 1.0;
					  tmpvar_26.xyz = tmpvar_7;
					  emission_22 = tmpvar_26;
					  emission_22.xyz = (emission_22.xyz + (tmpvar_5 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD5 + x_19)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_20.xyz;
					  outEmission_2.w = emission_22.w;
					  outEmission_2.xyz = exp2(-(emission_22.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_24;
					  gl_FragData[2] = outNormal_21;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec4 _glesColor;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 v_5;
					  highp float tmpvar_6;
					  tmpvar_6 = _World2Object[0].x;
					  v_5.x = tmpvar_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[1].x;
					  v_5.y = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[2].x;
					  v_5.z = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[3].x;
					  v_5.w = tmpvar_9;
					  highp vec4 v_10;
					  highp float tmpvar_11;
					  tmpvar_11 = _World2Object[0].y;
					  v_10.x = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[1].y;
					  v_10.y = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[2].y;
					  v_10.z = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[3].y;
					  v_10.w = tmpvar_14;
					  highp vec4 v_15;
					  highp float tmpvar_16;
					  tmpvar_16 = _World2Object[0].z;
					  v_15.x = tmpvar_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[1].z;
					  v_15.y = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[2].z;
					  v_15.z = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[3].z;
					  v_15.w = tmpvar_19;
					  highp vec3 tmpvar_20;
					  tmpvar_20 = normalize(((
					    (v_5.xyz * _glesNormal.x)
					   + 
					    (v_10.xyz * _glesNormal.y)
					  ) + (v_15.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_21;
					  tmpvar_21[0] = _Object2World[0].xyz;
					  tmpvar_21[1] = _Object2World[1].xyz;
					  tmpvar_21[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_22;
					  tmpvar_22 = normalize((tmpvar_21 * _glesTANGENT.xyz));
					  highp vec4 vertex_23;
					  vertex_23.w = _glesVertex.w;
					  highp vec2 xzOff_24;
					  highp vec3 v2_25;
					  highp vec3 v1_26;
					  highp vec3 v0_27;
					  highp vec3 tmpvar_28;
					  tmpvar_28 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_29;
					  tmpvar_29 = (tmpvar_28 + tmpvar_22);
					  v1_26.xz = tmpvar_29.xz;
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_28 - ((tmpvar_20.yzx * tmpvar_22.zxy) - (tmpvar_20.zxy * tmpvar_22.yzx)));
					  v2_25.xz = tmpvar_30.xz;
					  highp vec2 tmpvar_31;
					  tmpvar_31.x = float((tmpvar_28.z >= 0.0));
					  tmpvar_31.y = float((tmpvar_28.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_28.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_31 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  highp vec3 tmpvar_32;
					  tmpvar_32.xz = vec2(0.0, 0.0);
					  tmpvar_32.y = (((_V_CW_Bend.x * xzOff_24.x) + (_V_CW_Bend.z * xzOff_24.y)) * 0.001);
					  v0_27 = (tmpvar_28 + tmpvar_32);
					  highp vec2 tmpvar_33;
					  tmpvar_33.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_33.y = float((tmpvar_29.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_33 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v1_26.y = (tmpvar_29.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_24 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_24 = (xzOff_24 * xzOff_24);
					  v2_25.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_24.x)
					   + 
					    (_V_CW_Bend.z * xzOff_24.y)
					  ) * 0.001));
					  highp mat3 tmpvar_35;
					  tmpvar_35[0] = _World2Object[0].xyz;
					  tmpvar_35[1] = _World2Object[1].xyz;
					  tmpvar_35[2] = _World2Object[2].xyz;
					  vertex_23.xyz = (_glesVertex.xyz + (tmpvar_35 * tmpvar_32));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  highp vec3 a_37;
					  a_37 = (v2_25 - v0_27);
					  highp vec3 b_38;
					  b_38 = (v1_26 - v0_27);
					  highp vec3 tmpvar_39;
					  tmpvar_39 = normalize((tmpvar_36 * normalize(
					    ((a_37.yzx * b_38.zxy) - (a_37.zxy * b_38.yzx))
					  )));
					  highp vec3 tmpvar_40;
					  tmpvar_40 = (_Object2World * vertex_23).xyz;
					  highp vec4 v_41;
					  v_41.x = tmpvar_6;
					  v_41.y = tmpvar_7;
					  v_41.z = tmpvar_8;
					  v_41.w = tmpvar_9;
					  highp vec4 v_42;
					  v_42.x = tmpvar_11;
					  v_42.y = tmpvar_12;
					  v_42.z = tmpvar_13;
					  v_42.w = tmpvar_14;
					  highp vec4 v_43;
					  v_43.x = tmpvar_16;
					  v_43.y = tmpvar_17;
					  v_43.z = tmpvar_18;
					  v_43.w = tmpvar_19;
					  highp vec3 tmpvar_44;
					  tmpvar_44 = normalize(((
					    (v_41.xyz * tmpvar_39.x)
					   + 
					    (v_42.xyz * tmpvar_39.y)
					  ) + (v_43.xyz * tmpvar_39.z)));
					  worldNormal_3 = tmpvar_44;
					  highp mat3 tmpvar_45;
					  tmpvar_45[0] = _Object2World[0].xyz;
					  tmpvar_45[1] = _Object2World[1].xyz;
					  tmpvar_45[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_46;
					  tmpvar_46 = normalize((tmpvar_45 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_46;
					  highp float tmpvar_47;
					  tmpvar_47 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_47;
					  lowp vec3 tmpvar_48;
					  tmpvar_48 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_49;
					  tmpvar_49.x = worldTangent_2.x;
					  tmpvar_49.y = tmpvar_48.x;
					  tmpvar_49.z = worldNormal_3.x;
					  tmpvar_49.w = tmpvar_40.x;
					  highp vec4 tmpvar_50;
					  tmpvar_50.x = worldTangent_2.y;
					  tmpvar_50.y = tmpvar_48.y;
					  tmpvar_50.z = worldNormal_3.y;
					  tmpvar_50.w = tmpvar_40.y;
					  highp vec4 tmpvar_51;
					  tmpvar_51.x = worldTangent_2.z;
					  tmpvar_51.y = tmpvar_48.z;
					  tmpvar_51.z = worldNormal_3.z;
					  tmpvar_51.w = tmpvar_40.z;
					  tmpvar_4.zw = vec2(0.0, 0.0);
					  tmpvar_4.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_52;
					  normal_52 = worldNormal_3;
					  mediump vec3 x1_53;
					  mediump vec4 tmpvar_54;
					  tmpvar_54 = (normal_52.xyzz * normal_52.yzzx);
					  x1_53.x = dot (unity_SHBr, tmpvar_54);
					  x1_53.y = dot (unity_SHBg, tmpvar_54);
					  x1_53.z = dot (unity_SHBb, tmpvar_54);
					  gl_Position = (glstate_matrix_mvp * vertex_23);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_49;
					  xlv_TEXCOORD2 = tmpvar_50;
					  xlv_TEXCOORD3 = tmpvar_51;
					  xlv_COLOR0 = _glesColor;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = (x1_53 + (unity_SHC.xyz * (
					    (normal_52.x * normal_52.x)
					   - 
					    (normal_52.y * normal_52.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform mediump float _Shininess;
					uniform sampler2D _V_CW_NormalMap;
					uniform mediump float _V_CW_NormalMap_UV_Scale;
					uniform mediump float _V_CW_NormalMapStrength;
					uniform sampler2D _EmissionMap;
					uniform mediump vec4 _EmissionColor;
					varying highp vec2 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying lowp vec4 xlv_COLOR0;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 worldN_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = xlv_COLOR0;
					  lowp vec3 tmpvar_4;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  highp vec2 P_7;
					  highp vec2 tmpvar_8;
					  tmpvar_8 = (_V_CW_MainTex_Scroll * _Time.x);
					  P_7 = (xlv_TEXCOORD0 + tmpvar_8);
					  tmpvar_4 = (texture2D (_MainTex, P_7).xyz * _Color.xyz);
					  tmpvar_4 = (tmpvar_4 * tmpvar_3.xyz);
					  highp vec2 P_9;
					  P_9 = ((xlv_TEXCOORD0 * _V_CW_NormalMap_UV_Scale) + tmpvar_8);
					  lowp vec3 normal_10;
					  normal_10.xy = ((texture2D (_V_CW_NormalMap, P_9).wy * 2.0) - 1.0);
					  normal_10.z = sqrt((1.0 - clamp (
					    dot (normal_10.xy, normal_10.xy)
					  , 0.0, 1.0)));
					  mediump vec3 tmpvar_11;
					  tmpvar_11.xy = (normal_10.xy * vec2(_V_CW_NormalMapStrength));
					  tmpvar_11.z = normal_10.z;
					  mediump vec3 tmpvar_12;
					  tmpvar_12 = normalize(tmpvar_11);
					  tmpvar_5 = tmpvar_12;
					  tmpvar_6 = (texture2D (_EmissionMap, xlv_TEXCOORD0).xyz * _EmissionColor.xyz);
					  highp float tmpvar_13;
					  tmpvar_13 = dot (xlv_TEXCOORD1.xyz, tmpvar_5);
					  worldN_2.x = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = dot (xlv_TEXCOORD2.xyz, tmpvar_5);
					  worldN_2.y = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = dot (xlv_TEXCOORD3.xyz, tmpvar_5);
					  worldN_2.z = tmpvar_15;
					  mediump vec3 normalWorld_16;
					  normalWorld_16 = worldN_2;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_16;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  mediump vec4 outDiffuseOcclusion_19;
					  mediump vec4 outNormal_20;
					  mediump vec4 emission_21;
					  lowp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = tmpvar_4;
					  outDiffuseOcclusion_19 = tmpvar_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23.xyz = _SpecColor.xyz;
					  tmpvar_23.w = _Shininess;
					  lowp vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = ((worldN_2 * 0.5) + 0.5);
					  outNormal_20 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = tmpvar_6;
					  emission_21 = tmpvar_25;
					  emission_21.xyz = (emission_21.xyz + (tmpvar_4 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD5 + x_18)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_19.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_23;
					  gl_FragData[2] = outNormal_20;
					  gl_FragData[3] = emission_21;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 tmpvar_46;
					  highp vec3 I_47;
					  I_47 = (tmpvar_41 - _WorldSpaceCameraPos);
					  tmpvar_46 = (I_47 - (2.0 * (
					    dot (worldNormal_1, I_47)
					   * worldNormal_1)));
					  tmpvar_2 = tmpvar_46;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = (_WorldSpaceCameraPos - tmpvar_41);
					  tmpvar_4 = tmpvar_48;
					  tmpvar_5.zw = vec2(0.0, 0.0);
					  tmpvar_5.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_49;
					  normal_49 = worldNormal_1;
					  mediump vec3 x1_50;
					  mediump vec4 tmpvar_51;
					  tmpvar_51 = (normal_49.xyzz * normal_49.yzzx);
					  x1_50.x = dot (unity_SHBr, tmpvar_51);
					  x1_50.y = dot (unity_SHBg, tmpvar_51);
					  x1_50.z = dot (unity_SHBb, tmpvar_51);
					  gl_Position = (glstate_matrix_mvp * vertex_24);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = tmpvar_3;
					  xlv_TEXCOORD3 = tmpvar_41;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = tmpvar_5;
					  xlv_TEXCOORD6 = (x1_50 + (unity_SHC.xyz * (
					    (normal_49.x * normal_49.x)
					   - 
					    (normal_49.y * normal_49.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  mediump vec4 outEmission_2;
					  lowp vec3 tmpvar_3;
					  lowp vec3 viewDir_4;
					  highp vec3 tmpvar_5;
					  highp vec3 tmpvar_6;
					  mediump vec3 tmpvar_7;
					  tmpvar_7 = normalize(xlv_TEXCOORD4);
					  viewDir_4 = tmpvar_7;
					  tmpvar_6 = xlv_TEXCOORD1;
					  tmpvar_5 = viewDir_4;
					  tmpvar_3 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_8;
					  lowp vec3 tmpvar_9;
					  lowp vec4 tmpvar_10;
					  highp vec2 P_11;
					  P_11 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_10 = texture2D (_MainTex, P_11);
					  tmpvar_8 = (tmpvar_10.xyz * _Color.xyz);
					  mediump vec3 inVec_12;
					  inVec_12 = tmpvar_5;
					  tmpvar_9 = ((textureCube (_V_CW_Cube, tmpvar_6).xyz * _V_CW_ReflectColor.xyz) * clamp ((
					    (tmpvar_10.w * _Color.w)
					   + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_13;
					  tmpvar_13 = pow ((1.0 - max (0.0, 
					    dot ((inVec_12 * inversesqrt(max (0.001, 
					      dot (inVec_12, inVec_12)
					    ))), tmpvar_3)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_14;
					  tmpvar_14 = mix (tmpvar_9, _V_CW_Rim_Color.xyz, vec3(tmpvar_13));
					  tmpvar_9 = tmpvar_14;
					  mediump vec3 tmpvar_15;
					  tmpvar_15 = mix (tmpvar_8, _V_CW_Rim_Color.xyz, vec3(tmpvar_13));
					  tmpvar_8 = tmpvar_15;
					  mediump vec3 normalWorld_16;
					  normalWorld_16 = tmpvar_3;
					  mediump vec4 tmpvar_17;
					  tmpvar_17.w = 1.0;
					  tmpvar_17.xyz = normalWorld_16;
					  mediump vec3 x_18;
					  x_18.x = dot (unity_SHAr, tmpvar_17);
					  x_18.y = dot (unity_SHAg, tmpvar_17);
					  x_18.z = dot (unity_SHAb, tmpvar_17);
					  mediump vec4 outDiffuseOcclusion_19;
					  mediump vec4 outNormal_20;
					  mediump vec4 emission_21;
					  lowp vec4 tmpvar_22;
					  tmpvar_22.w = 1.0;
					  tmpvar_22.xyz = tmpvar_8;
					  outDiffuseOcclusion_19 = tmpvar_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23.xyz = _SpecColor.xyz;
					  tmpvar_23.w = 0.0;
					  lowp vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = ((tmpvar_3 * 0.5) + 0.5);
					  outNormal_20 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25.w = 1.0;
					  tmpvar_25.xyz = tmpvar_9;
					  emission_21 = tmpvar_25;
					  emission_21.xyz = (emission_21.xyz + (tmpvar_8 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD6 + x_18)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_19.xyz;
					  outEmission_2.w = emission_21.w;
					  outEmission_2.xyz = exp2(-(emission_21.xyz));
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_23;
					  gl_FragData[2] = outNormal_20;
					  gl_FragData[3] = outEmission_2;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					uniform highp vec4 _MainTex_ST;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD3;
					varying mediump vec3 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec3 worldNormal_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  mediump vec3 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 v_6;
					  highp float tmpvar_7;
					  tmpvar_7 = _World2Object[0].x;
					  v_6.x = tmpvar_7;
					  highp float tmpvar_8;
					  tmpvar_8 = _World2Object[1].x;
					  v_6.y = tmpvar_8;
					  highp float tmpvar_9;
					  tmpvar_9 = _World2Object[2].x;
					  v_6.z = tmpvar_9;
					  highp float tmpvar_10;
					  tmpvar_10 = _World2Object[3].x;
					  v_6.w = tmpvar_10;
					  highp vec4 v_11;
					  highp float tmpvar_12;
					  tmpvar_12 = _World2Object[0].y;
					  v_11.x = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = _World2Object[1].y;
					  v_11.y = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = _World2Object[2].y;
					  v_11.z = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = _World2Object[3].y;
					  v_11.w = tmpvar_15;
					  highp vec4 v_16;
					  highp float tmpvar_17;
					  tmpvar_17 = _World2Object[0].z;
					  v_16.x = tmpvar_17;
					  highp float tmpvar_18;
					  tmpvar_18 = _World2Object[1].z;
					  v_16.y = tmpvar_18;
					  highp float tmpvar_19;
					  tmpvar_19 = _World2Object[2].z;
					  v_16.z = tmpvar_19;
					  highp float tmpvar_20;
					  tmpvar_20 = _World2Object[3].z;
					  v_16.w = tmpvar_20;
					  highp vec3 tmpvar_21;
					  tmpvar_21 = normalize(((
					    (v_6.xyz * _glesNormal.x)
					   + 
					    (v_11.xyz * _glesNormal.y)
					  ) + (v_16.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_22;
					  tmpvar_22[0] = _Object2World[0].xyz;
					  tmpvar_22[1] = _Object2World[1].xyz;
					  tmpvar_22[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_22 * _glesTANGENT.xyz));
					  highp vec4 vertex_24;
					  vertex_24.w = _glesVertex.w;
					  highp vec2 xzOff_25;
					  highp vec3 v2_26;
					  highp vec3 v1_27;
					  highp vec3 v0_28;
					  highp vec3 tmpvar_29;
					  tmpvar_29 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_30;
					  tmpvar_30 = (tmpvar_29 + tmpvar_23);
					  v1_27.xz = tmpvar_30.xz;
					  highp vec3 tmpvar_31;
					  tmpvar_31 = (tmpvar_29 - ((tmpvar_21.yzx * tmpvar_23.zxy) - (tmpvar_21.zxy * tmpvar_23.yzx)));
					  v2_26.xz = tmpvar_31.xz;
					  highp vec2 tmpvar_32;
					  tmpvar_32.x = float((tmpvar_29.z >= 0.0));
					  tmpvar_32.y = float((tmpvar_29.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_29.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_32 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  highp vec3 tmpvar_33;
					  tmpvar_33.xz = vec2(0.0, 0.0);
					  tmpvar_33.y = (((_V_CW_Bend.x * xzOff_25.x) + (_V_CW_Bend.z * xzOff_25.y)) * 0.001);
					  v0_28 = (tmpvar_29 + tmpvar_33);
					  highp vec2 tmpvar_34;
					  tmpvar_34.x = float((tmpvar_30.z >= 0.0));
					  tmpvar_34.y = float((tmpvar_30.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_30.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_34 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v1_27.y = (tmpvar_30.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp vec2 tmpvar_35;
					  tmpvar_35.x = float((tmpvar_31.z >= 0.0));
					  tmpvar_35.y = float((tmpvar_31.x >= 0.0));
					  xzOff_25 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_31.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_35 * 2.0) - 1.0));
					  xzOff_25 = (xzOff_25 * xzOff_25);
					  v2_26.y = (tmpvar_31.y + ((
					    (_V_CW_Bend.x * xzOff_25.x)
					   + 
					    (_V_CW_Bend.z * xzOff_25.y)
					  ) * 0.001));
					  highp mat3 tmpvar_36;
					  tmpvar_36[0] = _World2Object[0].xyz;
					  tmpvar_36[1] = _World2Object[1].xyz;
					  tmpvar_36[2] = _World2Object[2].xyz;
					  vertex_24.xyz = (_glesVertex.xyz + (tmpvar_36 * tmpvar_33));
					  highp mat3 tmpvar_37;
					  tmpvar_37[0] = _World2Object[0].xyz;
					  tmpvar_37[1] = _World2Object[1].xyz;
					  tmpvar_37[2] = _World2Object[2].xyz;
					  highp vec3 a_38;
					  a_38 = (v2_26 - v0_28);
					  highp vec3 b_39;
					  b_39 = (v1_27 - v0_28);
					  highp vec3 tmpvar_40;
					  tmpvar_40 = normalize((tmpvar_37 * normalize(
					    ((a_38.yzx * b_39.zxy) - (a_38.zxy * b_39.yzx))
					  )));
					  highp vec3 tmpvar_41;
					  tmpvar_41 = (_Object2World * vertex_24).xyz;
					  highp vec4 v_42;
					  v_42.x = tmpvar_7;
					  v_42.y = tmpvar_8;
					  v_42.z = tmpvar_9;
					  v_42.w = tmpvar_10;
					  highp vec4 v_43;
					  v_43.x = tmpvar_12;
					  v_43.y = tmpvar_13;
					  v_43.z = tmpvar_14;
					  v_43.w = tmpvar_15;
					  highp vec4 v_44;
					  v_44.x = tmpvar_17;
					  v_44.y = tmpvar_18;
					  v_44.z = tmpvar_19;
					  v_44.w = tmpvar_20;
					  highp vec3 tmpvar_45;
					  tmpvar_45 = normalize(((
					    (v_42.xyz * tmpvar_40.x)
					   + 
					    (v_43.xyz * tmpvar_40.y)
					  ) + (v_44.xyz * tmpvar_40.z)));
					  worldNormal_1 = tmpvar_45;
					  tmpvar_3 = worldNormal_1;
					  highp vec3 tmpvar_46;
					  highp vec3 I_47;
					  I_47 = (tmpvar_41 - _WorldSpaceCameraPos);
					  tmpvar_46 = (I_47 - (2.0 * (
					    dot (worldNormal_1, I_47)
					   * worldNormal_1)));
					  tmpvar_2 = tmpvar_46;
					  highp vec3 tmpvar_48;
					  tmpvar_48 = (_WorldSpaceCameraPos - tmpvar_41);
					  tmpvar_4 = tmpvar_48;
					  tmpvar_5.zw = vec2(0.0, 0.0);
					  tmpvar_5.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_49;
					  normal_49 = worldNormal_1;
					  mediump vec3 x1_50;
					  mediump vec4 tmpvar_51;
					  tmpvar_51 = (normal_49.xyzz * normal_49.yzzx);
					  x1_50.x = dot (unity_SHBr, tmpvar_51);
					  x1_50.y = dot (unity_SHBg, tmpvar_51);
					  x1_50.z = dot (unity_SHBb, tmpvar_51);
					  gl_Position = (glstate_matrix_mvp * vertex_24);
					  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  xlv_TEXCOORD1 = tmpvar_2;
					  xlv_TEXCOORD2 = tmpvar_3;
					  xlv_TEXCOORD3 = tmpvar_41;
					  xlv_TEXCOORD4 = tmpvar_4;
					  xlv_TEXCOORD5 = tmpvar_5;
					  xlv_TEXCOORD6 = (x1_50 + (unity_SHC.xyz * (
					    (normal_49.x * normal_49.x)
					   - 
					    (normal_49.y * normal_49.y)
					  )));
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform highp vec4 _Time;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform lowp vec4 _SpecColor;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec2 xlv_TEXCOORD0;
					varying mediump vec3 xlv_TEXCOORD1;
					varying mediump vec3 xlv_TEXCOORD2;
					varying mediump vec3 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec4 outDiffuse_1;
					  lowp vec3 tmpvar_2;
					  lowp vec3 viewDir_3;
					  highp vec3 tmpvar_4;
					  highp vec3 tmpvar_5;
					  mediump vec3 tmpvar_6;
					  tmpvar_6 = normalize(xlv_TEXCOORD4);
					  viewDir_3 = tmpvar_6;
					  tmpvar_5 = xlv_TEXCOORD1;
					  tmpvar_4 = viewDir_3;
					  tmpvar_2 = xlv_TEXCOORD2;
					  lowp vec3 tmpvar_7;
					  lowp vec3 tmpvar_8;
					  lowp vec4 tmpvar_9;
					  highp vec2 P_10;
					  P_10 = (xlv_TEXCOORD0 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_9 = texture2D (_MainTex, P_10);
					  tmpvar_7 = (tmpvar_9.xyz * _Color.xyz);
					  mediump vec3 inVec_11;
					  inVec_11 = tmpvar_4;
					  tmpvar_8 = ((textureCube (_V_CW_Cube, tmpvar_5).xyz * _V_CW_ReflectColor.xyz) * clamp ((
					    (tmpvar_9.w * _Color.w)
					   + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_12;
					  tmpvar_12 = pow ((1.0 - max (0.0, 
					    dot ((inVec_11 * inversesqrt(max (0.001, 
					      dot (inVec_11, inVec_11)
					    ))), tmpvar_2)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_13;
					  tmpvar_13 = mix (tmpvar_8, _V_CW_Rim_Color.xyz, vec3(tmpvar_12));
					  tmpvar_8 = tmpvar_13;
					  mediump vec3 tmpvar_14;
					  tmpvar_14 = mix (tmpvar_7, _V_CW_Rim_Color.xyz, vec3(tmpvar_12));
					  tmpvar_7 = tmpvar_14;
					  mediump vec3 normalWorld_15;
					  normalWorld_15 = tmpvar_2;
					  mediump vec4 tmpvar_16;
					  tmpvar_16.w = 1.0;
					  tmpvar_16.xyz = normalWorld_15;
					  mediump vec3 x_17;
					  x_17.x = dot (unity_SHAr, tmpvar_16);
					  x_17.y = dot (unity_SHAg, tmpvar_16);
					  x_17.z = dot (unity_SHAb, tmpvar_16);
					  mediump vec4 outDiffuseOcclusion_18;
					  mediump vec4 outNormal_19;
					  mediump vec4 emission_20;
					  lowp vec4 tmpvar_21;
					  tmpvar_21.w = 1.0;
					  tmpvar_21.xyz = tmpvar_7;
					  outDiffuseOcclusion_18 = tmpvar_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22.xyz = _SpecColor.xyz;
					  tmpvar_22.w = 0.0;
					  lowp vec4 tmpvar_23;
					  tmpvar_23.w = 1.0;
					  tmpvar_23.xyz = ((tmpvar_2 * 0.5) + 0.5);
					  outNormal_19 = tmpvar_23;
					  lowp vec4 tmpvar_24;
					  tmpvar_24.w = 1.0;
					  tmpvar_24.xyz = tmpvar_8;
					  emission_20 = tmpvar_24;
					  emission_20.xyz = (emission_20.xyz + (tmpvar_7 * max (
					    ((1.055 * pow (max (vec3(0.0, 0.0, 0.0), 
					      (xlv_TEXCOORD6 + x_17)
					    ), vec3(0.4166667, 0.4166667, 0.4166667))) - 0.055)
					  , vec3(0.0, 0.0, 0.0))));
					  outDiffuse_1.xyz = outDiffuseOcclusion_18.xyz;
					  outDiffuse_1.w = 1.0;
					  gl_FragData[0] = outDiffuse_1;
					  gl_FragData[1] = tmpvar_22;
					  gl_FragData[2] = outNormal_19;
					  gl_FragData[3] = emission_20;
					}
					
					
					#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "HDR_LIGHT_PREPASS_OFF" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
}
 }
 Pass {
  Name "SHADOWCASTER"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="CurvedWorld_Opaque" "CurvedWorldTag"="Legacy Shader/Opaque/Diffuse" "CurvedWorldNoneRemoveableKeywords"="" "CurvedWorldAvailableOptions"="V_CW_REFLECTIVE;V_CW_VERTEX_COLOR;_EMISSION;V_CW_RIM;_NORMALMAP;V_CW_SPECULAR_HD;" }
  GpuProgramID 357343
Program "vp" {
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform highp vec4 unity_LightShadowBias;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 v2_9;
					  highp vec3 v1_10;
					  highp vec3 v0_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_12 + tmpvar_6);
					  v1_10.xz = tmpvar_13.xz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_12 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  v2_9.xz = tmpvar_14.xz;
					  highp vec2 tmpvar_15;
					  tmpvar_15.x = float((tmpvar_12.z >= 0.0));
					  tmpvar_15.y = float((tmpvar_12.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_12.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_15 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_16;
					  tmpvar_16.xz = vec2(0.0, 0.0);
					  tmpvar_16.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  v0_11 = (tmpvar_12 + tmpvar_16);
					  highp vec2 tmpvar_17;
					  tmpvar_17.x = float((tmpvar_13.z >= 0.0));
					  tmpvar_17.y = float((tmpvar_13.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_13.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_17 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v1_10.y = (tmpvar_13.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp vec2 tmpvar_18;
					  tmpvar_18.x = float((tmpvar_14.z >= 0.0));
					  tmpvar_18.y = float((tmpvar_14.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_14.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_18 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v2_9.y = (tmpvar_14.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _World2Object[0].xyz;
					  tmpvar_19[1] = _World2Object[1].xyz;
					  tmpvar_19[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_19 * tmpvar_16));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _World2Object[0].xyz;
					  tmpvar_20[1] = _World2Object[1].xyz;
					  tmpvar_20[2] = _World2Object[2].xyz;
					  highp vec3 a_21;
					  a_21 = (v2_9 - v0_11);
					  highp vec3 b_22;
					  b_22 = (v1_10 - v0_11);
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_20 * normalize(
					    ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx))
					  )));
					  highp vec3 tmpvar_24;
					  tmpvar_24 = (_Object2World * vertex_7).xyz;
					  highp vec3 vertex_25;
					  vertex_25 = vertex_7.xyz;
					  highp vec4 clipPos_26;
					  if ((unity_LightShadowBias.z != 0.0)) {
					    highp vec4 tmpvar_27;
					    tmpvar_27.w = 1.0;
					    tmpvar_27.xyz = vertex_25;
					    highp vec3 tmpvar_28;
					    tmpvar_28 = (_Object2World * tmpvar_27).xyz;
					    highp vec4 v_29;
					    v_29.x = _World2Object[0].x;
					    v_29.y = _World2Object[1].x;
					    v_29.z = _World2Object[2].x;
					    v_29.w = _World2Object[3].x;
					    highp vec4 v_30;
					    v_30.x = _World2Object[0].y;
					    v_30.y = _World2Object[1].y;
					    v_30.z = _World2Object[2].y;
					    v_30.w = _World2Object[3].y;
					    highp vec4 v_31;
					    v_31.x = _World2Object[0].z;
					    v_31.y = _World2Object[1].z;
					    v_31.z = _World2Object[2].z;
					    v_31.w = _World2Object[3].z;
					    highp vec3 tmpvar_32;
					    tmpvar_32 = normalize(((
					      (v_29.xyz * tmpvar_23.x)
					     + 
					      (v_30.xyz * tmpvar_23.y)
					    ) + (v_31.xyz * tmpvar_23.z)));
					    highp float tmpvar_33;
					    tmpvar_33 = dot (tmpvar_32, normalize((_WorldSpaceLightPos0.xyz - 
					      (tmpvar_28 * _WorldSpaceLightPos0.w)
					    )));
					    highp vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = (tmpvar_28 - (tmpvar_32 * (unity_LightShadowBias.z * 
					      sqrt((1.0 - (tmpvar_33 * tmpvar_33)))
					    )));
					    clipPos_26 = (unity_MatrixVP * tmpvar_34);
					  } else {
					    highp vec4 tmpvar_35;
					    tmpvar_35.w = 1.0;
					    tmpvar_35.xyz = vertex_25;
					    clipPos_26 = (glstate_matrix_mvp * tmpvar_35);
					  };
					  highp vec4 clipPos_36;
					  clipPos_36.xyw = clipPos_26.xyw;
					  clipPos_36.z = (clipPos_26.z + clamp ((unity_LightShadowBias.x / clipPos_26.w), 0.0, 1.0));
					  clipPos_36.z = mix (clipPos_36.z, max (clipPos_36.z, -(clipPos_26.w)), unity_LightShadowBias.y);
					  gl_Position = clipPos_36;
					  xlv_TEXCOORD1 = tmpvar_24;
					}
					
					
					#endif
					#ifdef FRAGMENT
					void main ()
					{
					  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _LightPositionRange;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (tmpvar_9 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  highp vec2 tmpvar_11;
					  tmpvar_11.x = float((tmpvar_9.z >= 0.0));
					  tmpvar_11.y = float((tmpvar_9.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_9.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_11 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_12;
					  tmpvar_12.xz = vec2(0.0, 0.0);
					  tmpvar_12.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  highp vec2 tmpvar_13;
					  tmpvar_13.x = float((tmpvar_10.z >= 0.0));
					  tmpvar_13.y = float((tmpvar_10.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_10.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_13 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = _World2Object[0].xyz;
					  tmpvar_14[1] = _World2Object[1].xyz;
					  tmpvar_14[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_14 * tmpvar_12));
					  xlv_TEXCOORD0 = ((_Object2World * vertex_7).xyz - _LightPositionRange.xyz);
					  gl_Position = (glstate_matrix_mvp * vertex_7);
					  xlv_TEXCOORD1 = (_Object2World * vertex_7).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _LightPositionRange;
					uniform highp vec4 unity_LightShadowBias;
					varying highp vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  highp vec4 enc_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
					    ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) + unity_LightShadowBias.x) * _LightPositionRange.w)
					  , 0.999)));
					  enc_2 = (tmpvar_3 - (tmpvar_3.yzww * 0.003921569));
					  tmpvar_1 = enc_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform highp vec4 unity_LightShadowBias;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 v2_9;
					  highp vec3 v1_10;
					  highp vec3 v0_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_12 + tmpvar_6);
					  v1_10.xz = tmpvar_13.xz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_12 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  v2_9.xz = tmpvar_14.xz;
					  highp vec2 tmpvar_15;
					  tmpvar_15.x = float((tmpvar_12.z >= 0.0));
					  tmpvar_15.y = float((tmpvar_12.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_12.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_15 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_16;
					  tmpvar_16.xz = vec2(0.0, 0.0);
					  tmpvar_16.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  v0_11 = (tmpvar_12 + tmpvar_16);
					  highp vec2 tmpvar_17;
					  tmpvar_17.x = float((tmpvar_13.z >= 0.0));
					  tmpvar_17.y = float((tmpvar_13.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_13.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_17 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v1_10.y = (tmpvar_13.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp vec2 tmpvar_18;
					  tmpvar_18.x = float((tmpvar_14.z >= 0.0));
					  tmpvar_18.y = float((tmpvar_14.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_14.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_18 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v2_9.y = (tmpvar_14.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _World2Object[0].xyz;
					  tmpvar_19[1] = _World2Object[1].xyz;
					  tmpvar_19[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_19 * tmpvar_16));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _World2Object[0].xyz;
					  tmpvar_20[1] = _World2Object[1].xyz;
					  tmpvar_20[2] = _World2Object[2].xyz;
					  highp vec3 a_21;
					  a_21 = (v2_9 - v0_11);
					  highp vec3 b_22;
					  b_22 = (v1_10 - v0_11);
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_20 * normalize(
					    ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx))
					  )));
					  highp vec3 tmpvar_24;
					  tmpvar_24 = (_Object2World * vertex_7).xyz;
					  highp vec3 vertex_25;
					  vertex_25 = vertex_7.xyz;
					  highp vec4 clipPos_26;
					  if ((unity_LightShadowBias.z != 0.0)) {
					    highp vec4 tmpvar_27;
					    tmpvar_27.w = 1.0;
					    tmpvar_27.xyz = vertex_25;
					    highp vec3 tmpvar_28;
					    tmpvar_28 = (_Object2World * tmpvar_27).xyz;
					    highp vec4 v_29;
					    v_29.x = _World2Object[0].x;
					    v_29.y = _World2Object[1].x;
					    v_29.z = _World2Object[2].x;
					    v_29.w = _World2Object[3].x;
					    highp vec4 v_30;
					    v_30.x = _World2Object[0].y;
					    v_30.y = _World2Object[1].y;
					    v_30.z = _World2Object[2].y;
					    v_30.w = _World2Object[3].y;
					    highp vec4 v_31;
					    v_31.x = _World2Object[0].z;
					    v_31.y = _World2Object[1].z;
					    v_31.z = _World2Object[2].z;
					    v_31.w = _World2Object[3].z;
					    highp vec3 tmpvar_32;
					    tmpvar_32 = normalize(((
					      (v_29.xyz * tmpvar_23.x)
					     + 
					      (v_30.xyz * tmpvar_23.y)
					    ) + (v_31.xyz * tmpvar_23.z)));
					    highp float tmpvar_33;
					    tmpvar_33 = dot (tmpvar_32, normalize((_WorldSpaceLightPos0.xyz - 
					      (tmpvar_28 * _WorldSpaceLightPos0.w)
					    )));
					    highp vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = (tmpvar_28 - (tmpvar_32 * (unity_LightShadowBias.z * 
					      sqrt((1.0 - (tmpvar_33 * tmpvar_33)))
					    )));
					    clipPos_26 = (unity_MatrixVP * tmpvar_34);
					  } else {
					    highp vec4 tmpvar_35;
					    tmpvar_35.w = 1.0;
					    tmpvar_35.xyz = vertex_25;
					    clipPos_26 = (glstate_matrix_mvp * tmpvar_35);
					  };
					  highp vec4 clipPos_36;
					  clipPos_36.xyw = clipPos_26.xyw;
					  clipPos_36.z = (clipPos_26.z + clamp ((unity_LightShadowBias.x / clipPos_26.w), 0.0, 1.0));
					  clipPos_36.z = mix (clipPos_36.z, max (clipPos_36.z, -(clipPos_26.w)), unity_LightShadowBias.y);
					  gl_Position = clipPos_36;
					  xlv_TEXCOORD1 = tmpvar_24;
					}
					
					
					#endif
					#ifdef FRAGMENT
					void main ()
					{
					  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _LightPositionRange;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (tmpvar_9 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  highp vec2 tmpvar_11;
					  tmpvar_11.x = float((tmpvar_9.z >= 0.0));
					  tmpvar_11.y = float((tmpvar_9.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_9.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_11 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_12;
					  tmpvar_12.xz = vec2(0.0, 0.0);
					  tmpvar_12.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  highp vec2 tmpvar_13;
					  tmpvar_13.x = float((tmpvar_10.z >= 0.0));
					  tmpvar_13.y = float((tmpvar_10.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_10.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_13 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = _World2Object[0].xyz;
					  tmpvar_14[1] = _World2Object[1].xyz;
					  tmpvar_14[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_14 * tmpvar_12));
					  xlv_TEXCOORD0 = ((_Object2World * vertex_7).xyz - _LightPositionRange.xyz);
					  gl_Position = (glstate_matrix_mvp * vertex_7);
					  xlv_TEXCOORD1 = (_Object2World * vertex_7).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _LightPositionRange;
					uniform highp vec4 unity_LightShadowBias;
					varying highp vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  highp vec4 enc_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
					    ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) + unity_LightShadowBias.x) * _LightPositionRange.w)
					  , 0.999)));
					  enc_2 = (tmpvar_3 - (tmpvar_3.yzww * 0.003921569));
					  tmpvar_1 = enc_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform highp vec4 unity_LightShadowBias;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 v2_9;
					  highp vec3 v1_10;
					  highp vec3 v0_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_12 + tmpvar_6);
					  v1_10.xz = tmpvar_13.xz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_12 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  v2_9.xz = tmpvar_14.xz;
					  highp vec2 tmpvar_15;
					  tmpvar_15.x = float((tmpvar_12.z >= 0.0));
					  tmpvar_15.y = float((tmpvar_12.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_12.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_15 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_16;
					  tmpvar_16.xz = vec2(0.0, 0.0);
					  tmpvar_16.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  v0_11 = (tmpvar_12 + tmpvar_16);
					  highp vec2 tmpvar_17;
					  tmpvar_17.x = float((tmpvar_13.z >= 0.0));
					  tmpvar_17.y = float((tmpvar_13.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_13.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_17 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v1_10.y = (tmpvar_13.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp vec2 tmpvar_18;
					  tmpvar_18.x = float((tmpvar_14.z >= 0.0));
					  tmpvar_18.y = float((tmpvar_14.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_14.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_18 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v2_9.y = (tmpvar_14.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _World2Object[0].xyz;
					  tmpvar_19[1] = _World2Object[1].xyz;
					  tmpvar_19[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_19 * tmpvar_16));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _World2Object[0].xyz;
					  tmpvar_20[1] = _World2Object[1].xyz;
					  tmpvar_20[2] = _World2Object[2].xyz;
					  highp vec3 a_21;
					  a_21 = (v2_9 - v0_11);
					  highp vec3 b_22;
					  b_22 = (v1_10 - v0_11);
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_20 * normalize(
					    ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx))
					  )));
					  highp vec3 tmpvar_24;
					  tmpvar_24 = (_Object2World * vertex_7).xyz;
					  highp vec3 vertex_25;
					  vertex_25 = vertex_7.xyz;
					  highp vec4 clipPos_26;
					  if ((unity_LightShadowBias.z != 0.0)) {
					    highp vec4 tmpvar_27;
					    tmpvar_27.w = 1.0;
					    tmpvar_27.xyz = vertex_25;
					    highp vec3 tmpvar_28;
					    tmpvar_28 = (_Object2World * tmpvar_27).xyz;
					    highp vec4 v_29;
					    v_29.x = _World2Object[0].x;
					    v_29.y = _World2Object[1].x;
					    v_29.z = _World2Object[2].x;
					    v_29.w = _World2Object[3].x;
					    highp vec4 v_30;
					    v_30.x = _World2Object[0].y;
					    v_30.y = _World2Object[1].y;
					    v_30.z = _World2Object[2].y;
					    v_30.w = _World2Object[3].y;
					    highp vec4 v_31;
					    v_31.x = _World2Object[0].z;
					    v_31.y = _World2Object[1].z;
					    v_31.z = _World2Object[2].z;
					    v_31.w = _World2Object[3].z;
					    highp vec3 tmpvar_32;
					    tmpvar_32 = normalize(((
					      (v_29.xyz * tmpvar_23.x)
					     + 
					      (v_30.xyz * tmpvar_23.y)
					    ) + (v_31.xyz * tmpvar_23.z)));
					    highp float tmpvar_33;
					    tmpvar_33 = dot (tmpvar_32, normalize((_WorldSpaceLightPos0.xyz - 
					      (tmpvar_28 * _WorldSpaceLightPos0.w)
					    )));
					    highp vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = (tmpvar_28 - (tmpvar_32 * (unity_LightShadowBias.z * 
					      sqrt((1.0 - (tmpvar_33 * tmpvar_33)))
					    )));
					    clipPos_26 = (unity_MatrixVP * tmpvar_34);
					  } else {
					    highp vec4 tmpvar_35;
					    tmpvar_35.w = 1.0;
					    tmpvar_35.xyz = vertex_25;
					    clipPos_26 = (glstate_matrix_mvp * tmpvar_35);
					  };
					  highp vec4 clipPos_36;
					  clipPos_36.xyw = clipPos_26.xyw;
					  clipPos_36.z = (clipPos_26.z + clamp ((unity_LightShadowBias.x / clipPos_26.w), 0.0, 1.0));
					  clipPos_36.z = mix (clipPos_36.z, max (clipPos_36.z, -(clipPos_26.w)), unity_LightShadowBias.y);
					  gl_Position = clipPos_36;
					  xlv_TEXCOORD1 = tmpvar_24;
					}
					
					
					#endif
					#ifdef FRAGMENT
					void main ()
					{
					  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _LightPositionRange;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (tmpvar_9 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  highp vec2 tmpvar_11;
					  tmpvar_11.x = float((tmpvar_9.z >= 0.0));
					  tmpvar_11.y = float((tmpvar_9.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_9.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_11 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_12;
					  tmpvar_12.xz = vec2(0.0, 0.0);
					  tmpvar_12.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  highp vec2 tmpvar_13;
					  tmpvar_13.x = float((tmpvar_10.z >= 0.0));
					  tmpvar_13.y = float((tmpvar_10.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_10.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_13 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = _World2Object[0].xyz;
					  tmpvar_14[1] = _World2Object[1].xyz;
					  tmpvar_14[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_14 * tmpvar_12));
					  xlv_TEXCOORD0 = ((_Object2World * vertex_7).xyz - _LightPositionRange.xyz);
					  gl_Position = (glstate_matrix_mvp * vertex_7);
					  xlv_TEXCOORD1 = (_Object2World * vertex_7).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _LightPositionRange;
					uniform highp vec4 unity_LightShadowBias;
					varying highp vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  highp vec4 enc_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
					    ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) + unity_LightShadowBias.x) * _LightPositionRange.w)
					  , 0.999)));
					  enc_2 = (tmpvar_3 - (tmpvar_3.yzww * 0.003921569));
					  tmpvar_1 = enc_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform highp vec4 unity_LightShadowBias;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 v2_9;
					  highp vec3 v1_10;
					  highp vec3 v0_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_12 + tmpvar_6);
					  v1_10.xz = tmpvar_13.xz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_12 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  v2_9.xz = tmpvar_14.xz;
					  highp vec2 tmpvar_15;
					  tmpvar_15.x = float((tmpvar_12.z >= 0.0));
					  tmpvar_15.y = float((tmpvar_12.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_12.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_15 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_16;
					  tmpvar_16.xz = vec2(0.0, 0.0);
					  tmpvar_16.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  v0_11 = (tmpvar_12 + tmpvar_16);
					  highp vec2 tmpvar_17;
					  tmpvar_17.x = float((tmpvar_13.z >= 0.0));
					  tmpvar_17.y = float((tmpvar_13.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_13.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_17 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v1_10.y = (tmpvar_13.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp vec2 tmpvar_18;
					  tmpvar_18.x = float((tmpvar_14.z >= 0.0));
					  tmpvar_18.y = float((tmpvar_14.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_14.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_18 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v2_9.y = (tmpvar_14.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _World2Object[0].xyz;
					  tmpvar_19[1] = _World2Object[1].xyz;
					  tmpvar_19[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_19 * tmpvar_16));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _World2Object[0].xyz;
					  tmpvar_20[1] = _World2Object[1].xyz;
					  tmpvar_20[2] = _World2Object[2].xyz;
					  highp vec3 a_21;
					  a_21 = (v2_9 - v0_11);
					  highp vec3 b_22;
					  b_22 = (v1_10 - v0_11);
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_20 * normalize(
					    ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx))
					  )));
					  highp vec3 tmpvar_24;
					  tmpvar_24 = (_Object2World * vertex_7).xyz;
					  highp vec3 vertex_25;
					  vertex_25 = vertex_7.xyz;
					  highp vec4 clipPos_26;
					  if ((unity_LightShadowBias.z != 0.0)) {
					    highp vec4 tmpvar_27;
					    tmpvar_27.w = 1.0;
					    tmpvar_27.xyz = vertex_25;
					    highp vec3 tmpvar_28;
					    tmpvar_28 = (_Object2World * tmpvar_27).xyz;
					    highp vec4 v_29;
					    v_29.x = _World2Object[0].x;
					    v_29.y = _World2Object[1].x;
					    v_29.z = _World2Object[2].x;
					    v_29.w = _World2Object[3].x;
					    highp vec4 v_30;
					    v_30.x = _World2Object[0].y;
					    v_30.y = _World2Object[1].y;
					    v_30.z = _World2Object[2].y;
					    v_30.w = _World2Object[3].y;
					    highp vec4 v_31;
					    v_31.x = _World2Object[0].z;
					    v_31.y = _World2Object[1].z;
					    v_31.z = _World2Object[2].z;
					    v_31.w = _World2Object[3].z;
					    highp vec3 tmpvar_32;
					    tmpvar_32 = normalize(((
					      (v_29.xyz * tmpvar_23.x)
					     + 
					      (v_30.xyz * tmpvar_23.y)
					    ) + (v_31.xyz * tmpvar_23.z)));
					    highp float tmpvar_33;
					    tmpvar_33 = dot (tmpvar_32, normalize((_WorldSpaceLightPos0.xyz - 
					      (tmpvar_28 * _WorldSpaceLightPos0.w)
					    )));
					    highp vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = (tmpvar_28 - (tmpvar_32 * (unity_LightShadowBias.z * 
					      sqrt((1.0 - (tmpvar_33 * tmpvar_33)))
					    )));
					    clipPos_26 = (unity_MatrixVP * tmpvar_34);
					  } else {
					    highp vec4 tmpvar_35;
					    tmpvar_35.w = 1.0;
					    tmpvar_35.xyz = vertex_25;
					    clipPos_26 = (glstate_matrix_mvp * tmpvar_35);
					  };
					  highp vec4 clipPos_36;
					  clipPos_36.xyw = clipPos_26.xyw;
					  clipPos_36.z = (clipPos_26.z + clamp ((unity_LightShadowBias.x / clipPos_26.w), 0.0, 1.0));
					  clipPos_36.z = mix (clipPos_36.z, max (clipPos_36.z, -(clipPos_26.w)), unity_LightShadowBias.y);
					  gl_Position = clipPos_36;
					  xlv_TEXCOORD1 = tmpvar_24;
					}
					
					
					#endif
					#ifdef FRAGMENT
					void main ()
					{
					  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _LightPositionRange;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (tmpvar_9 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  highp vec2 tmpvar_11;
					  tmpvar_11.x = float((tmpvar_9.z >= 0.0));
					  tmpvar_11.y = float((tmpvar_9.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_9.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_11 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_12;
					  tmpvar_12.xz = vec2(0.0, 0.0);
					  tmpvar_12.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  highp vec2 tmpvar_13;
					  tmpvar_13.x = float((tmpvar_10.z >= 0.0));
					  tmpvar_13.y = float((tmpvar_10.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_10.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_13 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = _World2Object[0].xyz;
					  tmpvar_14[1] = _World2Object[1].xyz;
					  tmpvar_14[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_14 * tmpvar_12));
					  xlv_TEXCOORD0 = ((_Object2World * vertex_7).xyz - _LightPositionRange.xyz);
					  gl_Position = (glstate_matrix_mvp * vertex_7);
					  xlv_TEXCOORD1 = (_Object2World * vertex_7).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _LightPositionRange;
					uniform highp vec4 unity_LightShadowBias;
					varying highp vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  highp vec4 enc_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
					    ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) + unity_LightShadowBias.x) * _LightPositionRange.w)
					  , 0.999)));
					  enc_2 = (tmpvar_3 - (tmpvar_3.yzww * 0.003921569));
					  tmpvar_1 = enc_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform highp vec4 unity_LightShadowBias;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 v2_9;
					  highp vec3 v1_10;
					  highp vec3 v0_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_12 + tmpvar_6);
					  v1_10.xz = tmpvar_13.xz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_12 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  v2_9.xz = tmpvar_14.xz;
					  highp vec2 tmpvar_15;
					  tmpvar_15.x = float((tmpvar_12.z >= 0.0));
					  tmpvar_15.y = float((tmpvar_12.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_12.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_15 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_16;
					  tmpvar_16.xz = vec2(0.0, 0.0);
					  tmpvar_16.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  v0_11 = (tmpvar_12 + tmpvar_16);
					  highp vec2 tmpvar_17;
					  tmpvar_17.x = float((tmpvar_13.z >= 0.0));
					  tmpvar_17.y = float((tmpvar_13.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_13.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_17 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v1_10.y = (tmpvar_13.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp vec2 tmpvar_18;
					  tmpvar_18.x = float((tmpvar_14.z >= 0.0));
					  tmpvar_18.y = float((tmpvar_14.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_14.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_18 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v2_9.y = (tmpvar_14.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _World2Object[0].xyz;
					  tmpvar_19[1] = _World2Object[1].xyz;
					  tmpvar_19[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_19 * tmpvar_16));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _World2Object[0].xyz;
					  tmpvar_20[1] = _World2Object[1].xyz;
					  tmpvar_20[2] = _World2Object[2].xyz;
					  highp vec3 a_21;
					  a_21 = (v2_9 - v0_11);
					  highp vec3 b_22;
					  b_22 = (v1_10 - v0_11);
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_20 * normalize(
					    ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx))
					  )));
					  highp vec3 tmpvar_24;
					  tmpvar_24 = (_Object2World * vertex_7).xyz;
					  highp vec3 vertex_25;
					  vertex_25 = vertex_7.xyz;
					  highp vec4 clipPos_26;
					  if ((unity_LightShadowBias.z != 0.0)) {
					    highp vec4 tmpvar_27;
					    tmpvar_27.w = 1.0;
					    tmpvar_27.xyz = vertex_25;
					    highp vec3 tmpvar_28;
					    tmpvar_28 = (_Object2World * tmpvar_27).xyz;
					    highp vec4 v_29;
					    v_29.x = _World2Object[0].x;
					    v_29.y = _World2Object[1].x;
					    v_29.z = _World2Object[2].x;
					    v_29.w = _World2Object[3].x;
					    highp vec4 v_30;
					    v_30.x = _World2Object[0].y;
					    v_30.y = _World2Object[1].y;
					    v_30.z = _World2Object[2].y;
					    v_30.w = _World2Object[3].y;
					    highp vec4 v_31;
					    v_31.x = _World2Object[0].z;
					    v_31.y = _World2Object[1].z;
					    v_31.z = _World2Object[2].z;
					    v_31.w = _World2Object[3].z;
					    highp vec3 tmpvar_32;
					    tmpvar_32 = normalize(((
					      (v_29.xyz * tmpvar_23.x)
					     + 
					      (v_30.xyz * tmpvar_23.y)
					    ) + (v_31.xyz * tmpvar_23.z)));
					    highp float tmpvar_33;
					    tmpvar_33 = dot (tmpvar_32, normalize((_WorldSpaceLightPos0.xyz - 
					      (tmpvar_28 * _WorldSpaceLightPos0.w)
					    )));
					    highp vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = (tmpvar_28 - (tmpvar_32 * (unity_LightShadowBias.z * 
					      sqrt((1.0 - (tmpvar_33 * tmpvar_33)))
					    )));
					    clipPos_26 = (unity_MatrixVP * tmpvar_34);
					  } else {
					    highp vec4 tmpvar_35;
					    tmpvar_35.w = 1.0;
					    tmpvar_35.xyz = vertex_25;
					    clipPos_26 = (glstate_matrix_mvp * tmpvar_35);
					  };
					  highp vec4 clipPos_36;
					  clipPos_36.xyw = clipPos_26.xyw;
					  clipPos_36.z = (clipPos_26.z + clamp ((unity_LightShadowBias.x / clipPos_26.w), 0.0, 1.0));
					  clipPos_36.z = mix (clipPos_36.z, max (clipPos_36.z, -(clipPos_26.w)), unity_LightShadowBias.y);
					  gl_Position = clipPos_36;
					  xlv_TEXCOORD1 = tmpvar_24;
					}
					
					
					#endif
					#ifdef FRAGMENT
					void main ()
					{
					  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _LightPositionRange;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (tmpvar_9 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  highp vec2 tmpvar_11;
					  tmpvar_11.x = float((tmpvar_9.z >= 0.0));
					  tmpvar_11.y = float((tmpvar_9.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_9.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_11 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_12;
					  tmpvar_12.xz = vec2(0.0, 0.0);
					  tmpvar_12.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  highp vec2 tmpvar_13;
					  tmpvar_13.x = float((tmpvar_10.z >= 0.0));
					  tmpvar_13.y = float((tmpvar_10.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_10.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_13 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = _World2Object[0].xyz;
					  tmpvar_14[1] = _World2Object[1].xyz;
					  tmpvar_14[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_14 * tmpvar_12));
					  xlv_TEXCOORD0 = ((_Object2World * vertex_7).xyz - _LightPositionRange.xyz);
					  gl_Position = (glstate_matrix_mvp * vertex_7);
					  xlv_TEXCOORD1 = (_Object2World * vertex_7).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _LightPositionRange;
					uniform highp vec4 unity_LightShadowBias;
					varying highp vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  highp vec4 enc_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
					    ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) + unity_LightShadowBias.x) * _LightPositionRange.w)
					  , 0.999)));
					  enc_2 = (tmpvar_3 - (tmpvar_3.yzww * 0.003921569));
					  tmpvar_1 = enc_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform highp vec4 unity_LightShadowBias;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 v2_9;
					  highp vec3 v1_10;
					  highp vec3 v0_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_12 + tmpvar_6);
					  v1_10.xz = tmpvar_13.xz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_12 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  v2_9.xz = tmpvar_14.xz;
					  highp vec2 tmpvar_15;
					  tmpvar_15.x = float((tmpvar_12.z >= 0.0));
					  tmpvar_15.y = float((tmpvar_12.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_12.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_15 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_16;
					  tmpvar_16.xz = vec2(0.0, 0.0);
					  tmpvar_16.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  v0_11 = (tmpvar_12 + tmpvar_16);
					  highp vec2 tmpvar_17;
					  tmpvar_17.x = float((tmpvar_13.z >= 0.0));
					  tmpvar_17.y = float((tmpvar_13.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_13.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_17 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v1_10.y = (tmpvar_13.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp vec2 tmpvar_18;
					  tmpvar_18.x = float((tmpvar_14.z >= 0.0));
					  tmpvar_18.y = float((tmpvar_14.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_14.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_18 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v2_9.y = (tmpvar_14.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _World2Object[0].xyz;
					  tmpvar_19[1] = _World2Object[1].xyz;
					  tmpvar_19[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_19 * tmpvar_16));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _World2Object[0].xyz;
					  tmpvar_20[1] = _World2Object[1].xyz;
					  tmpvar_20[2] = _World2Object[2].xyz;
					  highp vec3 a_21;
					  a_21 = (v2_9 - v0_11);
					  highp vec3 b_22;
					  b_22 = (v1_10 - v0_11);
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_20 * normalize(
					    ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx))
					  )));
					  highp vec3 tmpvar_24;
					  tmpvar_24 = (_Object2World * vertex_7).xyz;
					  highp vec3 vertex_25;
					  vertex_25 = vertex_7.xyz;
					  highp vec4 clipPos_26;
					  if ((unity_LightShadowBias.z != 0.0)) {
					    highp vec4 tmpvar_27;
					    tmpvar_27.w = 1.0;
					    tmpvar_27.xyz = vertex_25;
					    highp vec3 tmpvar_28;
					    tmpvar_28 = (_Object2World * tmpvar_27).xyz;
					    highp vec4 v_29;
					    v_29.x = _World2Object[0].x;
					    v_29.y = _World2Object[1].x;
					    v_29.z = _World2Object[2].x;
					    v_29.w = _World2Object[3].x;
					    highp vec4 v_30;
					    v_30.x = _World2Object[0].y;
					    v_30.y = _World2Object[1].y;
					    v_30.z = _World2Object[2].y;
					    v_30.w = _World2Object[3].y;
					    highp vec4 v_31;
					    v_31.x = _World2Object[0].z;
					    v_31.y = _World2Object[1].z;
					    v_31.z = _World2Object[2].z;
					    v_31.w = _World2Object[3].z;
					    highp vec3 tmpvar_32;
					    tmpvar_32 = normalize(((
					      (v_29.xyz * tmpvar_23.x)
					     + 
					      (v_30.xyz * tmpvar_23.y)
					    ) + (v_31.xyz * tmpvar_23.z)));
					    highp float tmpvar_33;
					    tmpvar_33 = dot (tmpvar_32, normalize((_WorldSpaceLightPos0.xyz - 
					      (tmpvar_28 * _WorldSpaceLightPos0.w)
					    )));
					    highp vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = (tmpvar_28 - (tmpvar_32 * (unity_LightShadowBias.z * 
					      sqrt((1.0 - (tmpvar_33 * tmpvar_33)))
					    )));
					    clipPos_26 = (unity_MatrixVP * tmpvar_34);
					  } else {
					    highp vec4 tmpvar_35;
					    tmpvar_35.w = 1.0;
					    tmpvar_35.xyz = vertex_25;
					    clipPos_26 = (glstate_matrix_mvp * tmpvar_35);
					  };
					  highp vec4 clipPos_36;
					  clipPos_36.xyw = clipPos_26.xyw;
					  clipPos_36.z = (clipPos_26.z + clamp ((unity_LightShadowBias.x / clipPos_26.w), 0.0, 1.0));
					  clipPos_36.z = mix (clipPos_36.z, max (clipPos_36.z, -(clipPos_26.w)), unity_LightShadowBias.y);
					  gl_Position = clipPos_36;
					  xlv_TEXCOORD1 = tmpvar_24;
					}
					
					
					#endif
					#ifdef FRAGMENT
					void main ()
					{
					  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _LightPositionRange;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (tmpvar_9 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  highp vec2 tmpvar_11;
					  tmpvar_11.x = float((tmpvar_9.z >= 0.0));
					  tmpvar_11.y = float((tmpvar_9.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_9.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_11 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_12;
					  tmpvar_12.xz = vec2(0.0, 0.0);
					  tmpvar_12.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  highp vec2 tmpvar_13;
					  tmpvar_13.x = float((tmpvar_10.z >= 0.0));
					  tmpvar_13.y = float((tmpvar_10.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_10.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_13 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = _World2Object[0].xyz;
					  tmpvar_14[1] = _World2Object[1].xyz;
					  tmpvar_14[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_14 * tmpvar_12));
					  xlv_TEXCOORD0 = ((_Object2World * vertex_7).xyz - _LightPositionRange.xyz);
					  gl_Position = (glstate_matrix_mvp * vertex_7);
					  xlv_TEXCOORD1 = (_Object2World * vertex_7).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _LightPositionRange;
					uniform highp vec4 unity_LightShadowBias;
					varying highp vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  highp vec4 enc_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
					    ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) + unity_LightShadowBias.x) * _LightPositionRange.w)
					  , 0.999)));
					  enc_2 = (tmpvar_3 - (tmpvar_3.yzww * 0.003921569));
					  tmpvar_1 = enc_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform highp vec4 unity_LightShadowBias;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 v2_9;
					  highp vec3 v1_10;
					  highp vec3 v0_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_12 + tmpvar_6);
					  v1_10.xz = tmpvar_13.xz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_12 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  v2_9.xz = tmpvar_14.xz;
					  highp vec2 tmpvar_15;
					  tmpvar_15.x = float((tmpvar_12.z >= 0.0));
					  tmpvar_15.y = float((tmpvar_12.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_12.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_15 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_16;
					  tmpvar_16.xz = vec2(0.0, 0.0);
					  tmpvar_16.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  v0_11 = (tmpvar_12 + tmpvar_16);
					  highp vec2 tmpvar_17;
					  tmpvar_17.x = float((tmpvar_13.z >= 0.0));
					  tmpvar_17.y = float((tmpvar_13.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_13.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_17 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v1_10.y = (tmpvar_13.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp vec2 tmpvar_18;
					  tmpvar_18.x = float((tmpvar_14.z >= 0.0));
					  tmpvar_18.y = float((tmpvar_14.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_14.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_18 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v2_9.y = (tmpvar_14.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _World2Object[0].xyz;
					  tmpvar_19[1] = _World2Object[1].xyz;
					  tmpvar_19[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_19 * tmpvar_16));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _World2Object[0].xyz;
					  tmpvar_20[1] = _World2Object[1].xyz;
					  tmpvar_20[2] = _World2Object[2].xyz;
					  highp vec3 a_21;
					  a_21 = (v2_9 - v0_11);
					  highp vec3 b_22;
					  b_22 = (v1_10 - v0_11);
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_20 * normalize(
					    ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx))
					  )));
					  highp vec3 tmpvar_24;
					  tmpvar_24 = (_Object2World * vertex_7).xyz;
					  highp vec3 vertex_25;
					  vertex_25 = vertex_7.xyz;
					  highp vec4 clipPos_26;
					  if ((unity_LightShadowBias.z != 0.0)) {
					    highp vec4 tmpvar_27;
					    tmpvar_27.w = 1.0;
					    tmpvar_27.xyz = vertex_25;
					    highp vec3 tmpvar_28;
					    tmpvar_28 = (_Object2World * tmpvar_27).xyz;
					    highp vec4 v_29;
					    v_29.x = _World2Object[0].x;
					    v_29.y = _World2Object[1].x;
					    v_29.z = _World2Object[2].x;
					    v_29.w = _World2Object[3].x;
					    highp vec4 v_30;
					    v_30.x = _World2Object[0].y;
					    v_30.y = _World2Object[1].y;
					    v_30.z = _World2Object[2].y;
					    v_30.w = _World2Object[3].y;
					    highp vec4 v_31;
					    v_31.x = _World2Object[0].z;
					    v_31.y = _World2Object[1].z;
					    v_31.z = _World2Object[2].z;
					    v_31.w = _World2Object[3].z;
					    highp vec3 tmpvar_32;
					    tmpvar_32 = normalize(((
					      (v_29.xyz * tmpvar_23.x)
					     + 
					      (v_30.xyz * tmpvar_23.y)
					    ) + (v_31.xyz * tmpvar_23.z)));
					    highp float tmpvar_33;
					    tmpvar_33 = dot (tmpvar_32, normalize((_WorldSpaceLightPos0.xyz - 
					      (tmpvar_28 * _WorldSpaceLightPos0.w)
					    )));
					    highp vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = (tmpvar_28 - (tmpvar_32 * (unity_LightShadowBias.z * 
					      sqrt((1.0 - (tmpvar_33 * tmpvar_33)))
					    )));
					    clipPos_26 = (unity_MatrixVP * tmpvar_34);
					  } else {
					    highp vec4 tmpvar_35;
					    tmpvar_35.w = 1.0;
					    tmpvar_35.xyz = vertex_25;
					    clipPos_26 = (glstate_matrix_mvp * tmpvar_35);
					  };
					  highp vec4 clipPos_36;
					  clipPos_36.xyw = clipPos_26.xyw;
					  clipPos_36.z = (clipPos_26.z + clamp ((unity_LightShadowBias.x / clipPos_26.w), 0.0, 1.0));
					  clipPos_36.z = mix (clipPos_36.z, max (clipPos_36.z, -(clipPos_26.w)), unity_LightShadowBias.y);
					  gl_Position = clipPos_36;
					  xlv_TEXCOORD1 = tmpvar_24;
					}
					
					
					#endif
					#ifdef FRAGMENT
					void main ()
					{
					  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _LightPositionRange;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (tmpvar_9 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  highp vec2 tmpvar_11;
					  tmpvar_11.x = float((tmpvar_9.z >= 0.0));
					  tmpvar_11.y = float((tmpvar_9.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_9.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_11 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_12;
					  tmpvar_12.xz = vec2(0.0, 0.0);
					  tmpvar_12.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  highp vec2 tmpvar_13;
					  tmpvar_13.x = float((tmpvar_10.z >= 0.0));
					  tmpvar_13.y = float((tmpvar_10.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_10.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_13 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = _World2Object[0].xyz;
					  tmpvar_14[1] = _World2Object[1].xyz;
					  tmpvar_14[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_14 * tmpvar_12));
					  xlv_TEXCOORD0 = ((_Object2World * vertex_7).xyz - _LightPositionRange.xyz);
					  gl_Position = (glstate_matrix_mvp * vertex_7);
					  xlv_TEXCOORD1 = (_Object2World * vertex_7).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _LightPositionRange;
					uniform highp vec4 unity_LightShadowBias;
					varying highp vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  highp vec4 enc_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
					    ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) + unity_LightShadowBias.x) * _LightPositionRange.w)
					  , 0.999)));
					  enc_2 = (tmpvar_3 - (tmpvar_3.yzww * 0.003921569));
					  tmpvar_1 = enc_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform highp vec4 unity_LightShadowBias;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 v2_9;
					  highp vec3 v1_10;
					  highp vec3 v0_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_12 + tmpvar_6);
					  v1_10.xz = tmpvar_13.xz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_12 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  v2_9.xz = tmpvar_14.xz;
					  highp vec2 tmpvar_15;
					  tmpvar_15.x = float((tmpvar_12.z >= 0.0));
					  tmpvar_15.y = float((tmpvar_12.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_12.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_15 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_16;
					  tmpvar_16.xz = vec2(0.0, 0.0);
					  tmpvar_16.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  v0_11 = (tmpvar_12 + tmpvar_16);
					  highp vec2 tmpvar_17;
					  tmpvar_17.x = float((tmpvar_13.z >= 0.0));
					  tmpvar_17.y = float((tmpvar_13.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_13.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_17 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v1_10.y = (tmpvar_13.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp vec2 tmpvar_18;
					  tmpvar_18.x = float((tmpvar_14.z >= 0.0));
					  tmpvar_18.y = float((tmpvar_14.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_14.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_18 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v2_9.y = (tmpvar_14.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _World2Object[0].xyz;
					  tmpvar_19[1] = _World2Object[1].xyz;
					  tmpvar_19[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_19 * tmpvar_16));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _World2Object[0].xyz;
					  tmpvar_20[1] = _World2Object[1].xyz;
					  tmpvar_20[2] = _World2Object[2].xyz;
					  highp vec3 a_21;
					  a_21 = (v2_9 - v0_11);
					  highp vec3 b_22;
					  b_22 = (v1_10 - v0_11);
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_20 * normalize(
					    ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx))
					  )));
					  highp vec3 tmpvar_24;
					  tmpvar_24 = (_Object2World * vertex_7).xyz;
					  highp vec3 vertex_25;
					  vertex_25 = vertex_7.xyz;
					  highp vec4 clipPos_26;
					  if ((unity_LightShadowBias.z != 0.0)) {
					    highp vec4 tmpvar_27;
					    tmpvar_27.w = 1.0;
					    tmpvar_27.xyz = vertex_25;
					    highp vec3 tmpvar_28;
					    tmpvar_28 = (_Object2World * tmpvar_27).xyz;
					    highp vec4 v_29;
					    v_29.x = _World2Object[0].x;
					    v_29.y = _World2Object[1].x;
					    v_29.z = _World2Object[2].x;
					    v_29.w = _World2Object[3].x;
					    highp vec4 v_30;
					    v_30.x = _World2Object[0].y;
					    v_30.y = _World2Object[1].y;
					    v_30.z = _World2Object[2].y;
					    v_30.w = _World2Object[3].y;
					    highp vec4 v_31;
					    v_31.x = _World2Object[0].z;
					    v_31.y = _World2Object[1].z;
					    v_31.z = _World2Object[2].z;
					    v_31.w = _World2Object[3].z;
					    highp vec3 tmpvar_32;
					    tmpvar_32 = normalize(((
					      (v_29.xyz * tmpvar_23.x)
					     + 
					      (v_30.xyz * tmpvar_23.y)
					    ) + (v_31.xyz * tmpvar_23.z)));
					    highp float tmpvar_33;
					    tmpvar_33 = dot (tmpvar_32, normalize((_WorldSpaceLightPos0.xyz - 
					      (tmpvar_28 * _WorldSpaceLightPos0.w)
					    )));
					    highp vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = (tmpvar_28 - (tmpvar_32 * (unity_LightShadowBias.z * 
					      sqrt((1.0 - (tmpvar_33 * tmpvar_33)))
					    )));
					    clipPos_26 = (unity_MatrixVP * tmpvar_34);
					  } else {
					    highp vec4 tmpvar_35;
					    tmpvar_35.w = 1.0;
					    tmpvar_35.xyz = vertex_25;
					    clipPos_26 = (glstate_matrix_mvp * tmpvar_35);
					  };
					  highp vec4 clipPos_36;
					  clipPos_36.xyw = clipPos_26.xyw;
					  clipPos_36.z = (clipPos_26.z + clamp ((unity_LightShadowBias.x / clipPos_26.w), 0.0, 1.0));
					  clipPos_36.z = mix (clipPos_36.z, max (clipPos_36.z, -(clipPos_26.w)), unity_LightShadowBias.y);
					  gl_Position = clipPos_36;
					  xlv_TEXCOORD1 = tmpvar_24;
					}
					
					
					#endif
					#ifdef FRAGMENT
					void main ()
					{
					  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _LightPositionRange;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (tmpvar_9 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  highp vec2 tmpvar_11;
					  tmpvar_11.x = float((tmpvar_9.z >= 0.0));
					  tmpvar_11.y = float((tmpvar_9.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_9.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_11 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_12;
					  tmpvar_12.xz = vec2(0.0, 0.0);
					  tmpvar_12.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  highp vec2 tmpvar_13;
					  tmpvar_13.x = float((tmpvar_10.z >= 0.0));
					  tmpvar_13.y = float((tmpvar_10.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_10.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_13 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = _World2Object[0].xyz;
					  tmpvar_14[1] = _World2Object[1].xyz;
					  tmpvar_14[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_14 * tmpvar_12));
					  xlv_TEXCOORD0 = ((_Object2World * vertex_7).xyz - _LightPositionRange.xyz);
					  gl_Position = (glstate_matrix_mvp * vertex_7);
					  xlv_TEXCOORD1 = (_Object2World * vertex_7).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _LightPositionRange;
					uniform highp vec4 unity_LightShadowBias;
					varying highp vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  highp vec4 enc_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
					    ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) + unity_LightShadowBias.x) * _LightPositionRange.w)
					  , 0.999)));
					  enc_2 = (tmpvar_3 - (tmpvar_3.yzww * 0.003921569));
					  tmpvar_1 = enc_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform highp vec4 unity_LightShadowBias;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 v2_9;
					  highp vec3 v1_10;
					  highp vec3 v0_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_12 + tmpvar_6);
					  v1_10.xz = tmpvar_13.xz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_12 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  v2_9.xz = tmpvar_14.xz;
					  highp vec2 tmpvar_15;
					  tmpvar_15.x = float((tmpvar_12.z >= 0.0));
					  tmpvar_15.y = float((tmpvar_12.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_12.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_15 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_16;
					  tmpvar_16.xz = vec2(0.0, 0.0);
					  tmpvar_16.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  v0_11 = (tmpvar_12 + tmpvar_16);
					  highp vec2 tmpvar_17;
					  tmpvar_17.x = float((tmpvar_13.z >= 0.0));
					  tmpvar_17.y = float((tmpvar_13.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_13.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_17 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v1_10.y = (tmpvar_13.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp vec2 tmpvar_18;
					  tmpvar_18.x = float((tmpvar_14.z >= 0.0));
					  tmpvar_18.y = float((tmpvar_14.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_14.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_18 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v2_9.y = (tmpvar_14.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _World2Object[0].xyz;
					  tmpvar_19[1] = _World2Object[1].xyz;
					  tmpvar_19[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_19 * tmpvar_16));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _World2Object[0].xyz;
					  tmpvar_20[1] = _World2Object[1].xyz;
					  tmpvar_20[2] = _World2Object[2].xyz;
					  highp vec3 a_21;
					  a_21 = (v2_9 - v0_11);
					  highp vec3 b_22;
					  b_22 = (v1_10 - v0_11);
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_20 * normalize(
					    ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx))
					  )));
					  highp vec3 tmpvar_24;
					  tmpvar_24 = (_Object2World * vertex_7).xyz;
					  highp vec3 vertex_25;
					  vertex_25 = vertex_7.xyz;
					  highp vec4 clipPos_26;
					  if ((unity_LightShadowBias.z != 0.0)) {
					    highp vec4 tmpvar_27;
					    tmpvar_27.w = 1.0;
					    tmpvar_27.xyz = vertex_25;
					    highp vec3 tmpvar_28;
					    tmpvar_28 = (_Object2World * tmpvar_27).xyz;
					    highp vec4 v_29;
					    v_29.x = _World2Object[0].x;
					    v_29.y = _World2Object[1].x;
					    v_29.z = _World2Object[2].x;
					    v_29.w = _World2Object[3].x;
					    highp vec4 v_30;
					    v_30.x = _World2Object[0].y;
					    v_30.y = _World2Object[1].y;
					    v_30.z = _World2Object[2].y;
					    v_30.w = _World2Object[3].y;
					    highp vec4 v_31;
					    v_31.x = _World2Object[0].z;
					    v_31.y = _World2Object[1].z;
					    v_31.z = _World2Object[2].z;
					    v_31.w = _World2Object[3].z;
					    highp vec3 tmpvar_32;
					    tmpvar_32 = normalize(((
					      (v_29.xyz * tmpvar_23.x)
					     + 
					      (v_30.xyz * tmpvar_23.y)
					    ) + (v_31.xyz * tmpvar_23.z)));
					    highp float tmpvar_33;
					    tmpvar_33 = dot (tmpvar_32, normalize((_WorldSpaceLightPos0.xyz - 
					      (tmpvar_28 * _WorldSpaceLightPos0.w)
					    )));
					    highp vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = (tmpvar_28 - (tmpvar_32 * (unity_LightShadowBias.z * 
					      sqrt((1.0 - (tmpvar_33 * tmpvar_33)))
					    )));
					    clipPos_26 = (unity_MatrixVP * tmpvar_34);
					  } else {
					    highp vec4 tmpvar_35;
					    tmpvar_35.w = 1.0;
					    tmpvar_35.xyz = vertex_25;
					    clipPos_26 = (glstate_matrix_mvp * tmpvar_35);
					  };
					  highp vec4 clipPos_36;
					  clipPos_36.xyw = clipPos_26.xyw;
					  clipPos_36.z = (clipPos_26.z + clamp ((unity_LightShadowBias.x / clipPos_26.w), 0.0, 1.0));
					  clipPos_36.z = mix (clipPos_36.z, max (clipPos_36.z, -(clipPos_26.w)), unity_LightShadowBias.y);
					  gl_Position = clipPos_36;
					  xlv_TEXCOORD1 = tmpvar_24;
					}
					
					
					#endif
					#ifdef FRAGMENT
					void main ()
					{
					  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _LightPositionRange;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (tmpvar_9 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  highp vec2 tmpvar_11;
					  tmpvar_11.x = float((tmpvar_9.z >= 0.0));
					  tmpvar_11.y = float((tmpvar_9.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_9.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_11 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_12;
					  tmpvar_12.xz = vec2(0.0, 0.0);
					  tmpvar_12.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  highp vec2 tmpvar_13;
					  tmpvar_13.x = float((tmpvar_10.z >= 0.0));
					  tmpvar_13.y = float((tmpvar_10.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_10.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_13 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = _World2Object[0].xyz;
					  tmpvar_14[1] = _World2Object[1].xyz;
					  tmpvar_14[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_14 * tmpvar_12));
					  xlv_TEXCOORD0 = ((_Object2World * vertex_7).xyz - _LightPositionRange.xyz);
					  gl_Position = (glstate_matrix_mvp * vertex_7);
					  xlv_TEXCOORD1 = (_Object2World * vertex_7).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _LightPositionRange;
					uniform highp vec4 unity_LightShadowBias;
					varying highp vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  highp vec4 enc_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
					    ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) + unity_LightShadowBias.x) * _LightPositionRange.w)
					  , 0.999)));
					  enc_2 = (tmpvar_3 - (tmpvar_3.yzww * 0.003921569));
					  tmpvar_1 = enc_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform highp vec4 unity_LightShadowBias;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 v2_9;
					  highp vec3 v1_10;
					  highp vec3 v0_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_12 + tmpvar_6);
					  v1_10.xz = tmpvar_13.xz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_12 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  v2_9.xz = tmpvar_14.xz;
					  highp vec2 tmpvar_15;
					  tmpvar_15.x = float((tmpvar_12.z >= 0.0));
					  tmpvar_15.y = float((tmpvar_12.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_12.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_15 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_16;
					  tmpvar_16.xz = vec2(0.0, 0.0);
					  tmpvar_16.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  v0_11 = (tmpvar_12 + tmpvar_16);
					  highp vec2 tmpvar_17;
					  tmpvar_17.x = float((tmpvar_13.z >= 0.0));
					  tmpvar_17.y = float((tmpvar_13.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_13.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_17 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v1_10.y = (tmpvar_13.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp vec2 tmpvar_18;
					  tmpvar_18.x = float((tmpvar_14.z >= 0.0));
					  tmpvar_18.y = float((tmpvar_14.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_14.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_18 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v2_9.y = (tmpvar_14.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _World2Object[0].xyz;
					  tmpvar_19[1] = _World2Object[1].xyz;
					  tmpvar_19[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_19 * tmpvar_16));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _World2Object[0].xyz;
					  tmpvar_20[1] = _World2Object[1].xyz;
					  tmpvar_20[2] = _World2Object[2].xyz;
					  highp vec3 a_21;
					  a_21 = (v2_9 - v0_11);
					  highp vec3 b_22;
					  b_22 = (v1_10 - v0_11);
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_20 * normalize(
					    ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx))
					  )));
					  highp vec3 tmpvar_24;
					  tmpvar_24 = (_Object2World * vertex_7).xyz;
					  highp vec3 vertex_25;
					  vertex_25 = vertex_7.xyz;
					  highp vec4 clipPos_26;
					  if ((unity_LightShadowBias.z != 0.0)) {
					    highp vec4 tmpvar_27;
					    tmpvar_27.w = 1.0;
					    tmpvar_27.xyz = vertex_25;
					    highp vec3 tmpvar_28;
					    tmpvar_28 = (_Object2World * tmpvar_27).xyz;
					    highp vec4 v_29;
					    v_29.x = _World2Object[0].x;
					    v_29.y = _World2Object[1].x;
					    v_29.z = _World2Object[2].x;
					    v_29.w = _World2Object[3].x;
					    highp vec4 v_30;
					    v_30.x = _World2Object[0].y;
					    v_30.y = _World2Object[1].y;
					    v_30.z = _World2Object[2].y;
					    v_30.w = _World2Object[3].y;
					    highp vec4 v_31;
					    v_31.x = _World2Object[0].z;
					    v_31.y = _World2Object[1].z;
					    v_31.z = _World2Object[2].z;
					    v_31.w = _World2Object[3].z;
					    highp vec3 tmpvar_32;
					    tmpvar_32 = normalize(((
					      (v_29.xyz * tmpvar_23.x)
					     + 
					      (v_30.xyz * tmpvar_23.y)
					    ) + (v_31.xyz * tmpvar_23.z)));
					    highp float tmpvar_33;
					    tmpvar_33 = dot (tmpvar_32, normalize((_WorldSpaceLightPos0.xyz - 
					      (tmpvar_28 * _WorldSpaceLightPos0.w)
					    )));
					    highp vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = (tmpvar_28 - (tmpvar_32 * (unity_LightShadowBias.z * 
					      sqrt((1.0 - (tmpvar_33 * tmpvar_33)))
					    )));
					    clipPos_26 = (unity_MatrixVP * tmpvar_34);
					  } else {
					    highp vec4 tmpvar_35;
					    tmpvar_35.w = 1.0;
					    tmpvar_35.xyz = vertex_25;
					    clipPos_26 = (glstate_matrix_mvp * tmpvar_35);
					  };
					  highp vec4 clipPos_36;
					  clipPos_36.xyw = clipPos_26.xyw;
					  clipPos_36.z = (clipPos_26.z + clamp ((unity_LightShadowBias.x / clipPos_26.w), 0.0, 1.0));
					  clipPos_36.z = mix (clipPos_36.z, max (clipPos_36.z, -(clipPos_26.w)), unity_LightShadowBias.y);
					  gl_Position = clipPos_36;
					  xlv_TEXCOORD1 = tmpvar_24;
					}
					
					
					#endif
					#ifdef FRAGMENT
					void main ()
					{
					  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _LightPositionRange;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (tmpvar_9 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  highp vec2 tmpvar_11;
					  tmpvar_11.x = float((tmpvar_9.z >= 0.0));
					  tmpvar_11.y = float((tmpvar_9.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_9.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_11 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_12;
					  tmpvar_12.xz = vec2(0.0, 0.0);
					  tmpvar_12.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  highp vec2 tmpvar_13;
					  tmpvar_13.x = float((tmpvar_10.z >= 0.0));
					  tmpvar_13.y = float((tmpvar_10.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_10.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_13 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = _World2Object[0].xyz;
					  tmpvar_14[1] = _World2Object[1].xyz;
					  tmpvar_14[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_14 * tmpvar_12));
					  xlv_TEXCOORD0 = ((_Object2World * vertex_7).xyz - _LightPositionRange.xyz);
					  gl_Position = (glstate_matrix_mvp * vertex_7);
					  xlv_TEXCOORD1 = (_Object2World * vertex_7).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _LightPositionRange;
					uniform highp vec4 unity_LightShadowBias;
					varying highp vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  highp vec4 enc_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
					    ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) + unity_LightShadowBias.x) * _LightPositionRange.w)
					  , 0.999)));
					  enc_2 = (tmpvar_3 - (tmpvar_3.yzww * 0.003921569));
					  tmpvar_1 = enc_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform highp vec4 unity_LightShadowBias;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 v2_9;
					  highp vec3 v1_10;
					  highp vec3 v0_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_12 + tmpvar_6);
					  v1_10.xz = tmpvar_13.xz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_12 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  v2_9.xz = tmpvar_14.xz;
					  highp vec2 tmpvar_15;
					  tmpvar_15.x = float((tmpvar_12.z >= 0.0));
					  tmpvar_15.y = float((tmpvar_12.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_12.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_15 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_16;
					  tmpvar_16.xz = vec2(0.0, 0.0);
					  tmpvar_16.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  v0_11 = (tmpvar_12 + tmpvar_16);
					  highp vec2 tmpvar_17;
					  tmpvar_17.x = float((tmpvar_13.z >= 0.0));
					  tmpvar_17.y = float((tmpvar_13.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_13.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_17 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v1_10.y = (tmpvar_13.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp vec2 tmpvar_18;
					  tmpvar_18.x = float((tmpvar_14.z >= 0.0));
					  tmpvar_18.y = float((tmpvar_14.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_14.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_18 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v2_9.y = (tmpvar_14.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _World2Object[0].xyz;
					  tmpvar_19[1] = _World2Object[1].xyz;
					  tmpvar_19[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_19 * tmpvar_16));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _World2Object[0].xyz;
					  tmpvar_20[1] = _World2Object[1].xyz;
					  tmpvar_20[2] = _World2Object[2].xyz;
					  highp vec3 a_21;
					  a_21 = (v2_9 - v0_11);
					  highp vec3 b_22;
					  b_22 = (v1_10 - v0_11);
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_20 * normalize(
					    ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx))
					  )));
					  highp vec3 tmpvar_24;
					  tmpvar_24 = (_Object2World * vertex_7).xyz;
					  highp vec3 vertex_25;
					  vertex_25 = vertex_7.xyz;
					  highp vec4 clipPos_26;
					  if ((unity_LightShadowBias.z != 0.0)) {
					    highp vec4 tmpvar_27;
					    tmpvar_27.w = 1.0;
					    tmpvar_27.xyz = vertex_25;
					    highp vec3 tmpvar_28;
					    tmpvar_28 = (_Object2World * tmpvar_27).xyz;
					    highp vec4 v_29;
					    v_29.x = _World2Object[0].x;
					    v_29.y = _World2Object[1].x;
					    v_29.z = _World2Object[2].x;
					    v_29.w = _World2Object[3].x;
					    highp vec4 v_30;
					    v_30.x = _World2Object[0].y;
					    v_30.y = _World2Object[1].y;
					    v_30.z = _World2Object[2].y;
					    v_30.w = _World2Object[3].y;
					    highp vec4 v_31;
					    v_31.x = _World2Object[0].z;
					    v_31.y = _World2Object[1].z;
					    v_31.z = _World2Object[2].z;
					    v_31.w = _World2Object[3].z;
					    highp vec3 tmpvar_32;
					    tmpvar_32 = normalize(((
					      (v_29.xyz * tmpvar_23.x)
					     + 
					      (v_30.xyz * tmpvar_23.y)
					    ) + (v_31.xyz * tmpvar_23.z)));
					    highp float tmpvar_33;
					    tmpvar_33 = dot (tmpvar_32, normalize((_WorldSpaceLightPos0.xyz - 
					      (tmpvar_28 * _WorldSpaceLightPos0.w)
					    )));
					    highp vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = (tmpvar_28 - (tmpvar_32 * (unity_LightShadowBias.z * 
					      sqrt((1.0 - (tmpvar_33 * tmpvar_33)))
					    )));
					    clipPos_26 = (unity_MatrixVP * tmpvar_34);
					  } else {
					    highp vec4 tmpvar_35;
					    tmpvar_35.w = 1.0;
					    tmpvar_35.xyz = vertex_25;
					    clipPos_26 = (glstate_matrix_mvp * tmpvar_35);
					  };
					  highp vec4 clipPos_36;
					  clipPos_36.xyw = clipPos_26.xyw;
					  clipPos_36.z = (clipPos_26.z + clamp ((unity_LightShadowBias.x / clipPos_26.w), 0.0, 1.0));
					  clipPos_36.z = mix (clipPos_36.z, max (clipPos_36.z, -(clipPos_26.w)), unity_LightShadowBias.y);
					  gl_Position = clipPos_36;
					  xlv_TEXCOORD1 = tmpvar_24;
					}
					
					
					#endif
					#ifdef FRAGMENT
					void main ()
					{
					  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _LightPositionRange;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (tmpvar_9 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  highp vec2 tmpvar_11;
					  tmpvar_11.x = float((tmpvar_9.z >= 0.0));
					  tmpvar_11.y = float((tmpvar_9.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_9.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_11 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_12;
					  tmpvar_12.xz = vec2(0.0, 0.0);
					  tmpvar_12.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  highp vec2 tmpvar_13;
					  tmpvar_13.x = float((tmpvar_10.z >= 0.0));
					  tmpvar_13.y = float((tmpvar_10.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_10.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_13 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = _World2Object[0].xyz;
					  tmpvar_14[1] = _World2Object[1].xyz;
					  tmpvar_14[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_14 * tmpvar_12));
					  xlv_TEXCOORD0 = ((_Object2World * vertex_7).xyz - _LightPositionRange.xyz);
					  gl_Position = (glstate_matrix_mvp * vertex_7);
					  xlv_TEXCOORD1 = (_Object2World * vertex_7).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _LightPositionRange;
					uniform highp vec4 unity_LightShadowBias;
					varying highp vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  highp vec4 enc_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
					    ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) + unity_LightShadowBias.x) * _LightPositionRange.w)
					  , 0.999)));
					  enc_2 = (tmpvar_3 - (tmpvar_3.yzww * 0.003921569));
					  tmpvar_1 = enc_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform highp vec4 unity_LightShadowBias;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 v2_9;
					  highp vec3 v1_10;
					  highp vec3 v0_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_12 + tmpvar_6);
					  v1_10.xz = tmpvar_13.xz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_12 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  v2_9.xz = tmpvar_14.xz;
					  highp vec2 tmpvar_15;
					  tmpvar_15.x = float((tmpvar_12.z >= 0.0));
					  tmpvar_15.y = float((tmpvar_12.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_12.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_15 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_16;
					  tmpvar_16.xz = vec2(0.0, 0.0);
					  tmpvar_16.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  v0_11 = (tmpvar_12 + tmpvar_16);
					  highp vec2 tmpvar_17;
					  tmpvar_17.x = float((tmpvar_13.z >= 0.0));
					  tmpvar_17.y = float((tmpvar_13.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_13.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_17 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v1_10.y = (tmpvar_13.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp vec2 tmpvar_18;
					  tmpvar_18.x = float((tmpvar_14.z >= 0.0));
					  tmpvar_18.y = float((tmpvar_14.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_14.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_18 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v2_9.y = (tmpvar_14.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _World2Object[0].xyz;
					  tmpvar_19[1] = _World2Object[1].xyz;
					  tmpvar_19[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_19 * tmpvar_16));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _World2Object[0].xyz;
					  tmpvar_20[1] = _World2Object[1].xyz;
					  tmpvar_20[2] = _World2Object[2].xyz;
					  highp vec3 a_21;
					  a_21 = (v2_9 - v0_11);
					  highp vec3 b_22;
					  b_22 = (v1_10 - v0_11);
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_20 * normalize(
					    ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx))
					  )));
					  highp vec3 tmpvar_24;
					  tmpvar_24 = (_Object2World * vertex_7).xyz;
					  highp vec3 vertex_25;
					  vertex_25 = vertex_7.xyz;
					  highp vec4 clipPos_26;
					  if ((unity_LightShadowBias.z != 0.0)) {
					    highp vec4 tmpvar_27;
					    tmpvar_27.w = 1.0;
					    tmpvar_27.xyz = vertex_25;
					    highp vec3 tmpvar_28;
					    tmpvar_28 = (_Object2World * tmpvar_27).xyz;
					    highp vec4 v_29;
					    v_29.x = _World2Object[0].x;
					    v_29.y = _World2Object[1].x;
					    v_29.z = _World2Object[2].x;
					    v_29.w = _World2Object[3].x;
					    highp vec4 v_30;
					    v_30.x = _World2Object[0].y;
					    v_30.y = _World2Object[1].y;
					    v_30.z = _World2Object[2].y;
					    v_30.w = _World2Object[3].y;
					    highp vec4 v_31;
					    v_31.x = _World2Object[0].z;
					    v_31.y = _World2Object[1].z;
					    v_31.z = _World2Object[2].z;
					    v_31.w = _World2Object[3].z;
					    highp vec3 tmpvar_32;
					    tmpvar_32 = normalize(((
					      (v_29.xyz * tmpvar_23.x)
					     + 
					      (v_30.xyz * tmpvar_23.y)
					    ) + (v_31.xyz * tmpvar_23.z)));
					    highp float tmpvar_33;
					    tmpvar_33 = dot (tmpvar_32, normalize((_WorldSpaceLightPos0.xyz - 
					      (tmpvar_28 * _WorldSpaceLightPos0.w)
					    )));
					    highp vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = (tmpvar_28 - (tmpvar_32 * (unity_LightShadowBias.z * 
					      sqrt((1.0 - (tmpvar_33 * tmpvar_33)))
					    )));
					    clipPos_26 = (unity_MatrixVP * tmpvar_34);
					  } else {
					    highp vec4 tmpvar_35;
					    tmpvar_35.w = 1.0;
					    tmpvar_35.xyz = vertex_25;
					    clipPos_26 = (glstate_matrix_mvp * tmpvar_35);
					  };
					  highp vec4 clipPos_36;
					  clipPos_36.xyw = clipPos_26.xyw;
					  clipPos_36.z = (clipPos_26.z + clamp ((unity_LightShadowBias.x / clipPos_26.w), 0.0, 1.0));
					  clipPos_36.z = mix (clipPos_36.z, max (clipPos_36.z, -(clipPos_26.w)), unity_LightShadowBias.y);
					  gl_Position = clipPos_36;
					  xlv_TEXCOORD1 = tmpvar_24;
					}
					
					
					#endif
					#ifdef FRAGMENT
					void main ()
					{
					  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _LightPositionRange;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (tmpvar_9 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  highp vec2 tmpvar_11;
					  tmpvar_11.x = float((tmpvar_9.z >= 0.0));
					  tmpvar_11.y = float((tmpvar_9.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_9.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_11 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_12;
					  tmpvar_12.xz = vec2(0.0, 0.0);
					  tmpvar_12.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  highp vec2 tmpvar_13;
					  tmpvar_13.x = float((tmpvar_10.z >= 0.0));
					  tmpvar_13.y = float((tmpvar_10.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_10.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_13 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = _World2Object[0].xyz;
					  tmpvar_14[1] = _World2Object[1].xyz;
					  tmpvar_14[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_14 * tmpvar_12));
					  xlv_TEXCOORD0 = ((_Object2World * vertex_7).xyz - _LightPositionRange.xyz);
					  gl_Position = (glstate_matrix_mvp * vertex_7);
					  xlv_TEXCOORD1 = (_Object2World * vertex_7).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _LightPositionRange;
					uniform highp vec4 unity_LightShadowBias;
					varying highp vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  highp vec4 enc_2;
					  highp vec4 tmpvar_3;
					  tmpvar_3 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
					    ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) + unity_LightShadowBias.x) * _LightPositionRange.w)
					  , 0.999)));
					  enc_2 = (tmpvar_3 - (tmpvar_3.yzww * 0.003921569));
					  tmpvar_1 = enc_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform highp vec4 unity_LightShadowBias;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 v2_9;
					  highp vec3 v1_10;
					  highp vec3 v0_11;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_13;
					  tmpvar_13 = (tmpvar_12 + tmpvar_6);
					  v1_10.xz = tmpvar_13.xz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = (tmpvar_12 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  v2_9.xz = tmpvar_14.xz;
					  highp vec2 tmpvar_15;
					  tmpvar_15.x = float((tmpvar_12.z >= 0.0));
					  tmpvar_15.y = float((tmpvar_12.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_12.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_15 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_16;
					  tmpvar_16.xz = vec2(0.0, 0.0);
					  tmpvar_16.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  v0_11 = (tmpvar_12 + tmpvar_16);
					  highp vec2 tmpvar_17;
					  tmpvar_17.x = float((tmpvar_13.z >= 0.0));
					  tmpvar_17.y = float((tmpvar_13.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_13.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_17 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v1_10.y = (tmpvar_13.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp vec2 tmpvar_18;
					  tmpvar_18.x = float((tmpvar_14.z >= 0.0));
					  tmpvar_18.y = float((tmpvar_14.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_14.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_18 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  v2_9.y = (tmpvar_14.y + ((
					    (_V_CW_Bend.x * xzOff_8.x)
					   + 
					    (_V_CW_Bend.z * xzOff_8.y)
					  ) * 0.001));
					  highp mat3 tmpvar_19;
					  tmpvar_19[0] = _World2Object[0].xyz;
					  tmpvar_19[1] = _World2Object[1].xyz;
					  tmpvar_19[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_19 * tmpvar_16));
					  highp mat3 tmpvar_20;
					  tmpvar_20[0] = _World2Object[0].xyz;
					  tmpvar_20[1] = _World2Object[1].xyz;
					  tmpvar_20[2] = _World2Object[2].xyz;
					  highp vec3 a_21;
					  a_21 = (v2_9 - v0_11);
					  highp vec3 b_22;
					  b_22 = (v1_10 - v0_11);
					  highp vec3 tmpvar_23;
					  tmpvar_23 = normalize((tmpvar_20 * normalize(
					    ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx))
					  )));
					  highp vec3 tmpvar_24;
					  tmpvar_24 = (_Object2World * vertex_7).xyz;
					  highp vec3 vertex_25;
					  vertex_25 = vertex_7.xyz;
					  highp vec4 clipPos_26;
					  if ((unity_LightShadowBias.z != 0.0)) {
					    highp vec4 tmpvar_27;
					    tmpvar_27.w = 1.0;
					    tmpvar_27.xyz = vertex_25;
					    highp vec3 tmpvar_28;
					    tmpvar_28 = (_Object2World * tmpvar_27).xyz;
					    highp vec4 v_29;
					    v_29.x = _World2Object[0].x;
					    v_29.y = _World2Object[1].x;
					    v_29.z = _World2Object[2].x;
					    v_29.w = _World2Object[3].x;
					    highp vec4 v_30;
					    v_30.x = _World2Object[0].y;
					    v_30.y = _World2Object[1].y;
					    v_30.z = _World2Object[2].y;
					    v_30.w = _World2Object[3].y;
					    highp vec4 v_31;
					    v_31.x = _World2Object[0].z;
					    v_31.y = _World2Object[1].z;
					    v_31.z = _World2Object[2].z;
					    v_31.w = _World2Object[3].z;
					    highp vec3 tmpvar_32;
					    tmpvar_32 = normalize(((
					      (v_29.xyz * tmpvar_23.x)
					     + 
					      (v_30.xyz * tmpvar_23.y)
					    ) + (v_31.xyz * tmpvar_23.z)));
					    highp float tmpvar_33;
					    tmpvar_33 = dot (tmpvar_32, normalize((_WorldSpaceLightPos0.xyz - 
					      (tmpvar_28 * _WorldSpaceLightPos0.w)
					    )));
					    highp vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = (tmpvar_28 - (tmpvar_32 * (unity_LightShadowBias.z * 
					      sqrt((1.0 - (tmpvar_33 * tmpvar_33)))
					    )));
					    clipPos_26 = (unity_MatrixVP * tmpvar_34);
					  } else {
					    highp vec4 tmpvar_35;
					    tmpvar_35.w = 1.0;
					    tmpvar_35.xyz = vertex_25;
					    clipPos_26 = (glstate_matrix_mvp * tmpvar_35);
					  };
					  highp vec4 clipPos_36;
					  clipPos_36.xyw = clipPos_26.xyw;
					  clipPos_36.z = (clipPos_26.z + clamp ((unity_LightShadowBias.x / clipPos_26.w), 0.0, 1.0));
					  clipPos_36.z = mix (clipPos_36.z, max (clipPos_36.z, -(clipPos_26.w)), unity_LightShadowBias.y);
					  gl_Position = clipPos_36;
					  xlv_TEXCOORD1 = tmpvar_24;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					void main ()
					{
					  lowp vec3 tmpvar_1;
					  highp vec2 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec3 tmpvar_4;
					  tmpvar_2.x = 1.0;
					  tmpvar_3.x = 1.0;
					  tmpvar_4.x = 1.0;
					  lowp vec3 tmpvar_5;
					  lowp vec3 tmpvar_6;
					  lowp vec4 tmpvar_7;
					  highp vec2 P_8;
					  P_8 = (tmpvar_2 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_7 = texture2D (_MainTex, P_8);
					  tmpvar_5 = (tmpvar_7.xyz * _Color.xyz);
					  mediump vec3 inVec_9;
					  inVec_9 = tmpvar_3;
					  tmpvar_6 = ((textureCube (_V_CW_Cube, tmpvar_4).xyz * _V_CW_ReflectColor.xyz) * clamp ((
					    (tmpvar_7.w * _Color.w)
					   + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_10;
					  tmpvar_10 = pow ((1.0 - max (0.0, 
					    dot ((inVec_9 * inversesqrt(max (0.001, 
					      dot (inVec_9, inVec_9)
					    ))), tmpvar_1)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = mix (tmpvar_6, _V_CW_Rim_Color.xyz, vec3(tmpvar_10));
					  tmpvar_6 = tmpvar_11;
					  mediump vec3 tmpvar_12;
					  tmpvar_12 = mix (tmpvar_5, _V_CW_Rim_Color.xyz, vec3(tmpvar_10));
					  tmpvar_5 = tmpvar_12;
					  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
					}
					
					
					#endif"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					uniform highp vec4 _LightPositionRange;
					uniform highp mat4 glstate_matrix_mvp;
					uniform highp mat4 _Object2World;
					uniform highp mat4 _World2Object;
					uniform highp vec3 _V_CW_Bend;
					uniform highp vec3 _V_CW_Bias;
					uniform highp vec4 _V_CW_PivotPoint_Position;
					varying highp vec3 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					void main ()
					{
					  highp vec4 v_1;
					  v_1.x = _World2Object[0].x;
					  v_1.y = _World2Object[1].x;
					  v_1.z = _World2Object[2].x;
					  v_1.w = _World2Object[3].x;
					  highp vec4 v_2;
					  v_2.x = _World2Object[0].y;
					  v_2.y = _World2Object[1].y;
					  v_2.z = _World2Object[2].y;
					  v_2.w = _World2Object[3].y;
					  highp vec4 v_3;
					  v_3.x = _World2Object[0].z;
					  v_3.y = _World2Object[1].z;
					  v_3.z = _World2Object[2].z;
					  v_3.w = _World2Object[3].z;
					  highp vec3 tmpvar_4;
					  tmpvar_4 = normalize(((
					    (v_1.xyz * _glesNormal.x)
					   + 
					    (v_2.xyz * _glesNormal.y)
					  ) + (v_3.xyz * _glesNormal.z)));
					  highp mat3 tmpvar_5;
					  tmpvar_5[0] = _Object2World[0].xyz;
					  tmpvar_5[1] = _Object2World[1].xyz;
					  tmpvar_5[2] = _Object2World[2].xyz;
					  highp vec3 tmpvar_6;
					  tmpvar_6 = normalize((tmpvar_5 * _glesTANGENT.xyz));
					  highp vec4 vertex_7;
					  vertex_7.w = _glesVertex.w;
					  highp vec2 xzOff_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = ((_Object2World * _glesVertex).xyz - _V_CW_PivotPoint_Position.xyz);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (tmpvar_9 - ((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)));
					  highp vec2 tmpvar_11;
					  tmpvar_11.x = float((tmpvar_9.z >= 0.0));
					  tmpvar_11.y = float((tmpvar_9.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_9.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_11 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp vec3 tmpvar_12;
					  tmpvar_12.xz = vec2(0.0, 0.0);
					  tmpvar_12.y = (((_V_CW_Bend.x * xzOff_8.x) + (_V_CW_Bend.z * xzOff_8.y)) * 0.001);
					  highp vec2 tmpvar_13;
					  tmpvar_13.x = float((tmpvar_10.z >= 0.0));
					  tmpvar_13.y = float((tmpvar_10.x >= 0.0));
					  xzOff_8 = (max (vec2(0.0, 0.0), (
					    abs(tmpvar_10.zx)
					   - _V_CW_Bias.xz)) * ((tmpvar_13 * 2.0) - 1.0));
					  xzOff_8 = (xzOff_8 * xzOff_8);
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = _World2Object[0].xyz;
					  tmpvar_14[1] = _World2Object[1].xyz;
					  tmpvar_14[2] = _World2Object[2].xyz;
					  vertex_7.xyz = (_glesVertex.xyz + (tmpvar_14 * tmpvar_12));
					  xlv_TEXCOORD0 = ((_Object2World * vertex_7).xyz - _LightPositionRange.xyz);
					  gl_Position = (glstate_matrix_mvp * vertex_7);
					  xlv_TEXCOORD1 = (_Object2World * vertex_7).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _Time;
					uniform highp vec4 _LightPositionRange;
					uniform highp vec4 unity_LightShadowBias;
					uniform sampler2D _MainTex;
					uniform lowp vec4 _Color;
					uniform lowp vec2 _V_CW_MainTex_Scroll;
					uniform lowp samplerCube _V_CW_Cube;
					uniform lowp vec4 _V_CW_ReflectColor;
					uniform lowp float _V_CW_ReflectStrengthAlphaOffset;
					uniform lowp vec4 _V_CW_Rim_Color;
					uniform mediump float _V_CW_Rim_Power;
					varying highp vec3 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  lowp vec3 tmpvar_2;
					  highp vec2 tmpvar_3;
					  highp vec3 tmpvar_4;
					  highp vec3 tmpvar_5;
					  tmpvar_3.x = 1.0;
					  tmpvar_4.x = 1.0;
					  tmpvar_5.x = 1.0;
					  lowp vec3 tmpvar_6;
					  lowp vec3 tmpvar_7;
					  lowp vec4 tmpvar_8;
					  highp vec2 P_9;
					  P_9 = (tmpvar_3 + (_V_CW_MainTex_Scroll * _Time.x));
					  tmpvar_8 = texture2D (_MainTex, P_9);
					  tmpvar_6 = (tmpvar_8.xyz * _Color.xyz);
					  mediump vec3 inVec_10;
					  inVec_10 = tmpvar_4;
					  tmpvar_7 = ((textureCube (_V_CW_Cube, tmpvar_5).xyz * _V_CW_ReflectColor.xyz) * clamp ((
					    (tmpvar_8.w * _Color.w)
					   + _V_CW_ReflectStrengthAlphaOffset), 0.0, 1.0));
					  mediump float tmpvar_11;
					  tmpvar_11 = pow ((1.0 - max (0.0, 
					    dot ((inVec_10 * inversesqrt(max (0.001, 
					      dot (inVec_10, inVec_10)
					    ))), tmpvar_2)
					  )), _V_CW_Rim_Power);
					  mediump vec3 tmpvar_12;
					  tmpvar_12 = mix (tmpvar_7, _V_CW_Rim_Color.xyz, vec3(tmpvar_11));
					  tmpvar_7 = tmpvar_12;
					  mediump vec3 tmpvar_13;
					  tmpvar_13 = mix (tmpvar_6, _V_CW_Rim_Color.xyz, vec3(tmpvar_11));
					  tmpvar_6 = tmpvar_13;
					  highp vec4 enc_14;
					  highp vec4 tmpvar_15;
					  tmpvar_15 = fract((vec4(1.0, 255.0, 65025.0, 1.658138e+07) * min (
					    ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) + unity_LightShadowBias.x) * _LightPositionRange.w)
					  , 0.999)));
					  enc_14 = (tmpvar_15 - (tmpvar_15.yzww * 0.003921569));
					  tmpvar_1 = enc_14;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_SPECULAR" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "_EMISSION" "V_CW_SPECULAR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "_EMISSION_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "_EMISSION" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "_NORMALMAP_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "_EMISSION" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" "V_CW_SPECULAR_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "_EMISSION" "V_CW_SPECULAR" "V_CW_VERTEX_COLOR" "_NORMALMAP" "V_CW_REFLECTIVE_OFF" "V_CW_RIM_OFF" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
SubProgram "gles " {
Keywords { "SHADOWS_CUBE" "V_CW_VERTEX_COLOR_OFF" "_EMISSION_OFF" "_NORMALMAP_OFF" "V_CW_SPECULAR_OFF" "V_CW_RIM" "V_CW_REFLECTIVE" }
					"!!GLES"
}
}
 }
}
Fallback "Hidden/VacuumShaders/Curved World/VertexLit/Diffuse"
}